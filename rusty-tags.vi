!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl<'de, 'a, A> MapAccess<'de> for &'a mut A$/;"	c
A	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl<'de, 'a, A> SeqAccess<'de> for &'a mut A$/;"	c
Abort	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    Abort,$/;"	e	enum:Retry
About	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for About {}$/;"	c
About	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct About {$/;"	s
AboutDriveThemes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for AboutDriveThemes {}$/;"	c
AboutDriveThemes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for AboutDriveThemes {}$/;"	c
AboutDriveThemes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct AboutDriveThemes {$/;"	s
AboutGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> AboutGetCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
AboutGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for AboutGetCall<'a, C, A> {}$/;"	c
AboutGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct AboutGetCall<'a, C, A>$/;"	s
AboutMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> AboutMethods<'a, C, A> {$/;"	c
AboutMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for AboutMethods<'a, C, A> {}$/;"	c
AboutMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct AboutMethods<'a, C, A>$/;"	s
AboutStorageQuota	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for AboutStorageQuota {}$/;"	c
AboutStorageQuota	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for AboutStorageQuota {}$/;"	c
AboutStorageQuota	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct AboutStorageQuota {$/;"	s
AboutTeamDriveThemes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for AboutTeamDriveThemes {}$/;"	c
AboutTeamDriveThemes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for AboutTeamDriveThemes {}$/;"	c
AboutTeamDriveThemes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct AboutTeamDriveThemes {$/;"	s
AbsolutePath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    AbsolutePath(String),$/;"	e	enum:RequestUri
AbsoluteUri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    AbsoluteUri(Url),$/;"	e	enum:RequestUri
Accept	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept.rs	/^impl Accept {$/;"	c
Accepted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Accepted,$/;"	e	enum:StatusCode
AccessControlAllowCredentials	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^impl Display for AccessControlAllowCredentials {$/;"	c
AccessControlAllowCredentials	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^impl Header for AccessControlAllowCredentials {$/;"	c
AccessControlAllowCredentials	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^impl HeaderFormat for AccessControlAllowCredentials {$/;"	c
AccessControlAllowCredentials	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^pub struct AccessControlAllowCredentials;$/;"	s
AccessControlAllowOrigin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^impl Display for AccessControlAllowOrigin {$/;"	c
AccessControlAllowOrigin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^impl Header for AccessControlAllowOrigin {$/;"	c
AccessControlAllowOrigin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^impl HeaderFormat for AccessControlAllowOrigin {$/;"	c
AccessControlAllowOrigin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^pub enum AccessControlAllowOrigin {$/;"	g
AccessDenied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    AccessDenied,$/;"	e	enum:PollError
Action	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^enum Action {$/;"	g
Adapter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^        impl<'ser, W, F> Write for Adapter<'ser, W, F>$/;"	c	function:collect_str
Adapter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^        struct Adapter<'ser, W: 'ser, F: 'ser> {$/;"	s	function:collect_str
AddWatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    AddWatch(PathBuf, RecursiveMode, Sender<Result<()>>),$/;"	e	enum:EventLoopMsg
After	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    After(Duration),$/;"	e	enum:Retry
All	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    All,$/;"	e	enum:MediaDesc
AllArgsOverrideSelf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    AllArgsOverrideSelf,$/;"	e	enum:AppSettings
AllFrom	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    AllFrom(u64),$/;"	e	enum:ByteRangeSpec
AllowExternalSubcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    AllowExternalSubcommands,$/;"	e	enum:AppSettings
AllowInvalidUtf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    AllowInvalidUtf8,$/;"	e	enum:AppSettings
AllowLeadingHyphen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    AllowLeadingHyphen,$/;"	e	enum:AppSettings
AllowLeadingHyphen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    AllowLeadingHyphen,$/;"	e	enum:ArgSettings
AllowMissingPositional	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    AllowMissingPositional,$/;"	e	enum:AppSettings
AllowNegativeNumbers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    AllowNegativeNumbers,$/;"	e	enum:AppSettings
AlreadyReported	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    AlreadyReported,$/;"	e	enum:StatusCode
Alternate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Alternate,$/;"	e	enum:RelationType
Always	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    Always,$/;"	e	enum:ColorWhen
Any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^    Any,$/;"	e	enum:AccessControlAllowOrigin
AnyArg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^pub trait AnyArg<'n, 'e>: std_fmt::Display {$/;"	i
AnyTerminal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^enum AnyTerminal {$/;"	g
AnyTerminal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl AnyTerminal {$/;"	c
App	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^impl<'b, 'c> DispOrder for App<'b, 'c> {$/;"	c
App	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^impl<'a, 'b> App<'a, 'b> {$/;"	c
App	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^impl<'a, 'b> Clone for App<'a, 'b> {$/;"	c
App	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^impl<'a> From<&'a Yaml> for App<'a, 'a> {$/;"	c
App	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^impl<'n, 'e> AnyArg<'n, 'e> for App<'n, 'e> {$/;"	c
App	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^impl<'n, 'e> fmt::Display for App<'n, 'e> {$/;"	c
App	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^pub struct App<'a, 'b>$/;"	s
AppFlags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^impl AppFlags {$/;"	c
AppFlags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^impl BitOr for AppFlags {$/;"	c
AppFlags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^impl Default for AppFlags {$/;"	c
AppFlags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^pub struct AppFlags(Flags);$/;"	s
AppMeta	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^impl<'b> AppMeta<'b> {$/;"	c
AppMeta	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^pub struct AppMeta<'b> {$/;"	s
AppSettings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^impl FromStr for AppSettings {$/;"	c
AppSettings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^pub enum AppSettings {$/;"	g
Appdata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    Appdata,$/;"	e	enum:Scope
Appendix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Appendix,$/;"	e	enum:RelationType
ApplicationSecret	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub struct ApplicationSecret {$/;"	s
Arc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain + ?Sized> Drain for Arc<D> {$/;"	c
Arc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> KV for Arc<T>$/;"	c
Arc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> Value for Arc<T>$/;"	c
ArcWeak	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for ArcWeak<T>$/;"	c
ArcWeak	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for ArcWeak<T>$/;"	c
Arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^impl<'a, 'b, 'z> From<&'z Arg<'a, 'b>> for Arg<'a, 'b> {$/;"	c
Arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^impl<'a, 'b> Arg<'a, 'b> {$/;"	c
Arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^impl<'n, 'e> PartialEq for Arg<'n, 'e> {$/;"	c
Arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^pub struct Arg<'a, 'b>$/;"	s
ArgEnum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^    pub trait ArgEnum {}$/;"	i	module:derive
ArgFlags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^impl ArgFlags {$/;"	c
ArgFlags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^impl Default for ArgFlags {$/;"	c
ArgFlags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^pub struct ArgFlags(Flags);$/;"	s
ArgGroup	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^impl<'a, 'z> From<&'z ArgGroup<'a>> for ArgGroup<'a> {$/;"	c
ArgGroup	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^impl<'a> ArgGroup<'a> {$/;"	c
ArgGroup	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^impl<'a> Clone for ArgGroup<'a> {$/;"	c
ArgGroup	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^impl<'a> Debug for ArgGroup<'a> {$/;"	c
ArgGroup	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^impl<'a> From<&'a BTreeMap<Yaml, Yaml>> for ArgGroup<'a> {$/;"	c
ArgGroup	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^pub struct ArgGroup<'a> {$/;"	s
ArgMatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^impl<'a> ArgMatcher<'a> {$/;"	c
ArgMatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^impl<'a> Default for ArgMatcher<'a> {$/;"	c
ArgMatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^impl<'a> Into<ArgMatches<'a>> for ArgMatcher<'a> {$/;"	c
ArgMatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^pub struct ArgMatcher<'a>(pub ArgMatches<'a>);$/;"	s
ArgMatches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> ArgMatches<'a> {$/;"	c
ArgMatches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> Default for ArgMatches<'a> {$/;"	c
ArgMatches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^pub struct ArgMatches<'a> {$/;"	s
ArgRequiredElseHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ArgRequiredElseHelp,$/;"	e	enum:AppSettings
ArgSettings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^impl FromStr for ArgSettings {$/;"	c
ArgSettings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^pub enum ArgSettings {$/;"	g
ArgWithDisplay	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^trait ArgWithDisplay<'b, 'c>: AnyArg<'b, 'c> + Display {}$/;"	i
ArgWithOrder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^trait ArgWithOrder<'b, 'c>: ArgWithDisplay<'b, 'c> + DispOrder {$/;"	i
ArgsNegateSubcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ArgsNegateSubcommands,$/;"	e	enum:AppSettings
ArgumentConflict	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    ArgumentConflict,$/;"	e	enum:ErrorKind
ArgumentNotFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    ArgumentNotFound,$/;"	e	enum:ErrorKind
Arguments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<'a> Serialize for fmt::Arguments<'a> {$/;"	c
Arguments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a> Value for fmt::Arguments<'a> {$/;"	c
Array	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    Array(Vec<Value>),$/;"	e	enum:Value
ArrayInPlaceVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for ArrayVisitor<[T; 0]> {$/;"	c
ArrayVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<A> ArrayVisitor<A> {$/;"	c
ArrayVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
AsCast	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^pub trait AsCast: AsPrimitive {$/;"	i
AsFmtSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<F> Serializer for AsFmtSerializer<F>$/;"	c
AsFmtSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^struct AsFmtSerializer<F>(pub F)$/;"	s
AsPrimitive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^pub trait AsPrimitive: Sized + Copy + PartialOrd {$/;"	i
AsciiControl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    AsciiControl(u8),$/;"	e	enum:CharEscape
Async	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl Async {$/;"	c
Async	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl Drain for Async {$/;"	c
Async	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl Drop for Async {$/;"	c
Async	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^pub struct Async {$/;"	s
AsyncBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl<D> AsyncBuilder<D>$/;"	c
AsyncBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^pub struct AsyncBuilder<D>$/;"	s
AsyncCore	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl AsyncCore {$/;"	c
AsyncCore	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl Drain for AsyncCore {$/;"	c
AsyncCore	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl Drop for AsyncCore {$/;"	c
AsyncCore	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^pub struct AsyncCore {$/;"	s
AsyncCoreBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl<D> AsyncCoreBuilder<D>$/;"	c
AsyncCoreBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^pub struct AsyncCoreBuilder<D>$/;"	s
AsyncError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl<T> From<crossbeam_channel::SendError<T>> for AsyncError {$/;"	c
AsyncError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl<T> From<crossbeam_channel::TrySendError<T>> for AsyncError {$/;"	c
AsyncError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl<T> From<std::sync::PoisonError<T>> for AsyncError {$/;"	c
AsyncError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^pub enum AsyncError {$/;"	g
AsyncGuard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl Drop for AsyncGuard {$/;"	c
AsyncGuard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^pub struct AsyncGuard {$/;"	s
AsyncMsg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^enum AsyncMsg {$/;"	g
AsyncRecord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^struct AsyncRecord {$/;"	s
AsyncResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^pub type AsyncResult<T> = std::result::Result<T, AsyncError>;$/;"	t
Attachment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    Attachment,$/;"	e	enum:DispositionType
Aural	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Aural,$/;"	e	enum:MediaDesc
Authenticator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^impl<D, S, C> Authenticator<D, S, C>$/;"	c
Authenticator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^impl<D, S, C> GetToken for Authenticator<D, S, C>$/;"	c
Authenticator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^pub struct Authenticator<D, S, C> {$/;"	s
AuthenticatorDelegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^pub trait AuthenticatorDelegate {$/;"	i
Authority	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    Authority(String),$/;"	e	enum:RequestUri
Authorization	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl<S: Scheme + Any> Header for Authorization<S> where <S as FromStr>::Err: 'static {$/;"	c
Authorization	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl<S: Scheme + Any> HeaderFormat for Authorization<S> where <S as FromStr>::Err: 'static {$/;"	c
Authorization	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl<S: Scheme> Deref for Authorization<S> {$/;"	c
Authorization	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl<S: Scheme> DerefMut for Authorization<S> {$/;"	c
Authorization	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^pub struct Authorization<S: Scheme>(pub S);$/;"	s
Auto	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    Auto,$/;"	e	enum:ColorWhen
B	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    impl<A, B> Pair for (A, B) {$/;"	c	module:private
BTreeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, K, V, E> IntoDeserializer<'de, E> for BTreeMap<K, V>$/;"	c
BTreeSet	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for BTreeSet<T>$/;"	c
Backspace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    Backspace,$/;"	e	enum:CharEscape
BadBody	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        impl ::std::io::Read for BadBody {$/;"	c	function:tests::test_request_body_error_is_returned
BadBody	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        struct BadBody;$/;"	s	function:tests::test_request_body_error_is_returned
BadGateway	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    BadGateway,$/;"	e	enum:StatusCode
BadRequest	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    BadRequest(ErrorResponse),$/;"	e	enum:Error
BadRequest	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    BadRequest,$/;"	e	enum:StatusCode
Base	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^impl<'n, 'e, 'z> From<&'z Arg<'n, 'e>> for Base<'n, 'e> {$/;"	c
Base	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^impl<'n, 'e> Base<'n, 'e> {$/;"	c
Base	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^impl<'n, 'e> PartialEq for Base<'n, 'e> {$/;"	c
Base	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^pub struct Base<'a, 'b>$/;"	s
Base64Display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^impl<'a> Base64Display<'a> {$/;"	c
Base64Display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^impl<'a> Display for Base64Display<'a> {$/;"	c
Base64Display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^pub struct Base64Display<'a> {$/;"	s
Bash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    Bash,$/;"	e	enum:Shell
BashGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^impl<'a, 'b> BashGen<'a, 'b> {$/;"	c
BashGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^pub struct BashGen<'a, 'b>$/;"	s
Basic	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl FromStr for Basic {$/;"	c
Basic	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl Scheme for Basic {$/;"	c
Basic	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^pub struct Basic {$/;"	s
Bcrypt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    Bcrypt,$/;"	e	enum:CharacterSet
Bearer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl FromStr for Bearer {$/;"	c
Bearer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl Scheme for Bearer {$/;"	c
Bearer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^pub struct Bearer {$/;"	s
Bearer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    Bearer,$/;"	e	enum:TokenType
Big5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Big5,$/;"	e	enum:Charset
Bigint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bignum.rs	/^impl Default for Bigint {$/;"	c
Bigint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bignum.rs	/^impl Math for Bigint {$/;"	c
Bigint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bignum.rs	/^pub(crate) struct Bigint {$/;"	s
BinHex	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    BinHex,$/;"	e	enum:CharacterSet
Block	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    Block,$/;"	e	enum:OverflowStrategy
Body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a, R: Read> From<&'a mut R> for Body<'a> {$/;"	c
Body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a> Body<'a> {$/;"	c
Body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a> Read for Body<'a> {$/;"	c
Body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub enum Body<'a> {$/;"	g
Body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^enum Body {$/;"	g
Bookmark	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Bookmark,$/;"	e	enum:RelationType
Bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Bool(bool),$/;"	e	enum:Unexpected
Bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Bool(bool),$/;"	e	enum:content::Content
Bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Bool(bool),$/;"	e	enum:content::Content
Bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    Bool(bool),$/;"	e	enum:Value
BoolVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Visitor<'de> for BoolVisitor {$/;"	c
BoolVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
Boolean	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Boolean,$/;"	e	enum:Unsupported
Borrowed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    Borrowed(&'b T),$/;"	e	enum:Reference
BorrowedBytesDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> BorrowedBytesDeserializer<'de, E> {$/;"	c
BorrowedBytesDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for BorrowedBytesDeserializer<'de, E>$/;"	c
BorrowedBytesDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedCowStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> BorrowedCowStrDeserializer<'de> {$/;"	c
BorrowedCowStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> de::Deserializer<'de> for BorrowedCowStrDeserializer<'de> {$/;"	c
BorrowedCowStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> de::EnumAccess<'de> for BorrowedCowStrDeserializer<'de> {$/;"	c
BorrowedCowStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct BorrowedCowStrDeserializer<'de> {$/;"	s
BorrowedKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a> KV for BorrowedKV<'a> {$/;"	c
BorrowedKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct BorrowedKV<'a>($/;"	s
BorrowedRawDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> MapAccess<'de> for BorrowedRawDeserializer<'de> {$/;"	c
BorrowedRawDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^pub struct BorrowedRawDeserializer<'de> {$/;"	s
BorrowedStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> BorrowedStrDeserializer<'de, E> {$/;"	c
BorrowedStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
Bound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Bound<T>$/;"	c
Bound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for Bound<T>$/;"	c
BoundVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for BoundVisitor<T>$/;"	c	function:deserialize
BoundVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s	function:deserialize
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl Clone for Box<HeaderFormat + Send + Sync> {$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl fmt::Debug for Box<NetworkStream + Send> {$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<T: NetworkStream + Send> From<T> for Box<NetworkStream + Send> {$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl Clone for Box<RawValue> {$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl Default for Box<RawValue> {$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> Deserialize<'de> for Box<RawValue> {$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain + ?Sized> Drain for Box<D> {$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> KV for Box<T>$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> Value for Box<T>$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl RecordDecorator for Box<dyn RecordDecorator> {$/;"	c
Box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<T: ?Sized> Decorator for Box<T>$/;"	c
BoxedFromString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> DeserializeSeed<'de> for BoxedFromString {$/;"	c
BoxedFromString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> Visitor<'de> for BoxedFromString {$/;"	c
BoxedFromString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^pub struct BoxedFromString;$/;"	s
BoxedVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^        impl<'de> Visitor<'de> for BoxedVisitor {$/;"	c	method:Box::deserialize
BoxedVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^        struct BoxedVisitor;$/;"	s	method:Box::deserialize
Braille	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Braille,$/;"	e	enum:MediaDesc
BufBody	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    BufBody(&'a [u8] , usize),$/;"	e	enum:Body
BufReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^impl<R: Read> BufRead for BufReader<R> {$/;"	c
BufReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^impl<R: Read> BufReader<R> {$/;"	c
BufReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^impl<R: Read> Read for BufReader<R> {$/;"	c
BufReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^pub struct BufReader<R> {$/;"	s
Builder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^impl<'a, 'b> Builder<'a, 'b> {$/;"	c
Builder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^impl<'a, 'b> Default for Builder<'a, 'b> {$/;"	c
Builder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^pub struct Builder<'a, 'b> {$/;"	s
ByteArray	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    ByteArray,$/;"	e	enum:Unsupported
ByteBuf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        ByteBuf(Vec<u8>),$/;"	e	enum:content::Content
ByteRangeSpec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^impl FromStr for ByteRangeSpec {$/;"	c
ByteRangeSpec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^impl fmt::Display for ByteRangeSpec {$/;"	c
ByteRangeSpec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^pub enum ByteRangeSpec {$/;"	g
Bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^    Bytes,$/;"	e	enum:RangeUnit
Bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^    Bytes {$/;"	e	enum:ContentRangeSpec
Bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    Bytes(Vec<ByteRangeSpec>),$/;"	e	enum:Range
Bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Bytes(&'a [u8]),$/;"	e	enum:Unexpected
Bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Bytes(&'de [u8]),$/;"	e	enum:content::Content
Bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Bytes(Vec<u8>),$/;"	e	enum:content::Content
BytesDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'de, 'a, E> Deserializer<'de> for BytesDeserializer<'a, E>$/;"	c
BytesDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'a> Visitor<'a> for BytesVisitor {$/;"	c
BytesVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
CFRunLoopIsWaiting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    pub fn CFRunLoopIsWaiting(runloop: cf::CFRunLoopRef) -> bool;$/;"	f
COOKIE_COUNTER	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^static mut COOKIE_COUNTER: u32 = 0;$/;"	v
CStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for CStr {$/;"	c
CString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for CString {$/;"	c
CString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for CString {$/;"	c
CStringVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Visitor<'de> for CStringVisitor {$/;"	c
CStringVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CacheControl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^impl Header for CacheControl {$/;"	c
CacheControl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^impl HeaderFormat for CacheControl {$/;"	c
CacheControl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^impl fmt::Display for CacheControl {$/;"	c
CacheControl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^pub struct CacheControl(pub Vec<CacheDirective>);$/;"	s
CacheDirective	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^impl FromStr for CacheDirective {$/;"	c
CacheDirective	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^impl fmt::Display for CacheDirective {$/;"	c
CacheDirective	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^pub enum CacheDirective {$/;"	g
CallBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait CallBuilder {}$/;"	i
Cancelled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    Cancelled,$/;"	e	enum:Error
CarriageReturn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    CarriageReturn,$/;"	e	enum:CharEscape
CaseInsensitive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    CaseInsensitive,$/;"	e	enum:ArgSettings
Category	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^pub enum Category {$/;"	g
Cell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Cell<T>$/;"	c
Cell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for Cell<T>$/;"	c
Change	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Resource for Change {}$/;"	c
Change	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct Change {$/;"	s
ChangeGetStartPageTokenCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ChangeGetStartPageTokenCall<'a, C, A> {}$/;"	c
ChangeGetStartPageTokenCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ChangeGetStartPageTokenCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth/;"	c
ChangeGetStartPageTokenCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ChangeGetStartPageTokenCall<'a, C, A>$/;"	s
ChangeList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for ChangeList {}$/;"	c
ChangeList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ChangeList {$/;"	s
ChangeListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ChangeListCall<'a, C, A> {}$/;"	c
ChangeListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ChangeListCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
ChangeListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ChangeListCall<'a, C, A>$/;"	s
ChangeMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ChangeMethods<'a, C, A> {$/;"	c
ChangeMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for ChangeMethods<'a, C, A> {}$/;"	c
ChangeMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ChangeMethods<'a, C, A>$/;"	s
ChangeWatchCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ChangeWatchCall<'a, C, A> {}$/;"	c
ChangeWatchCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ChangeWatchCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
ChangeWatchCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ChangeWatchCall<'a, C, A>$/;"	s
Channel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl RequestValue for Channel {}$/;"	c
Channel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Resource for Channel {}$/;"	c
Channel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for Channel {}$/;"	c
Channel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct Channel {$/;"	s
ChannelMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ChannelMethods<'a, C, A> {$/;"	c
ChannelMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for ChannelMethods<'a, C, A> {}$/;"	c
ChannelMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ChannelMethods<'a, C, A>$/;"	s
ChannelStopCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ChannelStopCall<'a, C, A> {}$/;"	c
ChannelStopCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ChannelStopCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
ChannelStopCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ChannelStopCall<'a, C, A>$/;"	s
Chapter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Chapter,$/;"	e	enum:RelationType
Char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Char(char),$/;"	e	enum:Unexpected
Char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Char,$/;"	e	enum:Unsupported
CharEscape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl CharEscape {$/;"	c
CharEscape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub enum CharEscape {$/;"	g
CharVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Visitor<'de> for CharVisitor {$/;"	c
CharVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct CharVisitor;$/;"	s
CharacterSet	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^impl CharacterSet {$/;"	c
CharacterSet	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^pub enum CharacterSet {$/;"	g
Charset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^impl Charset {$/;"	c
Charset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^impl Display for Charset {$/;"	c
Charset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^impl FromStr for Charset {$/;"	c
Charset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^pub enum Charset{$/;"	g
CheckOwned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^        impl Drain for CheckOwned {$/;"	c	function:std_only::multichain
CheckOwned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^        struct CheckOwned;$/;"	s	function:std_only::multichain
Chmod	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Chmod(PathBuf),$/;"	e	enum:DebouncedEvent
Chunk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl FromStr for Chunk {$/;"	c
Chunk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl fmt::Display for Chunk {$/;"	c
Chunk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct Chunk {$/;"	s
Chunked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    Chunked,$/;"	e	enum:Encoding
Chunked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    Chunked,$/;"	e	enum:Body
ChunkedBody	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    ChunkedBody(&'a mut (Read + 'a)),$/;"	e	enum:Body
ChunkedEncoder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^impl ChunkedEncoder {$/;"	c
ChunkedEncoder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^pub struct ChunkedEncoder {$/;"	s
ChunkedReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    ChunkedReader(R, Option<u64>),$/;"	e	enum:HttpReader
ChunkedWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    ChunkedWriter(W),$/;"	e	enum:HttpWriter
Claims	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^struct Claims {$/;"	s
ClapApp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^    pub trait ClapApp: IntoApp + FromArgMatches + Sized {$/;"	i	module:derive
Client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl Client {$/;"	c
Client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl Default for Client {$/;"	c
Client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl fmt::Debug for Client {$/;"	c
Client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub struct Client {$/;"	s
ClientError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    ClientError,$/;"	e	enum:StatusClass
Close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    Close,$/;"	e	enum:ConnectionOption
ColorAlways	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ColorAlways,$/;"	e	enum:AppSettings
ColorAuto	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ColorAuto,$/;"	e	enum:AppSettings
ColorNever	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ColorNever,$/;"	e	enum:AppSettings
ColorWhen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^pub enum ColorWhen {$/;"	g
ColoredHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ColoredHelp,$/;"	e	enum:AppSettings
Colorizer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^impl Colorizer {$/;"	c
Colorizer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^impl Default for Colorizer {$/;"	c
Colorizer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^pub struct Colorizer {$/;"	s
ColorizerOption	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^pub struct ColorizerOption {$/;"	s
Comment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl RequestValue for Comment {}$/;"	c
Comment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Resource for Comment {}$/;"	c
Comment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for Comment {}$/;"	c
Comment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct Comment {$/;"	s
CommentCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for CommentCreateCall<'a, C, A> {}$/;"	c
CommentCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CommentCreateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToke/;"	c
CommentCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct CommentCreateCall<'a, C, A>$/;"	s
CommentDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for CommentDeleteCall<'a, C, A> {}$/;"	c
CommentDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CommentDeleteCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToke/;"	c
CommentDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct CommentDeleteCall<'a, C, A>$/;"	s
CommentGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for CommentGetCall<'a, C, A> {}$/;"	c
CommentGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CommentGetCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
CommentGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct CommentGetCall<'a, C, A>$/;"	s
CommentList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for CommentList {}$/;"	c
CommentList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct CommentList {$/;"	s
CommentListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for CommentListCall<'a, C, A> {}$/;"	c
CommentListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CommentListCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
CommentListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct CommentListCall<'a, C, A>$/;"	s
CommentMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CommentMethods<'a, C, A> {$/;"	c
CommentMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for CommentMethods<'a, C, A> {}$/;"	c
CommentMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct CommentMethods<'a, C, A>$/;"	s
CommentQuotedFileContent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for CommentQuotedFileContent {}$/;"	c
CommentQuotedFileContent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for CommentQuotedFileContent {}$/;"	c
CommentQuotedFileContent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct CommentQuotedFileContent {$/;"	s
CommentUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for CommentUpdateCall<'a, C, A> {}$/;"	c
CommentUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CommentUpdateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToke/;"	c
CommentUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct CommentUpdateCall<'a, C, A>$/;"	s
CompactFormat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<D> CompactFormat<D>$/;"	c
CompactFormat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<D> Drain for CompactFormat<D>$/;"	c
CompactFormat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct CompactFormat<D>$/;"	s
CompactFormatBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<D> CompactFormatBuilder<D>$/;"	c
CompactFormatBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct CompactFormatBuilder<D>$/;"	s
CompactFormatSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> CompactFormatSerializer<'a> {$/;"	c
CompactFormatSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> slog::ser::Serializer for CompactFormatSerializer<'a> {$/;"	c
CompactFormatSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct CompactFormatSerializer<'a> {$/;"	s
ComplGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^impl<'a, 'b> ComplGen<'a, 'b> {$/;"	c
ComplGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^pub struct ComplGen<'a, 'b>$/;"	s
Compound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::SerializeMap for Compound<'a, W, F>$/;"	c
Compound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::SerializeSeq for Compound<'a, W, F>$/;"	c
Compound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::SerializeStruct for Compound<'a, W, F>$/;"	c
Compound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::SerializeStructVariant for Compound<'a, W, F>$/;"	c
Compound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::SerializeTuple for Compound<'a, W, F>$/;"	c
Compound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::SerializeTupleStruct for Compound<'a, W, F>$/;"	c
Compound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::SerializeTupleVariant for Compound<'a, W, F>$/;"	c
Compound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub enum Compound<'a, W: 'a, F: 'a> {$/;"	g
Compress	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    Compress,$/;"	e	enum:Encoding
Config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^impl Config {$/;"	c
Config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^pub struct Config {$/;"	s
Config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl Default for Config {$/;"	c
Config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^pub struct Config {$/;"	s
Config2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^struct Config2 {$/;"	s
Conflict	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Conflict,$/;"	e	enum:StatusCode
ConnAdapter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<C: NetworkConnector<Stream=S> + Send + Sync, S: NetworkStream + Send>$/;"	c
ConnAdapter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^struct ConnAdapter<C: NetworkConnector + Send + Sync>(C);$/;"	s
Connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Connect,$/;"	e	enum:Method
Connection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^impl Connection {$/;"	c
ConnectionHeader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    ConnectionHeader(UniCase<String>),$/;"	e	enum:ConnectionOption
ConnectionOption	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^impl Display for ConnectionOption {$/;"	c
ConnectionOption	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^impl FromStr for ConnectionOption {$/;"	c
ConnectionOption	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^pub enum ConnectionOption {$/;"	g
Connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl NetworkConnector for Connector {$/;"	c
Connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^struct Connector(Box<NetworkConnector<Stream=Box<NetworkStream + Send>> + Send + Sync>);$/;"	s
ConsoleApplicationSecret	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub struct ConsoleApplicationSecret {$/;"	s
ContainsLast	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ContainsLast,$/;"	e	enum:AppSettings
Content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Content(Content<'de>),$/;"	e	enum:content::TagOrContent
Content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagContentOtherField
Content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagOrContentField
Content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> Content<'de> {$/;"	c	module:content
Content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> Deserialize<'de> for Content<'de> {$/;"	c	module:content
Content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g	module:content
Content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl Serialize for Content {$/;"	c	module:content
Content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub enum Content {$/;"	g	module:content
ContentDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E> {$/;"	c	module:content
ContentDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> de::IntoDeserializer<'de, E> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s	module:content
ContentDisposition	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^impl Header for ContentDisposition {$/;"	c
ContentDisposition	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^impl HeaderFormat for ContentDisposition {$/;"	c
ContentDisposition	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^impl fmt::Display for ContentDisposition {$/;"	c
ContentDisposition	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^pub struct ContentDisposition {$/;"	s
ContentLength	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_length.rs	/^impl Header for ContentLength {$/;"	c
ContentLength	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_length.rs	/^impl HeaderFormat for ContentLength {$/;"	c
ContentLength	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_length.rs	/^impl fmt::Display for ContentLength {$/;"	c
ContentLength	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_length.rs	/^pub struct ContentLength(pub u64);$/;"	s
ContentRange	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl Header for ContentRange {$/;"	c
ContentRange	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl HeaderFormat for ContentRange {$/;"	c
ContentRange	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct ContentRange {$/;"	s
ContentRangeSpec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^impl Display for ContentRangeSpec {$/;"	c
ContentRangeSpec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^impl FromStr for ContentRangeSpec {$/;"	c
ContentRangeSpec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^pub enum ContentRangeSpec {$/;"	g
ContentRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E> {$/;"	c	module:content
ContentRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a, E> Deserializer<'de> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a, E> de::IntoDeserializer<'de, E> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s	module:content
ContentSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> ContentSerializer<E> {$/;"	c	module:content
ContentSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> Serializer for ContentSerializer<E>$/;"	c	module:content
ContentSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s	module:content
ContentType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_type.rs	/^impl ContentType {$/;"	c
ContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> Visitor<'de> for ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s	module:content
Contents	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Contents,$/;"	e	enum:RelationType
Continue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^    Continue$/;"	e	enum:Expect
Continue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Continue,$/;"	e	enum:StatusCode
ControlCharacterWhileParsingString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    ControlCharacterWhileParsingString,$/;"	e	enum:ErrorCode
Cookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cookie.rs	/^impl Header for Cookie {$/;"	c
Cookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cookie.rs	/^impl HeaderFormat for Cookie {$/;"	c
Cookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cookie.rs	/^pub struct Cookie(pub Vec<String>);$/;"	s
Copied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    Copied(&'c T),$/;"	e	enum:Reference
CopyUntilResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^enum CopyUntilResult {$/;"	g
Copyright	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Copyright,$/;"	e	enum:RelationType
CountingWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> CountingWriter<'a> {$/;"	c
CountingWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> io::Write for CountingWriter<'a> {$/;"	c
CountingWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct CountingWriter<'a> {$/;"	s
Cow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, 'a, T: ?Sized> Deserialize<'de> for Cow<'a, T>$/;"	c
Cow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for Cow<'a, str>$/;"	c
CowBytesVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowBytesVisitor {$/;"	c	function:borrow_cow_bytes
CowBytesVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s	function:borrow_cow_bytes
CowStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl AsRef<str> for CowStr {$/;"	c
CowStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl Deref for CowStr {$/;"	c
CowStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl DerefMut for CowStr {$/;"	c
CowStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl fmt::Debug for CowStr {$/;"	c
CowStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl fmt::Display for CowStr {$/;"	c
CowStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^struct CowStr(Cow<'static, str>);$/;"	s
CowStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'a, E> Clone for CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowStrVisitor {$/;"	c	function:borrow_cow_str
CowStrVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s	function:borrow_cow_str
CrazyLength	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    impl Header for CrazyLength {$/;"	c	module:tests
CrazyLength	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    impl HeaderFormat for CrazyLength {$/;"	c	module:tests
CrazyLength	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    struct CrazyLength(Option<bool>, usize);$/;"	s	module:tests
Create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Create(PathBuf),$/;"	e	enum:DebouncedEvent
Created	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Created,$/;"	e	enum:StatusCode
Critical	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Critical,$/;"	e	enum:FilterLevel
Critical	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Critical,$/;"	e	enum:Level
Crypt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    Crypt,$/;"	e	enum:CharacterSet
Current	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Current,$/;"	e	enum:RelationType
D	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a, D: Drain + 'a> Drain for &'a D {$/;"	c
D	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a, D: Drain + 'a> Drain for &'a mut D {$/;"	c
Data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    Data,$/;"	e	enum:Category
Date	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^    Date(HttpDate),$/;"	e	enum:IfRange
Debounce	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^impl Debounce {$/;"	c
Debounce	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^pub struct Debounce {$/;"	s
Debounced	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    Debounced {$/;"	e	enum:EventTx
DebouncedEvent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^impl PartialEq for DebouncedEvent {$/;"	c
DebouncedEvent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub enum DebouncedEvent {$/;"	g
DebouncedTx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    DebouncedTx {$/;"	e	enum:EventTx
Debug	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Debug,$/;"	e	enum:FilterLevel
Debug	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Debug,$/;"	e	enum:Level
DecodeError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^impl error::Error for DecodeError {$/;"	c
DecodeError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^impl fmt::Display for DecodeError {$/;"	c
DecodeError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^pub enum DecodeError {$/;"	g
DecoderReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^impl<'a, R: Read> Read for DecoderReader<'a, R> {$/;"	c
DecoderReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^impl<'a, R: io::Read> DecoderReader<'a, R> {$/;"	c
DecoderReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^impl<'a, R: io::Read> fmt::Debug for DecoderReader<'a, R> {$/;"	c
DecoderReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^pub struct DecoderReader<'a, R: 'a + io::Read> {$/;"	s
Decorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub trait Decorator {$/;"	i
DefaultAuthenticatorDelegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^impl AuthenticatorDelegate for DefaultAuthenticatorDelegate {}$/;"	c
DefaultAuthenticatorDelegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^pub struct DefaultAuthenticatorDelegate;$/;"	s
DefaultConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub type DefaultConnector = HttpConnector;$/;"	t
DefaultDelegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl Delegate for DefaultDelegate {}$/;"	c
DefaultDelegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct DefaultDelegate;$/;"	s
Deflate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    Deflate,$/;"	e	enum:Encoding
Delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait Delegate {$/;"	i
Delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Delete,$/;"	e	enum:Method
DelimiterFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    DelimiterFound(usize),$/;"	e	enum:CopyUntilResult
DelimiterNotFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    DelimiterNotFound(usize),$/;"	e	enum:CopyUntilResult
DeriveDisplayOrder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    DeriveDisplayOrder,$/;"	e	enum:AppSettings
DescribedBy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    DescribedBy,$/;"	e	enum:RelationType
Deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for ! {$/;"	c
Deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for () {$/;"	c
Deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	i
DeserializeOwned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	i
DeserializeSeed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	i
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IntoDeserializer
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	i
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Deserializer = Self;$/;"	t	module:content
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    type Deserializer = <u32 as IntoDeserializer<'de, E>>::Deserializer;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IdentifierDeserializer
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'a> Deserializer<read::SliceRead<'a>> {$/;"	c
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'a> Deserializer<read::StrRead<'a>> {$/;"	c
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, 'a, R: Read<'de>> de::Deserializer<'de> for &'a mut Deserializer<R> {$/;"	c
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, R: Read<'de>> Deserializer<R> {$/;"	c
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, R> Deserializer<R>$/;"	c
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<R> Deserializer<read::IoRead<R>>$/;"	c
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^pub struct Deserializer<R> {$/;"	s
Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Deserializer = Self;$/;"	t	implementation:Value
Device	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    Device(String),$/;"	e	enum:FlowType
DeviceFlow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^impl<C> DeviceFlow<C>$/;"	c
DeviceFlow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^impl<C> Flow for DeviceFlow<C> {$/;"	c
DeviceFlow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^pub struct DeviceFlow<C> {$/;"	s
DeviceFlowState	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^enum DeviceFlowState {$/;"	g
Directive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^enum Directive {$/;"	g
DisableHelpFlags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    DisableHelpFlags,$/;"	e	enum:AppSettings
DisableHelpSubcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    DisableHelpSubcommand,$/;"	e	enum:AppSettings
DisableVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    DisableVersion,$/;"	e	enum:AppSettings
Discard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl Drain for Discard {$/;"	c
Discard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct Discard;$/;"	s
DiskTokenStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^impl DiskTokenStorage {$/;"	c
DiskTokenStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^impl TokenStorage for DiskTokenStorage {$/;"	c
DiskTokenStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^pub struct DiskTokenStorage {$/;"	s
DispOrder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^pub trait DispOrder {$/;"	i
Display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a> Value for std::path::Display<'a> {$/;"	c
DisplaySinkTestHelper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    impl SinkTestHelper for DisplaySinkTestHelper {$/;"	c	module:tests
DisplaySinkTestHelper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    struct DisplaySinkTestHelper;$/;"	s	module:tests
DispositionParam	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^pub enum DispositionParam {$/;"	g
DispositionType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^pub enum DispositionType {$/;"	g
DoNotMatchAgainstThisAndReadTheDocs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    DoNotMatchAgainstThisAndReadTheDocs,$/;"	e	enum:OverflowStrategy
DontCollapseArgsInUsage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    DontCollapseArgsInUsage,$/;"	e	enum:AppSettings
DontDelimitTrailingValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    DontDelimitTrailingValues,$/;"	e	enum:AppSettings
Drain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Drain(D::Err),$/;"	e	enum:MutexDrainError
Drain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait Drain {$/;"	i
Drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl RequestValue for Drive {}$/;"	c
Drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Resource for Drive {}$/;"	c
Drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for Drive {}$/;"	c
Drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct Drive {$/;"	s
DriveBackgroundImageFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for DriveBackgroundImageFile {}$/;"	c
DriveBackgroundImageFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for DriveBackgroundImageFile {}$/;"	c
DriveBackgroundImageFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveBackgroundImageFile {$/;"	s
DriveCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for DriveCapabilities {}$/;"	c
DriveCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for DriveCapabilities {}$/;"	c
DriveCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveCapabilities {$/;"	s
DriveCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for DriveCreateCall<'a, C, A> {}$/;"	c
DriveCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveCreateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
DriveCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveCreateCall<'a, C, A>$/;"	s
DriveDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for DriveDeleteCall<'a, C, A> {}$/;"	c
DriveDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveDeleteCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
DriveDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveDeleteCall<'a, C, A>$/;"	s
DriveGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for DriveGetCall<'a, C, A> {}$/;"	c
DriveGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveGetCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
DriveGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveGetCall<'a, C, A>$/;"	s
DriveHideCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for DriveHideCall<'a, C, A> {}$/;"	c
DriveHideCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveHideCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
DriveHideCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveHideCall<'a, C, A>$/;"	s
DriveHub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveHub<C, A>$/;"	c
DriveHub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> Hub for DriveHub<C, A> {}$/;"	c
DriveHub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveHub<C, A> {$/;"	s
DriveList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for DriveList {}$/;"	c
DriveList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveList {$/;"	s
DriveListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for DriveListCall<'a, C, A> {}$/;"	c
DriveListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveListCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
DriveListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveListCall<'a, C, A>$/;"	s
DriveMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveMethods<'a, C, A> {$/;"	c
DriveMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for DriveMethods<'a, C, A> {}$/;"	c
DriveMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveMethods<'a, C, A>$/;"	s
DriveRestrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for DriveRestrictions {}$/;"	c
DriveRestrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for DriveRestrictions {}$/;"	c
DriveRestrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveRestrictions {$/;"	s
DriveUnhideCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for DriveUnhideCall<'a, C, A> {}$/;"	c
DriveUnhideCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveUnhideCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
DriveUnhideCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveUnhideCall<'a, C, A>$/;"	s
DriveUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for DriveUpdateCall<'a, C, A> {}$/;"	c
DriveUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> DriveUpdateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
DriveUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct DriveUpdateCall<'a, C, A>$/;"	s
Drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    Drop,$/;"	e	enum:OverflowStrategy
DropAndReport	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    DropAndReport,$/;"	e	enum:OverflowStrategy
DummyNetworkStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl Read for DummyNetworkStream {$/;"	c
DummyNetworkStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl Write for DummyNetworkStream {$/;"	c
DummyNetworkStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl hyper::net::NetworkStream for DummyNetworkStream {$/;"	c
DummyNetworkStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct DummyNetworkStream;$/;"	s
Duplicate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D1: Drain, D2: Drain> Drain for Duplicate<D1, D2> {$/;"	c
Duplicate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D1: Drain, D2: Drain> Duplicate<D1, D2> {$/;"	c
Duplicate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct Duplicate<D1: Drain, D2: Drain>(pub D1, pub D2);$/;"	s
Duration	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for Duration {$/;"	c
Duration	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for Duration {$/;"	c
DurationVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:Duration::deserialize
DurationVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:SystemTime::deserialize
DurationVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:Duration::deserialize
DurationVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:SystemTime::deserialize
EMPTY	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^        static EMPTY: [OsString; 0] = [];$/;"	v	method:OsValues::default
EMPTY	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^        static EMPTY: [OsString; 0] = [];$/;"	v	method:Values::default
EMPTY	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^        static EMPTY: [usize; 0] = [];$/;"	v	method:Indices::default
ESCAPE	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^static ESCAPE: [bool; 256] = {$/;"	v
ESCAPE	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^static ESCAPE: [u8; 256] = [$/;"	v	method:Formatter::write_char_escape
Edit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Edit,$/;"	e	enum:RelationType
EditMedia	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    EditMedia,$/;"	e	enum:RelationType
Elvish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    Elvish,$/;"	e	enum:Shell
ElvishGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/elvish.rs	/^impl<'a, 'b> ElvishGen<'a, 'b> {$/;"	c
ElvishGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/elvish.rs	/^pub struct ElvishGen<'a, 'b>$/;"	s
Empty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    Empty,$/;"	e	enum:PtrMap
Empty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    Empty,$/;"	e	enum:Body
Empty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    Empty,$/;"	e	enum:State
EmptyReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    EmptyReader(R),$/;"	e	enum:HttpReader
EmptyValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    EmptyValue,$/;"	e	enum:ErrorKind
EmptyValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    EmptyValues,$/;"	e	enum:ArgSettings
EmptyWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    EmptyWriter(W),$/;"	e	enum:HttpWriter
Enclosure	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Enclosure,$/;"	e	enum:RelationType
Encode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/utf8.rs	/^impl Encode {$/;"	c
Encode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/utf8.rs	/^pub struct Encode {$/;"	s
EncoderWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^impl<'a, W: Write> Drop for EncoderWriter<'a, W> {$/;"	c
EncoderWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^impl<'a, W: Write> EncoderWriter<'a, W> {$/;"	c
EncoderWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^impl<'a, W: Write> Write for EncoderWriter<'a, W> {$/;"	c
EncoderWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^impl<'a, W: Write> fmt::Debug for EncoderWriter<'a, W> {$/;"	c
EncoderWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^pub struct EncoderWriter<'a, W: 'a + Write> {$/;"	s
Encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^impl fmt::Display for Encoding {$/;"	c
Encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^impl str::FromStr for Encoding {$/;"	c
Encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^pub enum Encoding {$/;"	g
EncodingExt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    EncodingExt(String)$/;"	e	enum:Encoding
End	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        End,$/;"	e	enum:range::Field
EndError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub struct EndError<W: Write>(io::Error, HttpWriter<W>);$/;"	s
EntityTag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^    EntityTag(EntityTag),$/;"	e	enum:IfRange
EntityTag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^impl Display for EntityTag {$/;"	c
EntityTag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^impl EntityTag {$/;"	c
EntityTag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^impl FromStr for EntityTag {$/;"	c
EntityTag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^pub struct EntityTag {$/;"	s
Entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^    pub type Entry<'a, V> = btree_map::Entry<'a, usize, V>;$/;"	t	module:vec_map
Entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^pub enum Entry<'a, K: 'a, V: 'a> {$/;"	g
Entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl<'a> Entry<'a> {$/;"	c
Entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub enum Entry<'a> {$/;"	g
Enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Enum,$/;"	e	enum:Unexpected
Enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Enum,$/;"	e	enum:Unsupported
EnumAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	i
EnumDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> de::EnumAccess<'de> for EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s	module:content
EnumDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> EnumAccess<'de> for EnumDeserializer {$/;"	c
EnumDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct EnumDeserializer {$/;"	s
EnumRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a, E> de::EnumAccess<'de> for EnumRefDeserializer<'a, 'de, E>$/;"	c	module:content
EnumRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
EnumRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> EnumAccess<'de> for EnumRefDeserializer<'de> {$/;"	c
EnumRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct EnumRefDeserializer<'de> {$/;"	s
Eof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    Eof,$/;"	e	enum:Category
EofReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    EofReader(R),$/;"	e	enum:HttpReader
EofWhileParsingList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    EofWhileParsingList,$/;"	e	enum:ErrorCode
EofWhileParsingObject	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    EofWhileParsingObject,$/;"	e	enum:ErrorCode
EofWhileParsingString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    EofWhileParsingString,$/;"	e	enum:ErrorCode
EofWhileParsingValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    EofWhileParsingValue,$/;"	e	enum:ErrorCode
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    type Err = String;$/;"	t	implementation:AppSettings
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    type Err = String;$/;"	t	implementation:ArgSettings
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    type Err = String;$/;"	t	implementation:Shell
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    type Err = &'static str;$/;"	t	implementation:Chunk
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^    type Err = ::Error;$/;"	t	implementation:RangeUnit
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^	type Err = ::Error;$/;"	t	implementation:Bearer
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    type Err = ::Error;$/;"	t	implementation:Basic
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    type Err = Option<<u32 as FromStr>::Err>;$/;"	t	implementation:CacheDirective
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    type Err = ();$/;"	t	implementation:ConnectionOption
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^    type Err = ::Error;$/;"	t	implementation:ContentRangeSpec
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    type Err = ::Error;$/;"	t	implementation:Host
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    type Err = ::Error;$/;"	t	implementation:Link
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    type Err = ::Error;$/;"	t	implementation:MediaDesc
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    type Err = ::Error;$/;"	t	implementation:RelationType
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    type Err = ::Error;$/;"	t	implementation:Origin
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    type Err = Option<<u32 as FromStr>::Err>;$/;"	t	implementation:Preference
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    type Err = ::Error;$/;"	t	implementation:ByteRangeSpec
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    type Err = ::Error;$/;"	t	implementation:Range
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    type Err = ::Error;$/;"	t	implementation:StrictTransportSecurity
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    type Err = ();$/;"	t	implementation:ProtocolName
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    type Err =();$/;"	t	implementation:Protocol
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    type Err = ::Error;$/;"	t	implementation:Charset
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    type Err = ::Error;$/;"	t	implementation:Encoding
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    type Err = ::Error;$/;"	t	implementation:EntityTag
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^    type Err = ::Error;$/;"	t	implementation:HttpDate
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    type Err = ::Error;$/;"	t	implementation:QualityItem
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    type Err = Error;$/;"	t	implementation:Method
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    type Err = Error;$/;"	t	implementation:RequestUri
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^    type Err = Error;$/;"	t	implementation:HttpVersion
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Err,$/;"	e	enum:deserialize::Field
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Err = Error;$/;"	t	implementation:Number
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Err = Error;$/;"	t	implementation:Value
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = ($/;"	t	implementation:Duplicate
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = ();$/;"	t	implementation:FilterLevel
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = ();$/;"	t	implementation:Level
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = D::Err;$/;"	t
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = D::Err;$/;"	t	implementation:Arc
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = D::Err;$/;"	t	implementation:Box
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = D::Err;$/;"	t	implementation:D
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = D::Err;$/;"	t	implementation:LevelFilter
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = E;$/;"	t	implementation:MapError
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = MutexDrainError<D>;$/;"	t	implementation:Mutex
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = Never;$/;"	t
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = Never;$/;"	t	implementation:Discard
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err = Never;$/;"	t	implementation:IgnoreResult
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Err;$/;"	t	interface:Drain
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^            type Err = Never;$/;"	t	implementation:std_only::multichain::CheckOwned
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    type Err = AsyncError;$/;"	t	implementation:Async
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    type Err = AsyncError;$/;"	t	implementation:AsyncCore
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    type Err = io::Error;$/;"	t
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    type Err = &'static str;$/;"	t	implementation:Scheme
Err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    type Err = ();$/;"	t	implementation:TokenType
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    type Error = ();$/;"	t	implementation:StringSink
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    type Error;$/;"	t	interface:Sink
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    type Error = fmt::Error;$/;"	t	implementation:FormatterSink
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^impl Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^impl Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^impl From<io::Error> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^impl From<std_fmt::Error> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^impl StdError for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^pub struct Error {$/;"	s
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    Error(T),$/;"	e	enum:Format
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl error::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub enum Error {$/;"	g
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl From<FromUtf8Error> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl From<IoError> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl From<SslError> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl From<Utf8Error> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl From<httparse::Error> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl From<url::ParseError> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^pub enum Error {$/;"	g
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<W: Write> From<EndError<W>> for io::Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Error(Error, Option<PathBuf>),$/;"	e	enum:DebouncedEvent
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^impl From<io::Error> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^impl StdError for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub enum Error {$/;"	g
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Error = A::Error;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:Deserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:EnumAccess
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:MapAccess
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:SeqAccess
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:VariantAccess
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        type Error = A::Error;$/;"	t	module:private
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        type Error = E;$/;"	t	module:private
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Error = A::Error;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Error = E;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl de::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl error::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Error = E;$/;"	t	function:missing_field
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    type Error = E;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type Error = M::Error;$/;"	t	module:content
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type Error = M::Error;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type Error = S::Error;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl error::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^pub struct Error;$/;"	s
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type Error = fmt::Error;$/;"	t	implementation:Formatter
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^impl Error for fmt::Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    type Error = Error;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeMap
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeSeq
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStruct
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStructVariant
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTuple
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleStruct
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleVariant
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:Serializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/std_error.rs	/^pub trait Error: Debug + Display {$/;"	i
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Error = Error;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Error = Error;$/;"	t	implementation:Deserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Error = Error;$/;"	t	implementation:MapAccess
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Error = Error;$/;"	t	implementation:SeqAccess
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Error = Error;$/;"	t	implementation:UnitVariantAccess
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Error = Error;$/;"	t	implementation:VariantAccess
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl Debug for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl From<Error> for io::Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl de::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl serde::de::StdError for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^impl Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^impl Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^pub struct Error;$/;"	s
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    type Error = Error;$/;"	t	implementation:Number
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    type Error = Error;$/;"	t	implementation:NumberDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    type Error = Error;$/;"	t	implementation:NumberFieldDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    type Error = Error;$/;"	t	implementation:BorrowedRawDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    type Error = Error;$/;"	t	implementation:OwnedRawDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    type Error = Error;$/;"	t	implementation:RawKeyDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type Error = Error;$/;"	t
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:NumberStrEmitter
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:RawValueStrEmitter
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:BorrowedCowStrDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:EnumDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:EnumRefDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:MapDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:MapKeyDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:MapRefDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:SeqDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:SeqRefDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:UnitOnly
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:Value
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:VariantDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:VariantRefDeserializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:MapKeySerializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:NumberValueEmitter
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:RawValueEmitter
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:SerializeMap
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:SerializeStructVariant
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:SerializeTupleVariant
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:SerializeVec
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:Serializer
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Error,$/;"	e	enum:FilterLevel
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Error,$/;"	e	enum:Level
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl From<Error> for std::io::Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl From<core::fmt::Error> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl From<std::io::Error> for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl core::fmt::Display for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl std::error::Error for Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub enum Error {$/;"	g
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl From<PathPersistError> for io::Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl From<PersistError> for io::Error {$/;"	c
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    Error,$/;"	e	enum:DeviceFlowState
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    Error(hyper::Error),$/;"	e	enum:RefreshResult
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    type Error = NullError;$/;"	t	implementation:MemoryStorage
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    type Error = NullError;$/;"	t	implementation:NullStorage
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    type Error = io::Error;$/;"	t	implementation:DiskTokenStorage
Error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    type Error: 'static + Error;$/;"	t	interface:TokenStorage
ErrorCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl Display for ErrorCode {$/;"	c
ErrorCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^pub(crate) enum ErrorCode {$/;"	g
ErrorImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^type ErrorImpl = ();$/;"	t
ErrorImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	t
ErrorImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^impl Display for ErrorImpl {$/;"	c
ErrorImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^struct ErrorImpl {$/;"	s
ErrorKind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^pub enum ErrorKind {$/;"	g
ErrorKind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^pub enum ErrorKind {$/;"	g
ErrorResponse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct ErrorResponse {$/;"	s
Euc_Jp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Euc_Jp,$/;"	e	enum:Charset
Euc_Kr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Euc_Kr,$/;"	e	enum:Charset
EventLoop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^impl EventLoop {$/;"	c
EventLoop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^struct EventLoop {$/;"	s
EventLoopMsg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^enum EventLoopMsg {$/;"	g
EventTx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^impl EventTx {$/;"	c
EventTx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^pub enum EventTx {$/;"	g
Excluded	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Excluded,$/;"	e	enum:deserialize::Field
Expect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^impl Header for Expect {$/;"	c
Expect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^impl HeaderFormat for Expect {$/;"	c
Expect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^impl fmt::Display for Expect {$/;"	c
Expect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^pub enum Expect {$/;"	g
ExpectationFailed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    ExpectationFailed,$/;"	e	enum:StatusCode
Expected	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait Expected {$/;"	i
ExpectedColon	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    ExpectedColon,$/;"	e	enum:ErrorCode
ExpectedInMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl Expected for ExpectedInMap {$/;"	c
ExpectedInMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl Expected for ExpectedInSeq {$/;"	c
ExpectedInSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
ExpectedListCommaOrEnd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    ExpectedListCommaOrEnd,$/;"	e	enum:ErrorCode
ExpectedObjectCommaOrEnd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    ExpectedObjectCommaOrEnd,$/;"	e	enum:ErrorCode
ExpectedSomeIdent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    ExpectedSomeIdent,$/;"	e	enum:ErrorCode
ExpectedSomeValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    ExpectedSomeValue,$/;"	e	enum:ErrorCode
Expired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    Expired(DateTime<Utc>),$/;"	e	enum:PollError
Ext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    Ext(String)$/;"	e	enum:DispositionType
Ext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    Ext(String, String)$/;"	e	enum:DispositionParam
Ext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^    Ext(String),$/;"	e	enum:Pragma
Ext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Ext(String)$/;"	e	enum:Charset
ExtRelType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    ExtRelType(String)$/;"	e	enum:RelationType
ExtendedFloat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^impl ModeratePathCache for ExtendedFloat {$/;"	c
ExtendedFloat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^impl ExtendedFloat {$/;"	c
ExtendedFloat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^pub(crate) struct ExtendedFloat {$/;"	s
ExtendedFloatArray	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^impl ExtendedFloatArray {$/;"	c
ExtendedFloatArray	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^pub(crate) struct ExtendedFloatArray {$/;"	s
ExtendedValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^impl Display for ExtendedValue {$/;"	c
ExtendedValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^pub struct ExtendedValue {$/;"	s
Extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    Extension(String, Option<String>)$/;"	e	enum:CacheDirective
Extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Extension(String)$/;"	e	enum:MediaDesc
Extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    Extension(String, String, Vec<(String, String)>)$/;"	e	enum:Preference
Extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Extension(String)$/;"	e	enum:Method
F	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<F> NetworkConnector for F where F: Fn(&str, u16, &str) -> io::Result<TcpStream> {$/;"	c
F	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl<F> Handler for F where F: Fn(Request, Response<Fresh>), F: Sync + Send {$/;"	c
F	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<F> ThreadSafeTimestampFn for F$/;"	c
F32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        F32(f32),$/;"	e	enum:content::Content
F32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        F32(f32),$/;"	e	enum:content::Content
F64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        F64(f64),$/;"	e	enum:content::Content
F64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        F64(f64),$/;"	e	enum:content::Content
F64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    F64(f64),$/;"	e	enum:ParserNumber
FailedDependency	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    FailedDependency,$/;"	e	enum:StatusCode
Failure	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    Failure(hyper::client::Response),$/;"	e	enum:Error
FallbackStderr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    FallbackStderr,$/;"	e	enum:AnyTerminal
FallbackStdout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    FallbackStdout,$/;"	e	enum:AnyTerminal
Fatal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    Fatal(Box<dyn std::error::Error>),$/;"	e	enum:AsyncError
Field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        enum Field {$/;"	g	function:deserialize
Field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        enum Field {$/;"	g	method:Duration::deserialize
Field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        enum Field {$/;"	g	method:SystemTime::deserialize
Field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	function:deserialize
Field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:Duration::deserialize
Field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:SystemTime::deserialize
Field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    enum Field {$/;"	g	module:range
Field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    impl<'de> Deserialize<'de> for Field {$/;"	c	module:range
FieldClash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    FieldClash(&'static str),$/;"	e	enum:Error
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:deserialize::Field::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:deserialize::Field::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:range::Field::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s	method:range::Field::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^        impl<'de> de::Visitor<'de> for FieldVisitor {$/;"	c	method:NumberKey::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^        struct FieldVisitor;$/;"	s	method:NumberKey::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^        impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:RawKey::deserialize
FieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^        struct FieldVisitor;$/;"	s	method:RawKey::deserialize
File	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    File,$/;"	e	enum:Scope
File	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl RequestValue for File {}$/;"	c
File	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Resource for File {}$/;"	c
File	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for File {}$/;"	c
File	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct File {$/;"	s
FileCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for FileCapabilities {}$/;"	c
FileCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for FileCapabilities {}$/;"	c
FileCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileCapabilities {$/;"	s
FileContentHints	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for FileContentHints {}$/;"	c
FileContentHints	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for FileContentHints {}$/;"	c
FileContentHints	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileContentHints {$/;"	s
FileContentHintsThumbnail	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for FileContentHintsThumbnail {}$/;"	c
FileContentHintsThumbnail	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for FileContentHintsThumbnail {}$/;"	c
FileContentHintsThumbnail	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileContentHintsThumbnail {$/;"	s
FileCopyCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileCopyCall<'a, C, A> {}$/;"	c
FileCopyCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileCopyCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
FileCopyCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileCopyCall<'a, C, A>$/;"	s
FileCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileCreateCall<'a, C, A> {}$/;"	c
FileCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileCreateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
FileCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileCreateCall<'a, C, A>$/;"	s
FileDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileDeleteCall<'a, C, A> {}$/;"	c
FileDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileDeleteCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
FileDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileDeleteCall<'a, C, A>$/;"	s
FileEmptyTrashCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileEmptyTrashCall<'a, C, A> {}$/;"	c
FileEmptyTrashCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileEmptyTrashCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetTok/;"	c
FileEmptyTrashCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileEmptyTrashCall<'a, C, A>$/;"	s
FileExportCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileExportCall<'a, C, A> {}$/;"	c
FileExportCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileExportCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
FileExportCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileExportCall<'a, C, A>$/;"	s
FileGenerateIdCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileGenerateIdCall<'a, C, A> {}$/;"	c
FileGenerateIdCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileGenerateIdCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetTok/;"	c
FileGenerateIdCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileGenerateIdCall<'a, C, A>$/;"	s
FileGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileGetCall<'a, C, A> {}$/;"	c
FileGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileGetCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
FileGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileGetCall<'a, C, A>$/;"	s
FileImageMediaMetadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for FileImageMediaMetadata {}$/;"	c
FileImageMediaMetadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for FileImageMediaMetadata {}$/;"	c
FileImageMediaMetadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileImageMediaMetadata {$/;"	s
FileImageMediaMetadataLocation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for FileImageMediaMetadataLocation {}$/;"	c
FileImageMediaMetadataLocation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for FileImageMediaMetadataLocation {}$/;"	c
FileImageMediaMetadataLocation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileImageMediaMetadataLocation {$/;"	s
FileList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for FileList {}$/;"	c
FileList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileList {$/;"	s
FileListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileListCall<'a, C, A> {}$/;"	c
FileListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileListCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
FileListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileListCall<'a, C, A>$/;"	s
FileMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileMethods<'a, C, A> {$/;"	c
FileMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for FileMethods<'a, C, A> {}$/;"	c
FileMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileMethods<'a, C, A>$/;"	s
FileShortcutDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for FileShortcutDetails {}$/;"	c
FileShortcutDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for FileShortcutDetails {}$/;"	c
FileShortcutDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileShortcutDetails {$/;"	s
FileUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileUpdateCall<'a, C, A> {}$/;"	c
FileUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileUpdateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
FileUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileUpdateCall<'a, C, A>$/;"	s
FileVideoMediaMetadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for FileVideoMediaMetadata {}$/;"	c
FileVideoMediaMetadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for FileVideoMediaMetadata {}$/;"	c
FileVideoMediaMetadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileVideoMediaMetadata {$/;"	s
FileWatchCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for FileWatchCall<'a, C, A> {}$/;"	c
FileWatchCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> FileWatchCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
FileWatchCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct FileWatchCall<'a, C, A>$/;"	s
Filename	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    Filename(Charset, Option<LanguageTag>, Vec<u8>),$/;"	e	enum:DispositionParam
Filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain, F> Drain for Filter<D, F>$/;"	c
Filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain, F> Filter<D, F>$/;"	c
Filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct Filter<D: Drain, F>(pub D, pub F)$/;"	s
FilterFn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait FilterFn$/;"	i
FilterFn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait FilterFn: 'static + Sync + Send + Fn(&Record) -> bool {}$/;"	i
FilterLevel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl FilterLevel {$/;"	c
FilterLevel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl FromStr for FilterLevel {$/;"	c
FilterLevel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl fmt::Display for FilterLevel {$/;"	c
FilterLevel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub enum FilterLevel {$/;"	g
Finish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    Finish,$/;"	e	enum:AsyncMsg
First	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    First,$/;"	e	enum:RelationType
First	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        type First = A;$/;"	t	implementation:private::B
First	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        type First;$/;"	t	interface:private::Pair
First	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	t	module:private
First	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    First,$/;"	e	enum:State
Fish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    Fish,$/;"	e	enum:Shell
FishGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/fish.rs	/^impl<'a, 'b> FishGen<'a, 'b> {$/;"	c
FishGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/fish.rs	/^pub struct FishGen<'a, 'b>$/;"	s
Flag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    Flag,$/;"	e	enum:ParseResult
FlagBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^impl<'a, 'b, 'z> From<&'z Arg<'a, 'b>> for FlagBuilder<'a, 'b> {$/;"	c
FlagBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^impl<'a, 'b> From<Arg<'a, 'b>> for FlagBuilder<'a, 'b> {$/;"	c
FlagBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^impl<'n, 'e> AnyArg<'n, 'e> for FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^impl<'n, 'e> DispOrder for FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^impl<'n, 'e> Display for FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^impl<'n, 'e> FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^impl<'n, 'e> PartialEq for FlagBuilder<'n, 'e> {$/;"	c
FlagBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^pub struct FlagBuilder<'n, 'e>$/;"	s
FlatInternallyTaggedAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatInternallyTaggedAccess<'a, 'de, E>$/;"	c
FlatInternallyTaggedAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, 'de, E> FlatMapAccess<'a, 'de, E> {$/;"	c
FlatMapAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatMapAccess<'a, 'de, E>$/;"	c
FlatMapAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, 'de, E> Deserializer<'de> for FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, 'de, E> FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl<'a, M> ser::SerializeMap for FlatMapSerializeMap<'a, M>$/;"	c
FlatMapSerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl<'a, M> ser::SerializeStruct for FlatMapSerializeStruct<'a, M>$/;"	c
FlatMapSerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl<'a, M> FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl<'a, M> ser::SerializeStructVariant for FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl<'a, M> FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl<'a, M> Serializer for FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, 'de, E> FlatStructAccess<'a, 'de, E> {$/;"	c
FlatStructAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatStructAccess<'a, 'de, E>$/;"	c
FlatStructAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
Float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Float(f64),$/;"	e	enum:Unexpected
Float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Float,$/;"	e	enum:Unsupported
Float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^pub trait Float: Number {$/;"	i
Float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    Float(f64),$/;"	e	enum:N
FloatErrors	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^pub(crate) trait FloatErrors {$/;"	i
Flow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub trait Flow {$/;"	i
FlowType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub enum FlowType {$/;"	g
Fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Fmt(core::fmt::Error),$/;"	e	enum:Error
Fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Fmt(std::fmt::Error),$/;"	e	enum:Error
FmtHeader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a, H: HeaderFormat + ?Sized + 'a> fmt::Display for FmtHeader<'a, H> {$/;"	c
FmtHeader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^struct FmtHeader<'a, H: ?Sized + 'a>(&'a H);$/;"	s
FnValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a, V: 'a + Value, F> Value for FnValue<V, F>$/;"	c
FnValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct FnValue<V: Value, F>(pub F)$/;"	s
FollowAll	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    FollowAll,$/;"	e	enum:RedirectPolicy
FollowIf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    FollowIf(fn(&Url) -> bool),$/;"	e	enum:RedirectPolicy
FollowNone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    FollowNone,$/;"	e	enum:RedirectPolicy
Foo	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    impl Foo {$/;"	c	function:expressions
Foo	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    struct Foo;$/;"	s	function:expressions
Forbidden	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Forbidden,$/;"	e	enum:StatusCode
FormFeed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    FormFeed,$/;"	e	enum:CharEscape
Format	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    Format,$/;"	e	enum:ErrorKind
Format	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^impl<T: AsRef<str>> Format<T> {$/;"	c
Format	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^impl<T: AsRef<str>> fmt::Display for Format<T> {$/;"	c
Format	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^impl<T: fmt::Display> Format<T> {$/;"	c
Format	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^impl<T: fmt::Display> fmt::Display for Format<T> {$/;"	c
Format	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^pub enum Format<T> {$/;"	g
Formatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^impl<'a, 'b> Serializer for &'a mut fmt::Formatter<'b> {$/;"	c
Formatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub trait Formatter {$/;"	i
FormatterSink	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^impl<'a, 'b: 'a> super::chunked_encoder::Sink for FormatterSink<'a, 'b> {$/;"	c
FormatterSink	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^struct FormatterSink<'a, 'b: 'a> {$/;"	s
Found	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Found,$/;"	e	enum:StatusCode
Fresh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub enum Fresh {}$/;"	g
FromArgMatches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^    pub trait FromArgMatches: Sized {$/;"	i	module:derive
FromPrimitive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^pub trait FromPrimitive: Sized {$/;"	i
FromTo	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    FromTo(u64, u64),$/;"	e	enum:ByteRangeSpec
FsEventWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^impl Drop for FsEventWatcher {$/;"	c
FsEventWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^impl FsEventWatcher {$/;"	c
FsEventWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^impl Watcher for FsEventWatcher {$/;"	c
FsEventWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^pub struct FsEventWatcher {$/;"	s
FsEventWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^unsafe impl Send for FsEventWatcher {}$/;"	c
FsEventWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^unsafe impl Sync for FsEventWatcher {}$/;"	c
Full	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    Full,$/;"	e	enum:Scope
Full	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    Full,$/;"	e	enum:AsyncError
FullFormat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<D> Drain for FullFormat<D>$/;"	c
FullFormat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<D> FullFormat<D>$/;"	c
FullFormat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct FullFormat<D>$/;"	s
FullFormatBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<D> FullFormatBuilder<D>$/;"	c
FullFormatBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct FullFormatBuilder<D>$/;"	s
Fuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain> Drain for Fuse<D>$/;"	c
Fuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain> Fuse<D>$/;"	c
Fuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct Fuse<D: Drain>(pub D)$/;"	s
Fused	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^pub trait Fused: private::Sealed {}$/;"	i
GatewayTimeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    GatewayTimeout,$/;"	e	enum:StatusCode
Gb2312	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Gb2312,$/;"	e	enum:Charset
GeneratedIds	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for GeneratedIds {}$/;"	c
GeneratedIds	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct GeneratedIds {$/;"	s
Generic	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Generic(String),$/;"	e	enum:Error
Get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Get,$/;"	e	enum:Method
GetToken	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^pub trait GetToken {$/;"	i
Global	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    Global,$/;"	e	enum:ArgSettings
GlobalVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    GlobalVersion,$/;"	e	enum:AppSettings
Glossary	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Glossary,$/;"	e	enum:RelationType
Gone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Gone,$/;"	e	enum:StatusCode
Good	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    Good(T),$/;"	e	enum:Format
Gzip	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    Gzip,$/;"	e	enum:Encoding
H2c	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    H2c,$/;"	e	enum:ProtocolName
HEX	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^static HEX: [u8; 256] = {$/;"	v
HTTPRedirect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    HTTPRedirect(u32),$/;"	e	enum:InstalledFlowReturnMethod
Handheld	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Handheld,$/;"	e	enum:MediaDesc
Handler	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^pub trait Handler: Sync + Send {$/;"	i
HandlingLeniant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    HandlingLeniant,$/;"	e	enum:Preference
HandlingStrict	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    HandlingStrict,$/;"	e	enum:Preference
HashMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, K, V, S, E> IntoDeserializer<'de, E> for HashMap<K, V, S>$/;"	c
HashSet	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, T, S, E> IntoDeserializer<'de, E> for HashSet<T, S>$/;"	c
Head	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Head,$/;"	e	enum:Method
Header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    Header,$/;"	e	enum:Error
Header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub trait Header: Clone + Any + Send + Sync {$/;"	i
HeaderClone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub trait HeaderClone: Sealed {}$/;"	i
HeaderFormat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub trait HeaderFormat: fmt::Debug + HeaderClone + Any + Typeable + Send + Sync {$/;"	i
HeaderFormatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a, H: HeaderFormat> fmt::Debug for HeaderFormatter<'a, H> {$/;"	c
HeaderFormatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a, H: HeaderFormat> fmt::Display for HeaderFormatter<'a, H> {$/;"	c
HeaderFormatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub struct HeaderFormatter<'a, H: HeaderFormat>(pub &'a H);$/;"	s
HeaderName	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^type HeaderName = UniCase<CowStr>;$/;"	t
HeaderView	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a> HeaderView<'a> {$/;"	c
HeaderView	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a> fmt::Debug for HeaderView<'a> {$/;"	c
HeaderView	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a> fmt::Display for HeaderView<'a> {$/;"	c
HeaderView	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub struct HeaderView<'a>(&'a HeaderName, &'a Item);$/;"	s
Headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl Headers {$/;"	c
Headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl PartialEq for Headers {$/;"	c
Headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl fmt::Debug for Headers {$/;"	c
Headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl fmt::Display for Headers {$/;"	c
Headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a> Extend<HeaderView<'a>> for Headers {$/;"	c
Headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a> FromIterator<HeaderView<'a>> for Headers {$/;"	c
Headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub struct Headers {$/;"	s
HeadersItems	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a> Iterator for HeadersItems<'a> {$/;"	c
HeadersItems	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub struct HeadersItems<'a> {$/;"	s
Help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^impl<'a> Help<'a> {$/;"	c
Help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^pub struct Help<'a> {$/;"	s
Help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    Help,$/;"	e	enum:UsageToken
Help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Help,$/;"	e	enum:RelationType
HelpDisplayed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    HelpDisplayed,$/;"	e	enum:ErrorKind
Hi64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^trait Hi64<T>: AsRef<[T]> {$/;"	i
Hidden	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    Hidden,$/;"	e	enum:AppSettings
Hidden	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    Hidden,$/;"	e	enum:ArgSettings
HiddenLongHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    HiddenLongHelp,$/;"	e	enum:ArgSettings
HiddenShortHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    HiddenShortHelp,$/;"	e	enum:ArgSettings
HideDefaultValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    HideDefaultValue,$/;"	e	enum:ArgSettings
HideEnvValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    HideEnvValues,$/;"	e	enum:ArgSettings
HidePossibleValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    HidePossibleValues,$/;"	e	enum:ArgSettings
HidePossibleValuesInHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    HidePossibleValuesInHelp,$/;"	e	enum:AppSettings
Host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^impl FromStr for Host {$/;"	c
Host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^impl Header for Host {$/;"	c
Host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^impl HeaderFormat for Host {$/;"	c
Host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^impl fmt::Display for Host {$/;"	c
Host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^pub struct Host {$/;"	s
Http	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        Http,$/;"	e	enum:scheme::Scheme
Http	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    Http,$/;"	e	enum:ProtocolName
Http	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    Http(HttpStream),$/;"	e	enum:HttpsStream
Http09	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^    Http09,$/;"	e	enum:HttpVersion
Http10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^    Http10,$/;"	e	enum:HttpVersion
Http11	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^    Http11,$/;"	e	enum:HttpVersion
Http11Message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl Http11Message {$/;"	c
Http11Message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl HttpMessage for Http11Message {$/;"	c
Http11Message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl Read for Http11Message {$/;"	c
Http11Message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl Write for Http11Message {$/;"	c
Http11Message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub struct Http11Message {$/;"	s
Http11Protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl Http11Protocol {$/;"	c
Http11Protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl Protocol for Http11Protocol {$/;"	c
Http11Protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub struct Http11Protocol {$/;"	s
Http20	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^    Http20,$/;"	e	enum:HttpVersion
HttpConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl NetworkConnector for HttpConnector {$/;"	c
HttpConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub struct HttpConnector;$/;"	s
HttpDate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^impl Display for HttpDate {$/;"	c
HttpDate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^impl FromStr for HttpDate {$/;"	c
HttpDate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^pub struct HttpDate(pub time::Tm);$/;"	s
HttpError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    HttpError(hyper::Error),$/;"	e	enum:Error
HttpError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    HttpError(hyper::Error),$/;"	e	enum:PollError
HttpError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    HttpError(hyper::Error),$/;"	e	enum:RequestError
HttpListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl ::std::os::unix::io::AsRawFd for HttpListener {$/;"	c
HttpListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl ::std::os::unix::io::FromRawFd for HttpListener {$/;"	c
HttpListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl ::std::os::windows::io::AsRawSocket for HttpListener {$/;"	c
HttpListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl ::std::os::windows::io::FromRawSocket for HttpListener {$/;"	c
HttpListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl From<TcpListener> for HttpListener {$/;"	c
HttpListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl HttpListener {$/;"	c
HttpListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl NetworkListener for HttpListener {$/;"	c
HttpListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub struct HttpListener {$/;"	s
HttpMessage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^impl HttpMessage {$/;"	c
HttpMessage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^pub trait HttpMessage: Write + Read + Send + Any + Typeable + Debug {$/;"	i
HttpReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<R: Read> HttpReader<R> {$/;"	c
HttpReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<R: Read> Read for HttpReader<R> {$/;"	c
HttpReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<R> fmt::Debug for HttpReader<R> {$/;"	c
HttpReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub enum HttpReader<R> {$/;"	g
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl ::std::os::unix::io::AsRawFd for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl ::std::os::unix::io::FromRawFd for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl ::std::os::windows::io::AsRawSocket for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl ::std::os::windows::io::FromRawSocket for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl Clone for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl NetworkStream for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl Read for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl Write for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl fmt::Debug for HttpStream {$/;"	c
HttpStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub struct HttpStream(pub TcpStream);$/;"	s
HttpVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^impl AsRef<str> for HttpVersion {$/;"	c
HttpVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^impl FromStr for HttpVersion {$/;"	c
HttpVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^impl fmt::Display for HttpVersion {$/;"	c
HttpVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^pub enum HttpVersion {$/;"	g
HttpVersionNotSupported	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    HttpVersionNotSupported,$/;"	e	enum:StatusCode
HttpWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<W: Write> HttpWriter<W> {$/;"	c
HttpWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<W: Write> Write for HttpWriter<W> {$/;"	c
HttpWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<W: Write> fmt::Debug for HttpWriter<W> {$/;"	c
HttpWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub enum HttpWriter<W: Write> {$/;"	g
Https	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        Https,$/;"	e	enum:scheme::Scheme
Https	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    Https(S)$/;"	e	enum:HttpsStream
HttpsConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<S: SslClient, C: NetworkConnector<Stream=HttpStream>> NetworkConnector for HttpsConnector<S/;"	c
HttpsConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<S: SslClient, C: NetworkConnector> HttpsConnector<S, C> {$/;"	c
HttpsConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<S: SslClient> HttpsConnector<S, HttpConnector> {$/;"	c
HttpsConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub struct HttpsConnector<S: SslClient, C: NetworkConnector = HttpConnector> {$/;"	s
HttpsListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<S: SslServer + Clone> NetworkListener for HttpsListener<S> {$/;"	c
HttpsListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<S: SslServer> HttpsListener<S> {$/;"	c
HttpsListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub struct HttpsListener<S: SslServer> {$/;"	s
HttpsStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<S: NetworkStream> NetworkStream for HttpsStream<S> {$/;"	c
HttpsStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<S: NetworkStream> Read for HttpsStream<S> {$/;"	c
HttpsStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<S: NetworkStream> Write for HttpsStream<S> {$/;"	c
HttpsStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub enum HttpsStream<S: NetworkStream> {$/;"	g
Hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait Hub {}$/;"	i
Hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Hub,$/;"	e	enum:RelationType
Hub	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^type Hub = drive3::DriveHub<$/;"	t
I16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        I16(i16),$/;"	e	enum:content::Content
I16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        I16(i16),$/;"	e	enum:content::Content
I32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        I32(i32),$/;"	e	enum:content::Content
I32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        I32(i32),$/;"	e	enum:content::Content
I64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        I64(i64),$/;"	e	enum:content::Content
I64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        I64(i64),$/;"	e	enum:content::Content
I64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    I64(i64),$/;"	e	enum:ParserNumber
I8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        I8(i8),$/;"	e	enum:content::Content
I8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        I8(i8),$/;"	e	enum:content::Content
INotifyWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^impl Drop for INotifyWatcher {$/;"	c
INotifyWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^impl Watcher for INotifyWatcher {$/;"	c
INotifyWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^pub struct INotifyWatcher(Mutex<mio_extras::channel::Sender<EventLoopMsg>>);$/;"	s
IdentifierDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	i
Identity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    Identity,$/;"	e	enum:Encoding
Idle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    Idle(Box<NetworkStream + Send>),$/;"	e	enum:Stream
IfRange	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^impl Display for IfRange {$/;"	c
IfRange	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^impl Header for IfRange {$/;"	c
IfRange	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^impl HeaderFormat for IfRange {$/;"	c
IfRange	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^pub enum IfRange {$/;"	g
IgnoreResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain> Drain for IgnoreResult<D> {$/;"	c
IgnoreResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain> IgnoreResult<D> {$/;"	c
IgnoreResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct IgnoreResult<D: Drain> {$/;"	s
IgnoredAny	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^impl<'de> Deserialize<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^impl<'de> Visitor<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
ImATeapot	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    ImATeapot,$/;"	e	enum:StatusCode
ImUsed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    ImUsed,$/;"	e	enum:StatusCode
ImapMutf7	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    ImapMutf7,$/;"	e	enum:CharacterSet
Impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^impl<Ok, Error> SerializeMap for Impossible<Ok, Error>$/;"	c
Impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^impl<Ok, Error> SerializeSeq for Impossible<Ok, Error>$/;"	c
Impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStructVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTuple for Impossible<Ok, Error>$/;"	c
Impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InMemory	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    InMemory(Cursor<Vec<u8>>),$/;"	e	enum:SpooledInner
InPlaceSeed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, 'de, T> DeserializeSeed<'de> for InPlaceSeed<'a, T>$/;"	c
InPlaceSeed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
IncludeSubdomains	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    IncludeSubdomains,$/;"	e	enum:Directive
Included	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Included,$/;"	e	enum:deserialize::Field
Incoming	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub struct Incoming<S> {$/;"	s
Index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Index,$/;"	e	enum:RelationType
Index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^pub trait Index: private::Sealed {$/;"	i
Indices	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> Default for Indices<'a> {$/;"	c
Indices	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> DoubleEndedIterator for Indices<'a> {$/;"	c
Indices	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> ExactSizeIterator for Indices<'a> {}$/;"	c
Indices	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> Iterator for Indices<'a> {$/;"	c
Indices	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^pub struct Indices<'a> {$/;"	s
InferSubcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    InferSubcommands,$/;"	e	enum:AppSettings
Info	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Info,$/;"	e	enum:FilterLevel
Info	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Info,$/;"	e	enum:Level
Informational	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Informational,$/;"	e	enum:StatusClass
Inline	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    Inline,$/;"	e	enum:DispositionType
InstalledFlow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^impl<C> InstalledFlow<C>$/;"	c
InstalledFlow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^pub struct InstalledFlow<C> {$/;"	s
InstalledFlowHandler	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^impl InstalledFlowHandler {$/;"	c
InstalledFlowHandler	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^impl server::Handler for InstalledFlowHandler {$/;"	c
InstalledFlowHandler	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^struct InstalledFlowHandler {$/;"	s
InstalledFlowReturnMethod	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^pub enum InstalledFlowReturnMethod {$/;"	g
InstalledInteractive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    InstalledInteractive,$/;"	e	enum:FlowType
InstalledRedirect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    InstalledRedirect(u32),$/;"	e	enum:FlowType
InsufficientStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    InsufficientStorage,$/;"	e	enum:StatusCode
Integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Integer,$/;"	e	enum:Unsupported
Integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^pub trait Integer: Number + ops::BitAnd<Output = Self> + ops::Shr<i32, Output = Self> {$/;"	i
Interactive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    Interactive,$/;"	e	enum:InstalledFlowReturnMethod
InternalServerError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    InternalServerError,$/;"	e	enum:StatusCode
InternallyTaggedUnitVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'a> InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s	module:content
InterruptingWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^impl<'a, W: Write, R: Rng> Write for InterruptingWriter<'a, W, R> {$/;"	c
InterruptingWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^struct InterruptingWriter<'a, W: 'a + Write, R: 'a + Rng> {$/;"	s
IntoApp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^    pub trait IntoApp {$/;"	i	module:derive
IntoDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	i
IntoDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for !$/;"	c
IntoDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for ()$/;"	c
IntoIter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    type IntoIter = IntoIter;$/;"	t	implementation:Map
IntoIter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    type IntoIter = Iter<'a>;$/;"	t	implementation:Map
IntoIter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    type IntoIter = IterMut<'a>;$/;"	t	implementation:Map
IntoIter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct IntoIter {$/;"	s
IntoIterImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type IntoIterImpl = btree_map::IntoIter<String, Value>;$/;"	t
IntoIterImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type IntoIterImpl = indexmap::map::IntoIter<String, Value>;$/;"	t
IntoUrl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub trait IntoUrl {$/;"	i
InvalidByte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    InvalidByte(usize, u8),$/;"	e	enum:DecodeError
InvalidClient	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    InvalidClient,$/;"	e	enum:RequestError
InvalidEscape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    InvalidEscape,$/;"	e	enum:ErrorCode
InvalidLastSymbol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    InvalidLastSymbol(usize, u8),$/;"	e	enum:DecodeError
InvalidLength	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    InvalidLength,$/;"	e	enum:DecodeError
InvalidNumber	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    InvalidNumber,$/;"	e	enum:ErrorCode
InvalidScope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    InvalidScope(String),$/;"	e	enum:RequestError
InvalidSubcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    InvalidSubcommand,$/;"	e	enum:ErrorKind
InvalidUnicodeCodePoint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    InvalidUnicodeCodePoint,$/;"	e	enum:ErrorCode
InvalidUtf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    InvalidUtf8,$/;"	e	enum:ErrorKind
InvalidValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    InvalidValue,$/;"	e	enum:ErrorKind
Io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    Io,$/;"	e	enum:ErrorKind
Io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    Io(IoError),$/;"	e	enum:Error
Io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Io(io::Error),$/;"	e	enum:Error
Io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    Io(io::Error),$/;"	e	enum:ErrorCode
Io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    Io,$/;"	e	enum:Category
Io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Io(std::io::Error),$/;"	e	enum:Error
IoRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'de, R> Read<'de> for IoRead<R>$/;"	c
IoRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<R> IoRead<R>$/;"	c
IoRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<R> private::Sealed for IoRead<R> where R: io::Read {}$/;"	c
IoRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^pub struct IoRead<R>$/;"	s
IoResultExt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^pub(crate) trait IoResultExt<T> {$/;"	i
IpAddr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::IpAddr {$/;"	c
IpAddr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for net::IpAddr {$/;"	c
IpAddrVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            impl<'de> Visitor<'de> for IpAddrVisitor {$/;"	c	method:IpAddr::deserialize
IpAddrVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            struct IpAddrVisitor;$/;"	s	method:IpAddr::deserialize
Ipv4Addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for net::Ipv4Addr {$/;"	c
Ipv6Addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for net::Ipv6Addr {$/;"	c
Iso_2022_Jp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_2022_Jp,$/;"	e	enum:Charset
Iso_2022_Jp_2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_2022_Jp_2,$/;"	e	enum:Charset
Iso_2022_Kr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_2022_Kr,$/;"	e	enum:Charset
Iso_8859_1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_1,$/;"	e	enum:Charset
Iso_8859_10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_10,$/;"	e	enum:Charset
Iso_8859_2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_2,$/;"	e	enum:Charset
Iso_8859_3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_3,$/;"	e	enum:Charset
Iso_8859_4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_4,$/;"	e	enum:Charset
Iso_8859_5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_5,$/;"	e	enum:Charset
Iso_8859_6	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_6,$/;"	e	enum:Charset
Iso_8859_6_E	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_6_E,$/;"	e	enum:Charset
Iso_8859_6_I	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_6_I,$/;"	e	enum:Charset
Iso_8859_7	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_7,$/;"	e	enum:Charset
Iso_8859_8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_8,$/;"	e	enum:Charset
Iso_8859_8_E	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_8_E,$/;"	e	enum:Charset
Iso_8859_8_I	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_8_I,$/;"	e	enum:Charset
Iso_8859_9	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Iso_8859_9,$/;"	e	enum:Charset
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    type Item = &'a OsStr;$/;"	t	implementation:OsValues
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    type Item = &'a str;$/;"	t	implementation:Values
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    type Item = usize;$/;"	t	implementation:Indices
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        type Item = (usize, &'a V);$/;"	t	implementation:vec_map::Iter
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    type Item = &'a OsStr;$/;"	t	implementation:OsSplit
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    type Item = &'a str;$/;"	t	implementation:SplitAsciiUnquoted
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^impl Item {$/;"	c
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^pub struct Item {$/;"	s
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    type Item = HeaderView<'a>;$/;"	t	implementation:HeadersItems
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Item = ::Result<N::Stream>;$/;"	t	implementation:NetworkConnections
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Item = Result<T>;$/;"	t
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    type Item = io::Result<u8>;$/;"	t
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    type Item = (&'a String, &'a Value);$/;"	t	implementation:Map
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    type Item = (&'a String, &'a mut Value);$/;"	t	implementation:Map
Item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    type Item = (String, Value);$/;"	t	implementation:Map
Iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^    impl<'a, V: 'a + Debug> Debug for Iter<'a, V> {$/;"	c	module:vec_map
Iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^    impl<'a, V: 'a> DoubleEndedIterator for Iter<'a, V> {$/;"	c	module:vec_map
Iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^    impl<'a, V: 'a> Iterator for Iter<'a, V> {$/;"	c	module:vec_map
Iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^    pub struct Iter<'a, V: 'a> {$/;"	s	module:vec_map
Iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct Iter<'a> {$/;"	s
IterImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type IterImpl<'a> = btree_map::Iter<'a, String, Value>;$/;"	t
IterImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type IterImpl<'a> = indexmap::map::Iter<'a, String, Value>;$/;"	t
IterMut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct IterMut<'a> {$/;"	s
IterMutImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type IterMutImpl<'a> = btree_map::IterMut<'a, String, Value>;$/;"	t
IterMutImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type IterMutImpl<'a> = indexmap::map::IterMut<'a, String, Value>;$/;"	t
JSONToken	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^struct JSONToken {$/;"	s
JSONTokenResponse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^struct JSONTokenResponse {$/;"	s
JSONTokens	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^struct JSONTokens {$/;"	s
JWT	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^impl JWT {$/;"	c
JWT	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^struct JWT {$/;"	s
Join	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    Join(bool, &'a mut fmt::Formatter<'b>),$/;"	e	enum:Multi
JsonData	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^                struct JsonData {$/;"	s	function:request_code
JsonDecodeError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    JsonDecodeError(String, json::Error),$/;"	e	enum:Error
JsonError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^        struct JsonError {$/;"	s	function:poll_token
JsonError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub struct JsonError {$/;"	s
JsonServerError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct JsonServerError {$/;"	s
JsonToken	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^        struct JsonToken {$/;"	s	function:refresh_token
K	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^        impl KV for K {$/;"	c	function:expressions
K	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^        struct K;$/;"	s	function:expressions
KV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl KV for () {$/;"	c
KV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait KV {$/;"	i
KeepAlive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    KeepAlive,$/;"	e	enum:ConnectionOption
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^type Key = (String, u16, Scheme);$/;"	t
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl AsRef<str> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl Default for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl From<&'static str> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl From<String> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl FromIterator<String> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl FromIterator<char> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl Hash for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl PartialEq<Self> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl PartialEq<String> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl PartialEq<str> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl fmt::Debug for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl fmt::Display for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl<'a> FromIterator<&'a String> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl<'a> FromIterator<&'a char> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl<'a> FromIterator<&'a str> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl<'a> FromIterator<Cow<'a, str>> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^pub struct Key {$/;"	s
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl AsRef<str> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl Default for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl From<&'static str> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl From<String> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl FromIterator<String> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl FromIterator<char> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl Hash for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl PartialEq<Self> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl PartialEq<String> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl PartialEq<str> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl fmt::Debug for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl fmt::Display for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl<'a> FromIterator<&'a String> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl<'a> FromIterator<&'a char> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl<'a> FromIterator<&'a str> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^impl<'a> FromIterator<Cow<'a,str>> for Key {$/;"	c
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^pub struct Key {$/;"	s
Key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/static.rs	/^pub type Key = &'static str;$/;"	t
KeyClass	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^enum KeyClass {$/;"	g
KeyClassifier	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> DeserializeSeed<'de> for KeyClassifier {$/;"	c
KeyClassifier	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> Visitor<'de> for KeyClassifier {$/;"	c
KeyClassifier	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct KeyClassifier;$/;"	s
KeyMustBeAString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    KeyMustBeAString,$/;"	e	enum:ErrorCode
Keys	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct Keys<'a> {$/;"	s
KeysImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type KeysImpl<'a> = btree_map::Keys<'a, String, Value>;$/;"	t
KeysImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type KeysImpl<'a> = indexmap::map::Keys<'a, String, Value>;$/;"	t
Koi8_R	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Koi8_R,$/;"	e	enum:Charset
LOG_LEVEL_NAMES	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub static LOG_LEVEL_NAMES: [&'static str; 7] =$/;"	v
LOG_LEVEL_SHORT_NAMES	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub static LOG_LEVEL_SHORT_NAMES: [&'static str; 7] =$/;"	v
Last	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    Last,$/;"	e	enum:ArgSettings
Last	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Last,$/;"	e	enum:RelationType
Last	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    Last(u64)$/;"	e	enum:ByteRangeSpec
LatestVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    LatestVersion,$/;"	e	enum:RelationType
Lazy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/core_lazy.rs	/^impl<T: Sync> Lazy<T> {$/;"	c
Lazy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/core_lazy.rs	/^pub struct Lazy<T: Sync>(Once<T>);$/;"	s
Lazy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^impl<T: Sync> Lazy<T> {$/;"	c
Lazy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^pub struct Lazy<T: Sync>(Cell<Option<T>>, Once);$/;"	s
Lazy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^unsafe impl<T: Sync> Sync for Lazy<T> {}$/;"	c
LazyStatic	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^pub trait LazyStatic {$/;"	i
LengthRequired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    LengthRequired,$/;"	e	enum:StatusCode
Level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl FromStr for Level {$/;"	c
Level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl Level {$/;"	c
Level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl fmt::Display for Level {$/;"	c
Level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub enum Level {$/;"	g
LevelFilter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain> Drain for LevelFilter<D> {$/;"	c
LevelFilter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain> LevelFilter<D> {$/;"	c
LevelFilter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct LevelFilter<D: Drain>(pub D, pub Level);$/;"	s
License	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    License,$/;"	e	enum:RelationType
Limb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^pub type Limb = u32;$/;"	t
Limb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^pub type Limb = u64;$/;"	t
Line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    Line(&'a str, &'a mut fmt::Formatter<'b>),$/;"	e	enum:Multi
LineColIterator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^impl<I> Iterator for LineColIterator<I>$/;"	c
LineColIterator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^impl<I> LineColIterator<I>$/;"	c
LineColIterator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^pub struct LineColIterator<I> {$/;"	s
LineFeed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    LineFeed,$/;"	e	enum:CharEscape
Link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl FromStr for Link {$/;"	c
Link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl Header for Link {$/;"	c
Link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl HeaderFormat for Link {$/;"	c
Link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl Link {$/;"	c
Link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl fmt::Display for Link {$/;"	c
Link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^pub struct Link {$/;"	s
LinkValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl LinkValue {$/;"	c
LinkValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl fmt::Display for LinkValue {$/;"	c
LinkValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^pub struct LinkValue {$/;"	s
ListenerPool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^impl<A: NetworkListener + Send + 'static> ListenerPool<A> {$/;"	c
ListenerPool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^pub struct ListenerPool<A: NetworkListener> {$/;"	s
Listening	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl Drop for Listening {$/;"	c
Listening	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl Listening {$/;"	c
Listening	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl fmt::Debug for Listening {$/;"	c
Listening	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^pub struct Listening {$/;"	s
Locked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Locked,$/;"	e	enum:StatusCode
Logger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D> Drain for Logger<D>$/;"	c
Logger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D> Logger<D>$/;"	c
Logger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D> fmt::Debug for Logger<D>$/;"	c
Logger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct Logger<D = Arc<SendSyncRefUnwindSafeDrain<Ok = (), Err = Never>>>$/;"	s
LoneLeadingSurrogateInHexEscape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    LoneLeadingSurrogateInHexEscape,$/;"	e	enum:ErrorCode
Long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    Long,$/;"	e	enum:UsageToken
LoopDetected	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    LoopDetected,$/;"	e	enum:StatusCode
LowIndexMultiplePositional	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    LowIndexMultiplePositional,$/;"	e	enum:AppSettings
Mantissa	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^pub trait Mantissa: Integer {$/;"	i
Many	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    Many(HashMap<TypeId, T>)$/;"	e	enum:PtrMap
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Map,$/;"	e	enum:Unexpected
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Map(Vec<(Content<'de>, Content<'de>)>),$/;"	e	enum:content::Content
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Map(Vec<(Content, Content)>),$/;"	e	enum:content::Content
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl Clone for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl Debug for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl Default for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl Eq for Map<String, Value> {}$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl Extend<(String, Value)> for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl FromIterator<(String, Value)> for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl IntoIterator for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl PartialEq for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl serde::ser::Serialize for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl<'a, Q> ops::Index<&'a Q> for Map<String, Value>$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl<'a, Q> ops::IndexMut<&'a Q> for Map<String, Value>$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl<'a> IntoIterator for &'a Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl<'a> IntoIterator for &'a mut Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl<'de> de::Deserialize<'de> for Map<String, Value> {$/;"	c
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct Map<K, V> {$/;"	s
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    Map {$/;"	e	enum:Compound
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    Map(String),$/;"	e	enum:KeyClass
Map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    Map {$/;"	e	enum:SerializeMap
MapAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	i
MapAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'a, R: 'a> MapAccess<'a, R> {$/;"	c
MapAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::MapAccess<'de> for MapAccess<'a, R> {$/;"	c
MapAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^struct MapAccess<'a, R: 'a> {$/;"	s
MapAccessDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, A> de::EnumAccess<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<A> MapAccessDeserializer<A> {$/;"	c
MapAccessDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    impl<'de, A> VariantAccess<'de> for MapAsEnum<A>$/;"	c	module:private
MapAsEnum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s	module:private
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, I, E> Clone for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, I, E> Debug for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, I, E> MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, I, E> de::Deserializer<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, I, E> de::MapAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, I, E> de::SeqAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> de::MapAccess<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s	module:content
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl MapDeserializer {$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> MapAccess<'de> for MapDeserializer {$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for MapDeserializer {$/;"	c
MapDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct MapDeserializer {$/;"	s
MapErrFn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait MapErrFn<EI, EO>$/;"	i
MapErrFn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait MapErrFn<EI, EO>: 'static + Sync + Send + Fn(EI) -> EO {}$/;"	i
MapError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain, E> Drain for MapError<D, E> {$/;"	c
MapError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain, E> MapError<D, E> {$/;"	c
MapError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct MapError<D: Drain, E> {$/;"	s
MapImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type MapImpl<K, V> = BTreeMap<K, V>;$/;"	t
MapImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type MapImpl<K, V> = IndexMap<K, V>;$/;"	t
MapKey	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, 'a, R> de::Deserializer<'de> for MapKey<'a, R>$/;"	c
MapKey	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^struct MapKey<'a, R: 'a> {$/;"	s
MapKeyDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for MapKeyDeserializer<'de> {$/;"	c
MapKeyDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct MapKeyDeserializer<'de> {$/;"	s
MapKeySerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::Serializer for MapKeySerializer<'a, W, F>$/;"	c
MapKeySerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^struct MapKeySerializer<'a, W: 'a, F: 'a> {$/;"	s
MapKeySerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::Serializer for MapKeySerializer {$/;"	c
MapKeySerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^struct MapKeySerializer;$/;"	s
MapRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'a, 'de, E> MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a, E> de::MapAccess<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
MapRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> MapAccess<'de> for MapRefDeserializer<'de> {$/;"	c
MapRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> MapRefDeserializer<'de> {$/;"	c
MapRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for MapRefDeserializer<'de> {$/;"	c
MapRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct MapRefDeserializer<'de> {$/;"	s
MatchedArg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/matched_arg.rs	/^impl Default for MatchedArg {$/;"	c
MatchedArg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/matched_arg.rs	/^impl MatchedArg {$/;"	c
MatchedArg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/matched_arg.rs	/^pub struct MatchedArg {$/;"	s
Math	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^pub(crate) trait Math: Clone + Sized + Default {$/;"	i
MaxAge	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    MaxAge(u32),$/;"	e	enum:CacheDirective
MaxAge	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    MaxAge(u64),$/;"	e	enum:Directive
MaxStale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    MaxStale(u32),$/;"	e	enum:CacheDirective
MaybeHyphenValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    MaybeHyphenValue,$/;"	e	enum:ParseResult
MaybeNegNum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    MaybeNegNum,$/;"	e	enum:ParseResult
MediaDesc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl FromStr for MediaDesc {$/;"	c
MediaDesc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl fmt::Display for MediaDesc {$/;"	c
MediaDesc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^pub enum MediaDesc {$/;"	g
MemoryStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^impl TokenStorage for MemoryStorage {$/;"	c
MemoryStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^pub struct MemoryStorage {$/;"	s
Message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    Message(Box<str>),$/;"	e	enum:ErrorCode
MessageStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        type MessageStream = PooledStream<super::proxy::Proxied<MockStream, MockStream>>;$/;"	t	function:tests::test_proxy
MessageStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        type MessageStream = PooledStream<super::proxy::Proxied<MockStream, MockStream>>;$/;"	t	function:tests::test_proxy_tunnel
MetaEvent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^pub enum MetaEvent {$/;"	g
Metadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    Metadata,$/;"	e	enum:Scope
MetadataReadonly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    MetadataReadonly,$/;"	e	enum:Scope
Method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    Method,$/;"	e	enum:Error
Method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^impl AsRef<str> for Method {$/;"	c
Method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^impl FromStr for Method {$/;"	c
Method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^impl Method {$/;"	c
Method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^impl fmt::Display for Method {$/;"	c
Method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^pub enum Method {$/;"	g
MethodInfo	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct MethodInfo {$/;"	s
MethodNotAllowed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    MethodNotAllowed,$/;"	e	enum:StatusCode
MethodsBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait MethodsBuilder {}$/;"	i
MinFresh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    MinFresh(u32),$/;"	e	enum:CacheDirective
MisdirectedRequest	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    MisdirectedRequest,$/;"	e	enum:StatusCode
MissingAPIKey	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    MissingAPIKey,$/;"	e	enum:Error
MissingArgumentOrSubcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    MissingArgumentOrSubcommand,$/;"	e	enum:ErrorKind
MissingFieldDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for MissingFieldDeserializer<E>$/;"	c	function:missing_field
MissingFieldDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s	function:missing_field
MissingRequiredArgument	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    MissingRequiredArgument,$/;"	e	enum:ErrorKind
MissingSubcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    MissingSubcommand,$/;"	e	enum:ErrorKind
MissingToken	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    MissingToken(Box<dyn error::Error>),$/;"	e	enum:Error
MockConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^impl NetworkConnector for MockConnector {$/;"	c
MockConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^pub struct MockConnector;$/;"	s
MockGoogleAuth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    impl Default for MockGoogleAuth {$/;"	c	module:tests
MockGoogleAuth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    impl hyper::net::NetworkConnector for MockGoogleAuth {$/;"	c	module:tests
MockGoogleAuth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    pub struct MockGoogleAuth(SequentialConnector);$/;"	s	module:tests
MockGoogleRefresh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    impl Default for MockGoogleRefresh {$/;"	c	module:tests
MockGoogleRefresh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    impl hyper::net::NetworkConnector for MockGoogleRefresh {$/;"	c	module:tests
MockGoogleRefresh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    struct MockGoogleRefresh(SequentialConnector);$/;"	s	module:tests
MockSsl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^impl<T: NetworkStream + Send + Clone> SslClient<T> for MockSsl {$/;"	c
MockSsl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^pub struct MockSsl;$/;"	s
MockStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^impl MockStream {$/;"	c
MockStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^impl NetworkStream for MockStream {$/;"	c
MockStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^impl PartialEq for MockStream {$/;"	c
MockStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^impl Read for MockStream {$/;"	c
MockStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^impl Write for MockStream {$/;"	c
MockStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^pub struct MockStream {$/;"	s
ModeratePathCache	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^pub(crate) trait ModeratePathCache {$/;"	i
ModeratePathPowers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^impl ModeratePathPowers {$/;"	c
ModeratePathPowers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^pub(crate) struct ModeratePathPowers {$/;"	s
MovedPermanently	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    MovedPermanently,$/;"	e	enum:StatusCode
Multi	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^enum Multi<'a, 'b: 'a> {$/;"	g
MultiListNode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl KV for MultiListNode {$/;"	c
MultiListNode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^struct MultiListNode {$/;"	s
MultiPartReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl<'a> MultiPartReader<'a> {$/;"	c
MultiPartReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl<'a> Read for MultiPartReader<'a> {$/;"	c
MultiPartReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct MultiPartReader<'a> {$/;"	s
MultiStatus	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    MultiStatus,$/;"	e	enum:StatusCode
MultilineFormatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a, 'b> MultilineFormatter<'a, 'b> {$/;"	c
MultilineFormatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub struct MultilineFormatter<'a, 'b: 'a>(Multi<'a, 'b>);$/;"	s
Multiple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    Multiple,$/;"	e	enum:ArgSettings
Multiple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    Multiple,$/;"	e	enum:UsageToken
MultipleChoices	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    MultipleChoices,$/;"	e	enum:StatusCode
MustRevalidate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    MustRevalidate,$/;"	e	enum:CacheDirective
Mutex	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for Mutex<T>$/;"	c
Mutex	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Mutex,$/;"	e	enum:MutexDrainError
Mutex	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain> Drain for std::sync::Mutex<D> {$/;"	c
MutexDrainError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a, D: Drain> From<std::sync::PoisonError<std::sync::MutexGuard<'a, D>>>$/;"	c
MutexDrainError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D: Drain> fmt::Display for MutexDrainError<D>$/;"	c
MutexDrainError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D> fmt::Debug for MutexDrainError<D>$/;"	c
MutexDrainError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<D> std::error::Error for MutexDrainError<D>$/;"	c
MutexDrainError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub enum MutexDrainError<D: Drain> {$/;"	g
N	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^enum N {$/;"	g
N	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl Eq for N {}$/;"	c
N	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^type N = String;$/;"	t
NAME	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^        static NAME: &'static str = "Link";$/;"	v	method:Link::header_name
NAME	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^        static NAME: &'static str = "Origin";$/;"	v	method:Origin::header_name
NAME	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^        static NAME: &'static str = "Referrer-Policy";$/;"	v	method:ReferrerPolicy::header_name
NULL	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^        static NULL: Value = Value::Null;$/;"	v	function:index
Name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    Name,$/;"	e	enum:UsageToken
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl AsRef<Path> for NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl From<PersistError> for NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl Read for NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl Seek for NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl Write for NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl fmt::Debug for NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl std::os::unix::io::AsRawFd for NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl std::os::windows::io::AsRawHandle for NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl<'a> Read for &'a NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl<'a> Seek for &'a NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl<'a> Write for &'a NamedTempFile {$/;"	c
NamedTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^pub struct NamedTempFile {$/;"	s
Nanos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Nanos,$/;"	e	enum:Duration::deserialize::Field
Nanos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Nanos,$/;"	e	enum:SystemTime::deserialize::Field
NeedsLongHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    NeedsLongHelp,$/;"	e	enum:AppSettings
NeedsLongVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    NeedsLongVersion,$/;"	e	enum:AppSettings
NeedsSubcommandHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    NeedsSubcommandHelp,$/;"	e	enum:AppSettings
NegInt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    NegInt(i64),$/;"	e	enum:N
NegativeServerResponse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    NegativeServerResponse(String, Option<String>),$/;"	e	enum:RequestError
NestedType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait NestedType {}$/;"	i
NetworkAuthenticationRequired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NetworkAuthenticationRequired,$/;"	e	enum:StatusCode
NetworkConnections	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl<'a, N: NetworkListener + 'a> Iterator for NetworkConnections<'a, N> {$/;"	c
NetworkConnections	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub struct NetworkConnections<'a, N: NetworkListener + 'a>(&'a mut N);$/;"	s
NetworkConnector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub trait NetworkConnector {$/;"	i
NetworkListener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub trait NetworkListener: Clone {$/;"	i
NetworkStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl NetworkStream {$/;"	c
NetworkStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub trait NetworkStream: Read + Write + Any + Send + Typeable {$/;"	i
Never	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    Never,$/;"	e	enum:ColorWhen
Never	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub type Never = private::NeverStruct;$/;"	t
NeverDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for NeverDeserializer<E>$/;"	c
NeverDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
NeverStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub struct NeverStruct(());$/;"	s	module:private
NewlineReplacer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a, 'b> fmt::Write for NewlineReplacer<'a, 'b> {$/;"	c
NewlineReplacer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^struct NewlineReplacer<'a, 'b: 'a>(&'a mut fmt::Formatter<'b>);$/;"	s
Newtype	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Newtype(Box<Content<'de>>),$/;"	e	enum:content::Content
NewtypeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    NewtypeStruct,$/;"	e	enum:Unexpected
NewtypeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        NewtypeStruct(&'static str, Box<Content>),$/;"	e	enum:content::Content
NewtypeVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    NewtypeVariant,$/;"	e	enum:Unexpected
NewtypeVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        NewtypeVariant(&'static str, u32, &'static str, Box<Content>),$/;"	e	enum:content::Content
Next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Next,$/;"	e	enum:RelationType
NextArchive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    NextArchive,$/;"	e	enum:RelationType
NextLineHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    NextLineHelp,$/;"	e	enum:AppSettings
NextLineHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    NextLineHelp,$/;"	e	enum:ArgSettings
NoBinaryName	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    NoBinaryName,$/;"	e	enum:AppSettings
NoCache	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    NoCache,$/;"	e	enum:CacheDirective
NoCache	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^    NoCache,$/;"	e	enum:Pragma
NoClass	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NoClass,$/;"	e	enum:StatusClass
NoContent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NoContent,$/;"	e	enum:StatusCode
NoReferrer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    NoReferrer,$/;"	e	enum:ReferrerPolicy
NoReferrerWhenDowngrade	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    NoReferrerWhenDowngrade,$/;"	e	enum:ReferrerPolicy
NoStore	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    NoStore,$/;"	e	enum:CacheDirective
NoTransform	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    NoTransform,$/;"	e	enum:CacheDirective
NonAuthoritativeInformation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NonAuthoritativeInformation,$/;"	e	enum:StatusCode
NonRecursive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    NonRecursive,$/;"	e	enum:RecursiveMode
None	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    None(T),$/;"	e	enum:Format
None	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^    None,$/;"	e	enum:RangeUnit
None	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        None,$/;"	e	enum:content::Content
None	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        None,$/;"	e	enum:content::Content
Normal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    Normal(T1),$/;"	e	enum:Proxied
NotAcceptable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NotAcceptable,$/;"	e	enum:StatusCode
NotExtended	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NotExtended,$/;"	e	enum:StatusCode
NotFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    NotFound,$/;"	e	enum:ParseResult
NotFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NotFound,$/;"	e	enum:StatusCode
NotImplemented	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NotImplemented,$/;"	e	enum:StatusCode
NotModified	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    NotModified,$/;"	e	enum:StatusCode
NoticeRemove	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    NoticeRemove(PathBuf),$/;"	e	enum:DebouncedEvent
NoticeWrite	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    NoticeWrite(PathBuf),$/;"	e	enum:DebouncedEvent
Null	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^    Null,$/;"	e	enum:AccessControlAllowOrigin
Null	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    Null,$/;"	e	enum:Value
NullError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^impl Error for NullError {$/;"	c
NullError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^impl fmt::Display for NullError {$/;"	c
NullError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^pub struct NullError;$/;"	s
NullStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^impl TokenStorage for NullStorage {$/;"	c
NullStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^pub struct NullStorage;$/;"	s
NullWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^impl Watcher for NullWatcher {$/;"	c
NullWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^pub struct NullWatcher;$/;"	s
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl FromStr for Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^pub trait Number: AsCast + ops::Add<Output = Self> {}$/;"	i
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl Debug for Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl From<ParserNumber> for Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl Serialize for Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl fmt::Display for Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl<'de, 'a> Deserializer<'de> for &'a Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl<'de> Deserialize<'de> for Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl<'de> Deserializer<'de> for Number {$/;"	c
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^pub struct Number {$/;"	s
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    Number { ser: &'a mut Serializer<W, F> },$/;"	e	enum:Compound
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    Number,$/;"	e	enum:KeyClass
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    Number(Number),$/;"	e	enum:Value
Number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    Number { out_value: Option<Value> },$/;"	e	enum:SerializeMap
NumberDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl<'de> MapAccess<'de> for NumberDeserializer {$/;"	c
NumberDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^pub(crate) struct NumberDeserializer {$/;"	s
NumberFieldDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl<'de> Deserializer<'de> for NumberFieldDeserializer {$/;"	c
NumberFieldDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^struct NumberFieldDeserializer;$/;"	s
NumberFromString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl<'de> de::Deserialize<'de> for NumberFromString {$/;"	c
NumberFromString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^pub struct NumberFromString {$/;"	s
NumberKey	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^impl<'de> de::Deserialize<'de> for NumberKey {$/;"	c
NumberKey	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^struct NumberKey;$/;"	s
NumberOutOfRange	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    NumberOutOfRange,$/;"	e	enum:ErrorCode
NumberStrEmitter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W: io::Write, F: Formatter> ser::Serializer for NumberStrEmitter<'a, W, F> {$/;"	c
NumberStrEmitter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^struct NumberStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
NumberValueEmitter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::Serializer for NumberValueEmitter {$/;"	c
NumberValueEmitter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^struct NumberValueEmitter;$/;"	s
NumberVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^        impl<'de> Visitor<'de> for NumberVisitor {$/;"	c	method:Number::deserialize
NumberVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^        struct NumberVisitor;$/;"	s	method:Number::deserialize
Object	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    Object(Map<String, Value>),$/;"	e	enum:Value
Occupied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    Occupied(OccupiedEntry<'a, K, V>)$/;"	e	enum:Entry
Occupied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    Occupied(OccupiedEntry<'a>),$/;"	e	enum:Entry
OccupiedEntry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^impl<'a, K, V> OccupiedEntry<'a, K, V> {$/;"	c
OccupiedEntry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^pub struct OccupiedEntry<'a, K: 'a, V: 'a> {$/;"	s
OccupiedEntry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl<'a> OccupiedEntry<'a> {$/;"	c
OccupiedEntry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct OccupiedEntry<'a> {$/;"	s
OccupiedEntryImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type OccupiedEntryImpl<'a> = btree_map::OccupiedEntry<'a, String, Value>;$/;"	t
OccupiedEntryImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type OccupiedEntryImpl<'a> = indexmap::map::OccupiedEntry<'a, String, Value>;$/;"	t
Off	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Off,$/;"	e	enum:FilterLevel
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Ok,$/;"	e	enum:StatusCode
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Ok,$/;"	e	enum:deserialize::Field
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type Ok = Content;$/;"	t	module:content
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	t	module:content
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type Ok = ();$/;"	t
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	t
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type Ok = ();$/;"	t	implementation:Formatter
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	t
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeMap
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeSeq
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStruct
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStructVariant
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTuple
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleStruct
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleVariant
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:Serializer
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type Ok = ();$/;"	t
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type Ok = ();$/;"	t	implementation:NumberStrEmitter
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type Ok = ();$/;"	t	implementation:RawValueStrEmitter
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Ok = String;$/;"	t	implementation:MapKeySerializer
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:NumberValueEmitter
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:RawValueEmitter
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeMap
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeStructVariant
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeTupleVariant
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeVec
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:Serializer
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = ();$/;"	t
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = ();$/;"	t	implementation:Discard
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = ();$/;"	t	implementation:IgnoreResult
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = (D1::Ok, D2::Ok);$/;"	t	implementation:Duplicate
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = D::Ok;$/;"	t	implementation:Arc
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = D::Ok;$/;"	t	implementation:Box
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = D::Ok;$/;"	t	implementation:D
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = D::Ok;$/;"	t	implementation:MapError
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = D::Ok;$/;"	t	implementation:Mutex
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = Option<D::Ok>;$/;"	t
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok = Option<D::Ok>;$/;"	t	implementation:LevelFilter
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    type Ok;$/;"	t	interface:Drain
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^            type Ok = ();$/;"	t	implementation:std_only::multichain::CheckOwned
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    type Ok = ();$/;"	t	implementation:Async
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    type Ok = ();$/;"	t	implementation:AsyncCore
Ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    type Ok = ();$/;"	t
OnDisk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    OnDisk(File),$/;"	e	enum:SpooledInner
One	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    One(TypeId, T),$/;"	e	enum:PtrMap
OneOf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl Display for OneOf {$/;"	c
OneOf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^struct OneOf {$/;"	s
OnlyIfCached	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    OnlyIfCached,$/;"	e	enum:CacheDirective
OperationsBuffer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^pub type OperationsBuffer = Arc<Mutex<OperationsBufferInner>>;$/;"	t
OperationsBufferInner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^pub type OperationsBufferInner = HashMap<PathBuf, (Option<op::Op>, Option<PathBuf>, Option<u64>)/;"	t
Opt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    Opt(&'a str),$/;"	e	enum:ParseResult
OptBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^impl<'n, 'e, 'z> From<&'z Arg<'n, 'e>> for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^impl<'n, 'e> AnyArg<'n, 'e> for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^impl<'n, 'e> DispOrder for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^impl<'n, 'e> Display for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^impl<'n, 'e> From<Arg<'n, 'e>> for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^impl<'n, 'e> OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^impl<'n, 'e> PartialEq for OptBuilder<'n, 'e> {$/;"	c
OptBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^pub struct OptBuilder<'n, 'e>$/;"	s
OptCell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^impl<T: Clone> Clone for OptCell<T> {$/;"	c
OptCell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^impl<T> Deref for OptCell<T> {$/;"	c
OptCell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^impl<T> OptCell<T> {$/;"	c
OptCell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^pub struct OptCell<T>(UnsafeCell<Option<T>>);$/;"	s
Option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Option<T>$/;"	c
Option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Option,$/;"	e	enum:Unexpected
Option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for Option<T>$/;"	c
Option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T: Value> Value for Option<T> {$/;"	c
OptionVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for OptionVisitor<T>$/;"	c
OptionVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
Optional	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Optional,$/;"	e	enum:Unsupported
Options	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Options,$/;"	e	enum:Method
Origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^impl FromStr for Origin {$/;"	c
Origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^impl Header for Origin {$/;"	c
Origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^impl HeaderFormat for Origin {$/;"	c
Origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^impl Origin {$/;"	c
Origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^impl PartialEq for Origin {$/;"	c
Origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^impl fmt::Display for Origin {$/;"	c
Origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^pub struct Origin {$/;"	s
Origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    Origin,$/;"	e	enum:ReferrerPolicy
OriginWhenCrossOrigin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    OriginWhenCrossOrigin,$/;"	e	enum:ReferrerPolicy
OsSplit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^impl<'a> Iterator for OsSplit<'a> {$/;"	c
OsSplit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^pub struct OsSplit<'a> {$/;"	s
OsStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^impl OsStrExt2 for OsStr {$/;"	c
OsStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^impl OsStrExt3 for OsStr {$/;"	c
OsStr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for OsStr {$/;"	c
OsStrExt2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^pub trait OsStrExt2 {$/;"	i
OsStrExt3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^pub trait OsStrExt3 {$/;"	i
OsString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for OsString {$/;"	c
OsString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for OsString {$/;"	c
OsStringVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Visitor<'de> for OsStringVisitor {$/;"	c
OsStringVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
OsValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> Default for OsValues<'a> {$/;"	c
OsValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> DoubleEndedIterator for OsValues<'a> {$/;"	c
OsValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> ExactSizeIterator for OsValues<'a> {}$/;"	c
OsValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> Iterator for OsValues<'a> {$/;"	c
OsValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^pub struct OsValues<'a> {$/;"	s
Other	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        Other(String),$/;"	e	enum:scheme::Scheme
Other	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Other(&'a str),$/;"	e	enum:Unexpected
Other	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Other,$/;"	e	enum:content::TagContentOtherField
Other	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    Other,$/;"	e	enum:ErrorKind
Other	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Other,$/;"	e	enum:Error
Output	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    type Output = Self;$/;"	t	implementation:AppFlags
Output	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    type Output = Value;$/;"	t
Output	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    type Output = Value;$/;"	t
OverflowStrategy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^pub enum OverflowStrategy {$/;"	g
Owned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    type Owned = Box<RawValue>;$/;"	t	implementation:RawValue
OwnedKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> KV for OwnedKV<T>$/;"	c
OwnedKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct OwnedKV<T>($/;"	s
OwnedKVList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl KV for OwnedKVList {$/;"	c
OwnedKVList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl OwnedKVList {$/;"	c
OwnedKVList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl fmt::Debug for OwnedKVList {$/;"	c
OwnedKVList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> convert::From<OwnedKV<T>> for OwnedKVList$/;"	c
OwnedKVList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct OwnedKVList {$/;"	s
OwnedKVListNode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> KV for OwnedKVListNode<T>$/;"	c
OwnedKVListNode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^struct OwnedKVListNode<T>$/;"	s
OwnedKeyValueList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub type OwnedKeyValueList = OwnedKVList;$/;"	t
OwnedRawDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> MapAccess<'de> for OwnedRawDeserializer {$/;"	c
OwnedRawDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^pub struct OwnedRawDeserializer {$/;"	s
POW10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^static POW10: [f64; 309] = [$/;"	v
Pair	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub trait Pair {$/;"	i	module:private
PairDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, A, B, E> de::Deserializer<'de> for PairDeserializer<A, B, E>$/;"	c
PairDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, A, B, E> de::SeqAccess<'de> for PairVisitor<A, B, E>$/;"	c
PairVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
ParseResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^pub enum ParseResult<'a> {$/;"	g
Parser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^impl<'a, 'b> Parser<'a, 'b>$/;"	c
Parser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^pub struct Parser<'a, 'b>$/;"	s
ParserNumber	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl ParserNumber {$/;"	c
ParserNumber	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^pub(crate) enum ParserNumber {$/;"	g
Part	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait Part {}$/;"	i
PartialContent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    PartialContent,$/;"	e	enum:StatusCode
PartialInterruptingWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^impl<'a, W: Write, R: Rng> Write for PartialInterruptingWriter<'a, W, R> {$/;"	c
PartialInterruptingWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^struct PartialInterruptingWriter<'a, W: 'a + Write, R: 'a + Rng> {$/;"	s
Patch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Patch,$/;"	e	enum:Method
Path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a Path {$/;"	c
Path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for Path {$/;"	c
PathBuf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for PathBuf {$/;"	c
PathBuf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for PathBuf {$/;"	c
PathBufVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Visitor<'de> for PathBufVisitor {$/;"	c
PathBufVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathData	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^struct PathData {$/;"	s
PathError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^impl error::Error for PathError {$/;"	c
PathError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^impl fmt::Display for PathError {$/;"	c
PathError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^struct PathError {$/;"	s
PathNotFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    PathNotFound,$/;"	e	enum:Error
PathPersistError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl error::Error for PathPersistError {$/;"	c
PathPersistError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl fmt::Display for PathPersistError {$/;"	c
PathPersistError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^pub struct PathPersistError {$/;"	s
PathVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'a> Visitor<'a> for PathVisitor {$/;"	c
PathVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct PathVisitor;$/;"	s
PayloadTooLarge	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    PayloadTooLarge,$/;"	e	enum:StatusCode
Payment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Payment,$/;"	e	enum:RelationType
PaymentRequired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    PaymentRequired,$/;"	e	enum:StatusCode
Pending	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    Pending(PollInformation),$/;"	e	enum:DeviceFlowState
PermanentRedirect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    PermanentRedirect,$/;"	e	enum:StatusCode
Permission	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl RequestValue for Permission {}$/;"	c
Permission	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Resource for Permission {}$/;"	c
Permission	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for Permission {}$/;"	c
Permission	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct Permission {$/;"	s
PermissionCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for PermissionCreateCall<'a, C, A> {}$/;"	c
PermissionCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> PermissionCreateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetT/;"	c
PermissionCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionCreateCall<'a, C, A>$/;"	s
PermissionDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for PermissionDeleteCall<'a, C, A> {}$/;"	c
PermissionDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> PermissionDeleteCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetT/;"	c
PermissionDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionDeleteCall<'a, C, A>$/;"	s
PermissionGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for PermissionGetCall<'a, C, A> {}$/;"	c
PermissionGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> PermissionGetCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToke/;"	c
PermissionGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionGetCall<'a, C, A>$/;"	s
PermissionList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for PermissionList {}$/;"	c
PermissionList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionList {$/;"	s
PermissionListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for PermissionListCall<'a, C, A> {}$/;"	c
PermissionListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> PermissionListCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetTok/;"	c
PermissionListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionListCall<'a, C, A>$/;"	s
PermissionMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for PermissionMethods<'a, C, A> {}$/;"	c
PermissionMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> PermissionMethods<'a, C, A> {$/;"	c
PermissionMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionMethods<'a, C, A>$/;"	s
PermissionPermissionDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for PermissionPermissionDetails {}$/;"	c
PermissionPermissionDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for PermissionPermissionDetails {}$/;"	c
PermissionPermissionDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionPermissionDetails {$/;"	s
PermissionTeamDrivePermissionDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for PermissionTeamDrivePermissionDetails {}$/;"	c
PermissionTeamDrivePermissionDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for PermissionTeamDrivePermissionDetails {}$/;"	c
PermissionTeamDrivePermissionDetails	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionTeamDrivePermissionDetails {$/;"	s
PermissionUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for PermissionUpdateCall<'a, C, A> {}$/;"	c
PermissionUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> PermissionUpdateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetT/;"	c
PermissionUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct PermissionUpdateCall<'a, C, A>$/;"	s
PersistError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl error::Error for PersistError {$/;"	c
PersistError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl fmt::Display for PersistError {$/;"	c
PersistError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^pub struct PersistError {$/;"	s
PhantomData	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for PhantomData<T> {$/;"	c
PhantomData	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl<'de, T> DeserializeSeed<'de> for PhantomData<T>$/;"	c
PhantomData	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for PhantomData<T> {$/;"	c
PhantomDataVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T: ?Sized> Visitor<'de> for PhantomDataVisitor<T> {$/;"	c
PhantomDataVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
PhotoReadonly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    PhotoReadonly,$/;"	e	enum:Scope
PlainDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<W> Decorator for PlainDecorator<W>$/;"	c
PlainDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<W> PlainDecorator<W>$/;"	c
PlainDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct PlainDecorator<W>(RefCell<W>)$/;"	s
PlainRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a, W> Drop for PlainRecordDecorator<'a, W>$/;"	c
PlainRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a, W> RecordDecorator for PlainRecordDecorator<'a, W>$/;"	c
PlainRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a, W> io::Write for PlainRecordDecorator<'a, W>$/;"	c
PlainRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct PlainRecordDecorator<'a, W: 'a>(&'a RefCell<W>)$/;"	s
PlainSyncDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<W> Decorator for PlainSyncDecorator<W>$/;"	c
PlainSyncDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<W> PlainSyncDecorator<W>$/;"	c
PlainSyncDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct PlainSyncDecorator<W>(sync::Arc<sync::Mutex<W>>)$/;"	s
PlainSyncRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<W> Drop for PlainSyncRecordDecorator<W>$/;"	c
PlainSyncRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<W> RecordDecorator for PlainSyncRecordDecorator<W>$/;"	c
PlainSyncRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<W> io::Write for PlainSyncRecordDecorator<W>$/;"	c
PlainSyncRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct PlainSyncRecordDecorator<W>$/;"	s
Plaintext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    impl<T: NetworkStream + Send + Clone> SslClient<T> for Plaintext {$/;"	c	module:no_ssl
Plaintext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    pub struct Plaintext;$/;"	s	module:no_ssl
PollError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^impl fmt::Display for PollError {$/;"	c
PollError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^pub enum PollError {$/;"	g
PollInformation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^impl fmt::Display for PollInformation {$/;"	c
PollInformation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^pub struct PollInformation {$/;"	s
PollWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^impl Drop for PollWatcher {$/;"	c
PollWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^impl PollWatcher {$/;"	c
PollWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^impl Watcher for PollWatcher {$/;"	c
PollWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^pub struct PollWatcher {$/;"	s
PollWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^unsafe impl Sync for PollWatcher {}$/;"	c
Pool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl Pool<DefaultConnector> {$/;"	c
Pool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<C: NetworkConnector<Stream=S>, S: NetworkStream + Send> NetworkConnector for Pool<C> {$/;"	c
Pool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<C: NetworkConnector> Pool<C> {$/;"	c
Pool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^pub struct Pool<C: NetworkConnector> {$/;"	s
PoolImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<S> PoolImpl<S> {$/;"	c
PoolImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^struct PoolImpl<S> {$/;"	s
PooledStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<S: NetworkStream> NetworkStream for PooledStream<S> {$/;"	c
PooledStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<S: NetworkStream> PooledStream<S> {$/;"	c
PooledStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<S: NetworkStream> Read for PooledStream<S> {$/;"	c
PooledStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<S: NetworkStream> Write for PooledStream<S> {$/;"	c
PooledStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<S> Drop for PooledStream<S> {$/;"	c
PooledStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^impl<S> fmt::Debug for PooledStream<S> where S: fmt::Debug + 'static {$/;"	c
PooledStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^pub struct PooledStream<S> {$/;"	s
PooledStreamInner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^struct PooledStreamInner<S> {$/;"	s
Pos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    Pos(&'a str),$/;"	e	enum:ParseResult
PosBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^impl<'n, 'e> AnyArg<'n, 'e> for PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^impl<'n, 'e> DispOrder for PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^impl<'n, 'e> Display for PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^impl<'n, 'e> PartialEq for PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^impl<'n, 'e> PosBuilder<'n, 'e> {$/;"	c
PosBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^pub struct PosBuilder<'n, 'e>$/;"	s
PosInt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    PosInt(u64),$/;"	e	enum:N
Position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^pub struct Position {$/;"	s
Post	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Post,$/;"	e	enum:Method
PowerShell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    PowerShell,$/;"	e	enum:Shell
PowerShellGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/powershell.rs	/^impl<'a, 'b> PowerShellGen<'a, 'b> {$/;"	c
PowerShellGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/powershell.rs	/^pub struct PowerShellGen<'a, 'b>$/;"	s
Pragma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^impl Header for Pragma {$/;"	c
Pragma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^impl HeaderFormat for Pragma {$/;"	c
Pragma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^impl fmt::Display for Pragma {$/;"	c
Pragma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^pub enum Pragma {$/;"	g
PreconditionFailed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    PreconditionFailed,$/;"	e	enum:StatusCode
PreconditionRequired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    PreconditionRequired,$/;"	e	enum:StatusCode
PredecessorVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    PredecessorVersion,$/;"	e	enum:RelationType
Prefer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^impl Header for Prefer {$/;"	c
Prefer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^impl HeaderFormat for Prefer {$/;"	c
Prefer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^impl fmt::Display for Prefer {$/;"	c
Prefer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^pub struct Prefer(pub Vec<Preference>);$/;"	s
Preference	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^impl FromStr for Preference {$/;"	c
Preference	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^impl fmt::Display for Preference {$/;"	c
Preference	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^pub enum Preference {$/;"	g
PreferenceApplied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^impl Header for PreferenceApplied {$/;"	c
PreferenceApplied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^impl HeaderFormat for PreferenceApplied {$/;"	c
PreferenceApplied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^impl fmt::Display for PreferenceApplied {$/;"	c
PreferenceApplied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^pub struct PreferenceApplied(pub Vec<Preference>);$/;"	s
Prev	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Prev,$/;"	e	enum:RelationType
PrevArchive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    PrevArchive,$/;"	e	enum:RelationType
Previous	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Previous,$/;"	e	enum:RelationType
Print	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Print,$/;"	e	enum:MediaDesc
Private	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    Private,$/;"	e	enum:CacheDirective
Processing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Processing,$/;"	e	enum:StatusCode
Projection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Projection,$/;"	e	enum:MediaDesc
PropagateGlobalValuesDown	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    PropagateGlobalValuesDown,$/;"	e	enum:AppSettings
Propagated	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    Propagated,$/;"	e	enum:AppSettings
Protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^impl Display for Protocol {$/;"	c
Protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^impl FromStr for Protocol {$/;"	c
Protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^impl Protocol {$/;"	c
Protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^pub struct Protocol {$/;"	s
Protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^pub trait Protocol {$/;"	i
ProtocolName	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^impl Display for ProtocolName {$/;"	c
ProtocolName	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^impl FromStr for ProtocolName {$/;"	c
ProtocolName	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^pub enum ProtocolName {$/;"	g
Proxied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^impl<T1, T2> Proxied<T1, T2> {$/;"	c
Proxied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^impl<T1: NetworkStream, T2: NetworkStream> NetworkStream for Proxied<T1, T2> {$/;"	c
Proxied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^impl<T1: NetworkStream, T2: NetworkStream> io::Read for Proxied<T1, T2> {$/;"	c
Proxied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^impl<T1: NetworkStream, T2: NetworkStream> io::Write for Proxied<T1, T2> {$/;"	c
Proxied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^pub enum Proxied<T1, T2> {$/;"	g
Proxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^impl<C, S> NetworkConnector for Proxy<C, S>$/;"	c
Proxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^pub struct Proxy<C, S>$/;"	s
ProxyAuthenticationRequired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    ProxyAuthenticationRequired,$/;"	e	enum:StatusCode
ProxyConfig	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<C, S> ProxyConfig<C, S>$/;"	c
ProxyConfig	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub struct ProxyConfig<C, S>$/;"	s
ProxyRevalidate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    ProxyRevalidate,$/;"	e	enum:CacheDirective
PtrMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^enum PtrMap<T> {$/;"	g
PtrMapCell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^impl<V: ?Sized + fmt::Debug + Any + 'static> Clone for PtrMapCell<V> where Box<V>: Clone {$/;"	c
PtrMapCell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^impl<V: ?Sized + fmt::Debug + Any + 'static> PtrMapCell<V> {$/;"	c
PtrMapCell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^pub struct PtrMapCell<V: ?Sized>(UnsafeCell<PtrMap<Box<V>>>);$/;"	s
Public	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    Public,$/;"	e	enum:CacheDirective
PushFnSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub type PushFnSerializer<'a> = PushFnValueSerializer<'a>;$/;"	t
PushFnValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<F> Value for PushFnValue<F>$/;"	c
PushFnValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct PushFnValue<F>(pub F)$/;"	s
PushFnValueSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a> Drop for PushFnValueSerializer<'a> {$/;"	c
PushFnValueSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a> PushFnValueSerializer<'a> {$/;"	c
PushFnValueSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct PushFnValueSerializer<'a> {$/;"	s
PushLazy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub type PushLazy<T> = PushFnValue<T>;$/;"	t
Put	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Put,$/;"	e	enum:Method
Quality	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^impl Default for Quality {$/;"	c
Quality	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^impl fmt::Display for Quality {$/;"	c
Quality	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^pub struct Quality(pub u16);$/;"	s
QualityItem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^impl<T: PartialEq> cmp::PartialOrd for QualityItem<T> {$/;"	c
QualityItem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^impl<T: fmt::Display> fmt::Display for QualityItem<T> {$/;"	c
QualityItem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^impl<T: str::FromStr> str::FromStr for QualityItem<T> {$/;"	c
QualityItem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^impl<T> QualityItem<T> {$/;"	c
QualityItem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^pub struct QualityItem<T> {$/;"	s
Quote	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    Quote,$/;"	e	enum:CharEscape
R	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a, 'de, R> Read<'de> for &'a mut R$/;"	c
R	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a, 'de, R> private::Sealed for &'a mut R where R: Read<'de> {}$/;"	c
R	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T: KV, R: KV> KV for (T, R) {$/;"	c
RandomShortRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^impl<'a, 'b, R: io::Read, N: rand::Rng> io::Read for RandomShortRead<'a, 'b, R, N> {$/;"	c
RandomShortRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^struct RandomShortRead<'a, 'b, R: io::Read, N: rand::Rng> {$/;"	s
Range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^impl FromStr for Range {$/;"	c
Range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^impl Header for Range {$/;"	c
Range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^impl HeaderFormat for Range {$/;"	c
Range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^impl Range {$/;"	c
Range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^impl fmt::Display for Range {$/;"	c
Range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^pub enum Range {$/;"	g
Range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for Range<Idx>$/;"	c
Range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<Idx> Serialize for Range<Idx>$/;"	c
RangeInclusive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for RangeInclusive<Idx>$/;"	c
RangeInclusive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<Idx> Serialize for RangeInclusive<Idx>$/;"	c
RangeNotSatisfiable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    RangeNotSatisfiable,$/;"	e	enum:StatusCode
RangeResponseHeader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl Header for RangeResponseHeader {$/;"	c
RangeResponseHeader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl HeaderFormat for RangeResponseHeader {$/;"	c
RangeResponseHeader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct RangeResponseHeader(pub Chunk);$/;"	s
RangeUnit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^impl Display for RangeUnit {$/;"	c
RangeUnit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^impl FromStr for RangeUnit {$/;"	c
RangeUnit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^pub enum RangeUnit {$/;"	g
RangeVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    impl<'de, Idx> Visitor<'de> for RangeVisitor<Idx>$/;"	c	module:range
RangeVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s	module:range
Raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    Raw {$/;"	e	enum:EventTx
RawEvent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub struct RawEvent {$/;"	s
RawEvent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^unsafe impl Send for RawEvent {}$/;"	c
RawKey	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> Deserialize<'de> for RawKey {$/;"	c
RawKey	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^struct RawKey;$/;"	s
RawKeyDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> Deserializer<'de> for RawKeyDeserializer {$/;"	c
RawKeyDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^struct RawKeyDeserializer;$/;"	s
RawStatus	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/mod.rs	/^pub struct RawStatus(pub u16, pub Cow<'static, str>);$/;"	s
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl Debug for RawValue {$/;"	c
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl Display for RawValue {$/;"	c
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl RawValue {$/;"	c
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl Serialize for RawValue {$/;"	c
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl ToOwned for RawValue {$/;"	c
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a RawValue {$/;"	c
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^pub struct RawValue {$/;"	s
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    RawValue { ser: &'a mut Serializer<W, F> },$/;"	e	enum:Compound
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    RawValue,$/;"	e	enum:KeyClass
RawValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    RawValue { out_value: Option<Value> },$/;"	e	enum:SerializeMap
RawValueEmitter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::Serializer for RawValueEmitter {$/;"	c
RawValueEmitter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^struct RawValueEmitter;$/;"	s
RawValueStrEmitter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W: io::Write, F: Formatter> ser::Serializer for RawValueStrEmitter<'a, W, F> {$/;"	c
RawValueStrEmitter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^struct RawValueStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
Rc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> Value for Rc<T>$/;"	c
RcWeak	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for RcWeak<T>$/;"	c
RcWeak	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for RcWeak<T>$/;"	c
Read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^pub trait Read<'de>: private::Sealed {$/;"	i
ReadData	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^struct ReadData {$/;"	s
ReadDirectoryChangesServer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^impl ReadDirectoryChangesServer {$/;"	c
ReadDirectoryChangesServer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^struct ReadDirectoryChangesServer {$/;"	s
ReadDirectoryChangesWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^impl Drop for ReadDirectoryChangesWatcher {$/;"	c
ReadDirectoryChangesWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^impl ReadDirectoryChangesWatcher {$/;"	c
ReadDirectoryChangesWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^impl Watcher for ReadDirectoryChangesWatcher {$/;"	c
ReadDirectoryChangesWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^pub struct ReadDirectoryChangesWatcher {$/;"	s
ReadDirectoryChangesWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^unsafe impl Send for ReadDirectoryChangesWatcher {}$/;"	c
ReadDirectoryChangesWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^unsafe impl Sync for ReadDirectoryChangesWatcher {}$/;"	c
ReadDirectoryRequest	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^struct ReadDirectoryRequest {$/;"	s
ReadError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    ReadError(io::Error),$/;"	e	enum:CopyUntilResult
ReadSeek	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait ReadSeek: Seek + Read {}$/;"	i
ReaderEmpty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    ReaderEmpty,$/;"	e	enum:CopyUntilResult
Reading	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    Reading(HttpReader<BufReader<Box<NetworkStream + Send>>>),$/;"	e	enum:Stream
Readonly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    Readonly,$/;"	e	enum:Scope
RecommendedWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type RecommendedWatcher = FsEventWatcher;$/;"	t
RecommendedWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type RecommendedWatcher = INotifyWatcher;$/;"	t
RecommendedWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type RecommendedWatcher = PollWatcher;$/;"	t
RecommendedWatcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type RecommendedWatcher = ReadDirectoryChangesWatcher;$/;"	t
Record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a> Record<'a> {$/;"	c
Record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct Record<'a> {$/;"	s
Record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    Record(AsyncRecord),$/;"	e	enum:AsyncMsg
RecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub trait RecordDecorator: io::Write {$/;"	i
RecordLocation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct RecordLocation {$/;"	s
RecordStatic	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct RecordStatic<'a> {$/;"	s
RecursionLimitExceeded	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    RecursionLimitExceeded,$/;"	e	enum:ErrorCode
Recursive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Recursive,$/;"	e	enum:RecursiveMode
RecursiveMode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^impl RecursiveMode {$/;"	c
RecursiveMode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub enum RecursiveMode {$/;"	g
RedirectPolicy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl Clone for RedirectPolicy {$/;"	c
RedirectPolicy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl Default for RedirectPolicy {$/;"	c
RedirectPolicy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl fmt::Debug for RedirectPolicy {$/;"	c
RedirectPolicy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub enum RedirectPolicy {$/;"	g
Redirection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Redirection,$/;"	e	enum:StatusClass
RefCell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for RefCell<T>$/;"	c
Reference	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'b, 'c, T> Deref for Reference<'b, 'c, T>$/;"	c
Reference	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^pub enum Reference<'b, 'c, T>$/;"	g
ReferenceFromString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> DeserializeSeed<'de> for ReferenceFromString {$/;"	c
ReferenceFromString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^impl<'de> Visitor<'de> for ReferenceFromString {$/;"	c
ReferenceFromString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^pub struct ReferenceFromString;$/;"	s
ReferenceVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^        impl<'de> Visitor<'de> for ReferenceVisitor {$/;"	c	method:RawValue::deserialize
ReferenceVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^        struct ReferenceVisitor;$/;"	s	method:RawValue::deserialize
ReferrerPolicy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^impl Header for ReferrerPolicy {$/;"	c
ReferrerPolicy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^impl HeaderFormat for ReferrerPolicy {$/;"	c
ReferrerPolicy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^impl fmt::Display for ReferrerPolicy {$/;"	c
ReferrerPolicy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^pub enum ReferrerPolicy {$/;"	g
RefreshError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    RefreshError(String, Option<String>),$/;"	e	enum:RefreshResult
RefreshFlow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^impl<C> RefreshFlow<C>$/;"	c
RefreshFlow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^pub struct RefreshFlow<C> {$/;"	s
RefreshResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^pub enum RefreshResult {$/;"	g
Reject	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^        impl Handler for Reject {$/;"	c	function:tests::test_check_continue_reject
Reject	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^        struct Reject;$/;"	s	function:tests::test_check_continue_reject
Related	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Related,$/;"	e	enum:RelationType
RelationType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl FromStr for RelationType {$/;"	c
RelationType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl fmt::Display for RelationType {$/;"	c
RelationType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^pub enum RelationType {$/;"	g
RelationTypeSelf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    RelationTypeSelf,$/;"	e	enum:RelationType
Remove	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Remove(PathBuf),$/;"	e	enum:DebouncedEvent
RemoveWatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    RemoveWatch(PathBuf, Sender<Result<()>>),$/;"	e	enum:EventLoopMsg
Rename	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Rename(PathBuf, PathBuf),$/;"	e	enum:DebouncedEvent
RenameTimeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    RenameTimeout(u32),$/;"	e	enum:EventLoopMsg
Replies	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Replies,$/;"	e	enum:RelationType
Reply	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl RequestValue for Reply {}$/;"	c
Reply	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for Reply {}$/;"	c
Reply	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct Reply {$/;"	s
ReplyCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ReplyCreateCall<'a, C, A> {}$/;"	c
ReplyCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ReplyCreateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
ReplyCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ReplyCreateCall<'a, C, A>$/;"	s
ReplyDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ReplyDeleteCall<'a, C, A> {}$/;"	c
ReplyDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ReplyDeleteCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
ReplyDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ReplyDeleteCall<'a, C, A>$/;"	s
ReplyGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ReplyGetCall<'a, C, A> {}$/;"	c
ReplyGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ReplyGetCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
ReplyGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ReplyGetCall<'a, C, A>$/;"	s
ReplyList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for ReplyList {}$/;"	c
ReplyList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ReplyList {$/;"	s
ReplyListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ReplyListCall<'a, C, A> {}$/;"	c
ReplyListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ReplyListCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken {$/;"	c
ReplyListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ReplyListCall<'a, C, A>$/;"	s
ReplyMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for ReplyMethods<'a, C, A> {}$/;"	c
ReplyMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ReplyMethods<'a, C, A> {$/;"	c
ReplyMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ReplyMethods<'a, C, A>$/;"	s
ReplyUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for ReplyUpdateCall<'a, C, A> {}$/;"	c
ReplyUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> ReplyUpdateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
ReplyUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct ReplyUpdateCall<'a, C, A>$/;"	s
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^impl Request<Fresh> {$/;"	c
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^impl Request<Streaming> {$/;"	c
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^impl Write for Request<Streaming> {$/;"	c
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^impl<W> Request<W> {$/;"	c
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^pub struct Request<W> {$/;"	s
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<'a> TryParse for httparse::Request<'a, 'a> {$/;"	c
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^impl<'a, 'b: 'a> Request<'a, 'b> {$/;"	c
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^impl<'a, 'b> Read for Request<'a, 'b> {$/;"	c
Request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^pub struct Request<'a, 'b: 'a> {$/;"	s
RequestBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a> RequestBuilder<'a> {$/;"	c
RequestBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub struct RequestBuilder<'a> {$/;"	s
RequestError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl From<JsonError> for RequestError {$/;"	c
RequestError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl fmt::Display for RequestError {$/;"	c
RequestError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub enum RequestError {$/;"	g
RequestHead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^pub struct RequestHead {$/;"	s
RequestHeaderFieldsTooLarge	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    RequestHeaderFieldsTooLarge,$/;"	e	enum:StatusCode
RequestTimeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    RequestTimeout,$/;"	e	enum:StatusCode
RequestUri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^impl Display for RequestUri {$/;"	c
RequestUri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^impl FromStr for RequestUri {$/;"	c
RequestUri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^pub enum RequestUri {$/;"	g
RequestValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait RequestValue {}$/;"	i
RequireDelimiter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    RequireDelimiter,$/;"	e	enum:ArgSettings
RequireEquals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    RequireEquals,$/;"	e	enum:ArgSettings
Required	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    Required,$/;"	e	enum:ArgSettings
RequiredUnlessAll	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    RequiredUnlessAll,$/;"	e	enum:ArgSettings
Rescan	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Rescan,$/;"	e	enum:DebouncedEvent
ResetContent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    ResetContent,$/;"	e	enum:StatusCode
Resource	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait Resource {}$/;"	i
RespondAsync	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    RespondAsync,$/;"	e	enum:Preference
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^impl Drop for Response {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^impl Read for Response {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^impl Response {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^pub struct Response {$/;"	s
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<'a> TryParse for httparse::Response<'a, 'a> {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^impl<'a, T: Any> Drop for Response<'a, T> {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^impl<'a, W: Any> Response<'a, W> {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^impl<'a> Response<'a, Fresh> {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^impl<'a> Response<'a, Streaming> {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^impl<'a> Write for Response<'a, Streaming> {$/;"	c
Response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^pub struct Response<'a, W: Any = Fresh> {$/;"	s
ResponseHead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^pub struct ResponseHead {$/;"	s
ResponseResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait ResponseResult {}$/;"	i
Rest	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    Rest,$/;"	e	enum:State
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^pub type Result<T> = StdResult<T, Error>;$/;"	t
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub type Result<T> = std::result::Result<T, Error>;$/;"	t
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub type Result<T> = StdResult<T, Error>;$/;"	t
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T, E> Deserialize<'de> for Result<T, E>$/;"	c
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T, E> Serialize for Result<T, E>$/;"	c
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	t
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	t
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub type Result<T = ()> = result::Result<T, Error>;$/;"	t
Result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^impl<T> IoResultExt<T> for Result<T, io::Error> {$/;"	c
ResultVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'de, T, E> Visitor<'de> for ResultVisitor<T, E>$/;"	c	function:deserialize
ResultVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s	function:deserialize
ResumableUploadHelper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl<'a, A> ResumableUploadHelper<'a, A>$/;"	c
ResumableUploadHelper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct ResumableUploadHelper<'a, A: 'a> {$/;"	s
Retry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^pub enum Retry {$/;"	g
ReturnMinimal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    ReturnMinimal,$/;"	e	enum:Preference
ReturnRepresentation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    ReturnRepresentation,$/;"	e	enum:Preference
Reverse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for Reverse<T>$/;"	c
ReverseSolidus	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    ReverseSolidus,$/;"	e	enum:CharEscape
Revision	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl RequestValue for Revision {}$/;"	c
Revision	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Resource for Revision {}$/;"	c
Revision	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for Revision {}$/;"	c
Revision	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct Revision {$/;"	s
RevisionDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for RevisionDeleteCall<'a, C, A> {}$/;"	c
RevisionDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> RevisionDeleteCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetTok/;"	c
RevisionDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct RevisionDeleteCall<'a, C, A>$/;"	s
RevisionGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for RevisionGetCall<'a, C, A> {}$/;"	c
RevisionGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> RevisionGetCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken /;"	c
RevisionGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct RevisionGetCall<'a, C, A>$/;"	s
RevisionList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for RevisionList {}$/;"	c
RevisionList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct RevisionList {$/;"	s
RevisionListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for RevisionListCall<'a, C, A> {}$/;"	c
RevisionListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> RevisionListCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken/;"	c
RevisionListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct RevisionListCall<'a, C, A>$/;"	s
RevisionMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for RevisionMethods<'a, C, A> {}$/;"	c
RevisionMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> RevisionMethods<'a, C, A> {$/;"	c
RevisionMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct RevisionMethods<'a, C, A>$/;"	s
RevisionUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for RevisionUpdateCall<'a, C, A> {}$/;"	c
RevisionUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> RevisionUpdateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetTok/;"	c
RevisionUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct RevisionUpdateCall<'a, C, A>$/;"	s
RwLock	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for RwLock<T>$/;"	c
SMaxAge	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    SMaxAge(u32),$/;"	e	enum:CacheDirective
STATIC_TERMINATOR_UNIT	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub static STATIC_TERMINATOR_UNIT: () = ();$/;"	v
SameOrigin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    SameOrigin,$/;"	e	enum:ReferrerPolicy
ScheduleWorker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^impl ScheduleWorker {$/;"	c
ScheduleWorker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^struct ScheduleWorker {$/;"	s
ScheduledEvent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^struct ScheduledEvent {$/;"	s
Scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    impl AsRef<str> for Scheme {$/;"	c	module:scheme
Scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    impl<'a> From<&'a str> for Scheme {$/;"	c	module:scheme
Scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub enum Scheme {$/;"	g	module:scheme
Scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^pub trait Scheme: FromStr + fmt::Debug + Clone + Send + Sync {$/;"	i
Scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl FromStr for Scheme {$/;"	c
Scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl hyper::header::Scheme for Scheme {$/;"	c
Scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub struct Scheme {$/;"	s
Scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl AsRef<str> for Scope {$/;"	c
Scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Default for Scope {$/;"	c
Scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub enum Scope {$/;"	g
Screen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Screen,$/;"	e	enum:MediaDesc
Script	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    Script,$/;"	e	enum:Scope
Sealed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub trait Sealed {$/;"	i	module:sealed
Sealed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    pub trait Sealed {}$/;"	i	module:private
Sealed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    pub trait Sealed {}$/;"	i	module:private
Second	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        type Second = B;$/;"	t	implementation:private::B
Second	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        type Second;$/;"	t	interface:private::Pair
Second	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	t	module:private
Secs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Secs,$/;"	e	enum:Duration::deserialize::Field
Secs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Secs,$/;"	e	enum:SystemTime::deserialize::Field
Section	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Section,$/;"	e	enum:RelationType
SeeOther	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    SeeOther,$/;"	e	enum:StatusCode
SeedStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedStructVariant<V>$/;"	c	module:private
SeedStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s	module:private
SeedTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedTupleVariant<V>$/;"	c	module:private
SeedTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s	module:private
Send	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^impl NetworkStream + Send {$/;"	c
SendRefUnwindSafeDrain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendRefUnwindSafeDrain: Drain + Send + RefUnwindSafe {}$/;"	i
SendRefUnwindSafeDrain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendRefUnwindSafeDrain: Drain + Send {}$/;"	i
SendSyncRefUnwindSafeDrain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendSyncRefUnwindSafeDrain: Drain + Send + Sync + RefUnwindSafe {}$/;"	i
SendSyncRefUnwindSafeDrain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendSyncRefUnwindSafeDrain: Drain + Send + Sync {}$/;"	i
SendSyncRefUnwindSafeKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendSyncRefUnwindSafeKV: KV + Send + Sync + RefUnwindSafe {}$/;"	i
SendSyncRefUnwindSafeKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendSyncRefUnwindSafeKV: KV + Send + Sync {}$/;"	i
SendSyncRefUnwindSafeKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendSyncRefUnwindSafeKV: KV {}$/;"	i
SendSyncUnwindSafe	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendSyncUnwindSafe: Send + Sync + UnwindSafe {}$/;"	i
SendSyncUnwindSafeDrain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendSyncUnwindSafeDrain: Drain + Send + Sync + UnwindSafe {}$/;"	i
SendSyncUnwindSafeDrain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SendSyncUnwindSafeDrain: Drain + Send + Sync {}$/;"	i
Sentinel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^impl<T: Send + 'static> Drop for Sentinel<T> {$/;"	c
Sentinel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^impl<T: Send + 'static> Sentinel<T> {$/;"	c
Sentinel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^struct Sentinel<T: Send + 'static> {$/;"	s
Seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Seq,$/;"	e	enum:Unexpected
Seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Seq(Vec<Content<'de>>),$/;"	e	enum:content::Content
Seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Seq(Vec<Content>),$/;"	e	enum:content::Content
SeqAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	i
SeqAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'a, R: 'a> SeqAccess<'a, R> {$/;"	c
SeqAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::SeqAccess<'de> for SeqAccess<'a, R> {$/;"	c
SeqAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^struct SeqAccess<'a, R: 'a> {$/;"	s
SeqAccessDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for SeqAccessDeserializer<A>$/;"	c
SeqAccessDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<A> SeqAccessDeserializer<A> {$/;"	c
SeqAccessDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, I, T, E> de::Deserializer<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, I, T, E> de::SeqAccess<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<I, E> SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> de::SeqAccess<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s	module:content
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl SeqDeserializer {$/;"	c
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> SeqAccess<'de> for SeqDeserializer {$/;"	c
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for SeqDeserializer {$/;"	c
SeqDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct SeqDeserializer {$/;"	s
SeqRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'a, 'de, E> SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a, E> de::SeqAccess<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
SeqRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> SeqAccess<'de> for SeqRefDeserializer<'de> {$/;"	c
SeqRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> SeqRefDeserializer<'de> {$/;"	c
SeqRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for SeqRefDeserializer<'de> {$/;"	c
SeqRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct SeqRefDeserializer<'de> {$/;"	s
Sequence	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Sequence,$/;"	e	enum:Unsupported
SerdeValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait SerdeValue: erased_serde::Serialize + Value {$/;"	i
Serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for ! {$/;"	c
Serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for () {$/;"	c
Serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait Serialize {$/;"	i
Serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub type Serialize = Value;$/;"	t
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	t	module:content
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> ser::SerializeMap for SerializeMap<E>$/;"	c	module:content
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s	module:content
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	t
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	t
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type SerializeMap = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	i
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeMap = Compound<'a, W, F>;$/;"	t
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	t
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeMap = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeMap = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeMap = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeMap = SerializeMap;$/;"	t	implementation:Serializer
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::SerializeMap for SerializeMap {$/;"	c
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::SerializeStruct for SerializeMap {$/;"	c
SerializeMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^pub enum SerializeMap {$/;"	g
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	t	module:content
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> ser::SerializeSeq for SerializeSeq<E>$/;"	c	module:content
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s	module:content
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	t
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type SerializeSeq = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	i
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeSeq = Compound<'a, W, F>;$/;"	t
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	t
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeSeq = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeSeq = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeSeq = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeSeq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeSeq = SerializeVec;$/;"	t	implementation:Serializer
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	t	module:content
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> ser::SerializeStruct for SerializeStruct<E>$/;"	c	module:content
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s	module:content
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	t
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	t
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type SerializeStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	i
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeStruct = Compound<'a, W, F>;$/;"	t
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	t
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeStruct = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeStruct = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeStruct = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeStruct = SerializeMap;$/;"	t	implementation:Serializer
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	t	module:content
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> ser::SerializeStructVariant for SerializeStructVariant<E>$/;"	c	module:content
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s	module:content
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	t
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type SerializeStructVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	i
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeStructVariant = Compound<'a, W, F>;$/;"	t
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	t
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeStructVariant = SerializeStructVariant;$/;"	t	implementation:Serializer
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::SerializeStructVariant for SerializeStructVariant {$/;"	c
SerializeStructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^pub struct SerializeStructVariant {$/;"	s
SerializeStructVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<M> SerializeStructVariantAsMapValue<M> {$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<M> ser::SerializeStructVariant for SerializeStructVariantAsMapValue<M>$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s	module:content
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	t	module:content
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> ser::SerializeTuple for SerializeTuple<E>$/;"	c	module:content
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s	module:content
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type SerializeTuple = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	i
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTuple = Compound<'a, W, F>;$/;"	t
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	t
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTuple = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTuple = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTuple = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeTuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTuple = SerializeVec;$/;"	t	implementation:Serializer
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	t	module:content
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> ser::SerializeTupleStruct for SerializeTupleStruct<E>$/;"	c	module:content
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s	module:content
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type SerializeTupleStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	i
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTupleStruct = Compound<'a, W, F>;$/;"	t
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	t
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeTupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTupleStruct = SerializeVec;$/;"	t	implementation:Serializer
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	t	module:content
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<E> ser::SerializeTupleVariant for SerializeTupleVariant<E>$/;"	c	module:content
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s	module:content
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    type SerializeTupleVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	i
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTupleVariant = Compound<'a, W, F>;$/;"	t
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	t
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariant;$/;"	t	implementation:Serializer
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::SerializeTupleVariant for SerializeTupleVariant {$/;"	c
SerializeTupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^pub struct SerializeTupleVariant {$/;"	s
SerializeTupleVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<M> SerializeTupleVariantAsMapValue<M> {$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    impl<M> ser::SerializeTupleVariant for SerializeTupleVariantAsMapValue<M>$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s	module:content
SerializeVec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::SerializeSeq for SerializeVec {$/;"	c
SerializeVec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::SerializeTuple for SerializeVec {$/;"	c
SerializeVec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::ser::SerializeTupleStruct for SerializeVec {$/;"	c
SerializeVec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^pub struct SerializeVec {$/;"	s
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	i
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W, F> ser::Serializer for &'a mut Serializer<W, F>$/;"	c
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<'a, W> Serializer<W, PrettyFormatter<'a>>$/;"	c
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<W, F> Serializer<W, F>$/;"	c
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^impl<W> Serializer<W>$/;"	c
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub struct Serializer<W, F = CompactFormatter> {$/;"	s
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl serde::Serializer for Serializer {$/;"	c
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^pub struct Serializer;$/;"	s
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait Serializer {$/;"	i
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> Drop for Serializer<'a> {$/;"	c
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> Serializer<'a> {$/;"	c
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> slog::ser::Serializer for Serializer<'a> {$/;"	c
Serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct Serializer<'a> {$/;"	s
SerializerForward	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a, T: Serializer + 'a + ?Sized> Serializer for SerializerForward<'a, T> {$/;"	c
SerializerForward	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^struct SerializerForward<'a, T: 'a + ?Sized>(&'a mut T);$/;"	s
Server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl Server<HttpListener> {$/;"	c
Server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl<L: NetworkListener + Send + 'static> Server<L> {$/;"	c
Server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl<L: NetworkListener> Server<L> {$/;"	c
Server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl<S: SslServer + Clone + Send> Server<HttpsListener<S>> {$/;"	c
Server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^pub struct Server<L = HttpListener> {$/;"	s
ServerError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct ServerError {$/;"	s
ServerError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    ServerError,$/;"	e	enum:StatusClass
ServerMessage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct ServerMessage {$/;"	s
Service	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Service,$/;"	e	enum:RelationType
ServiceAccountAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^impl<'a, C> ServiceAccountAccess<C>$/;"	c
ServiceAccountAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^impl<C: BorrowMut<hyper::Client>> GetToken for ServiceAccountAccess<C> {$/;"	c
ServiceAccountAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^pub struct ServiceAccountAccess<C> {$/;"	s
ServiceAccountKey	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^pub struct ServiceAccountKey {$/;"	s
ServiceUnavailable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    ServiceUnavailable,$/;"	e	enum:StatusCode
SetCookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/set_cookie.rs	/^impl Header for SetCookie {$/;"	c
SetCookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/set_cookie.rs	/^impl HeaderFormat for SetCookie {$/;"	c
SetCookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/set_cookie.rs	/^pub struct SetCookie(pub Vec<String>);$/;"	s
Shell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^impl FromStr for Shell {$/;"	c
Shell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^impl Shell {$/;"	c
Shell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^impl fmt::Display for Shell {$/;"	c
Shell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^pub enum Shell {$/;"	g
Shift_Jis	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Shift_Jis,$/;"	e	enum:Charset
Short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    Short,$/;"	e	enum:UsageToken
Shutdown	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    Shutdown,$/;"	e	enum:EventLoopMsg
Signed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Signed(i64),$/;"	e	enum:Unexpected
SingleKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<V: Value> From<(&'static str, V)> for SingleKV<V> {$/;"	c
SingleKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<V: Value> From<(String, V)> for SingleKV<V> {$/;"	c
SingleKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<V> KV for SingleKV<V>$/;"	c
SingleKV	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub struct SingleKV<V>(pub Key, pub V)$/;"	s
SingleWatchComplete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    SingleWatchComplete,$/;"	e	enum:MetaEvent
Sink	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^pub trait Sink {$/;"	i
SinkTestHelper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    pub trait SinkTestHelper {$/;"	i	module:tests
Sized	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    Sized(u64),$/;"	e	enum:Body
SizedBody	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    SizedBody(&'a mut (Read + 'a), u64),$/;"	e	enum:Body
SizedReader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    SizedReader(R, u64),$/;"	e	enum:HttpReader
SizedWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    SizedWriter(W, u64),$/;"	e	enum:HttpWriter
Skip	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    Skip,$/;"	e	enum:Retry
SliceRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a> Fused for SliceRead<'a> {}$/;"	c
SliceRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a> Read<'a> for SliceRead<'a> {$/;"	c
SliceRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a> SliceRead<'a> {$/;"	c
SliceRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a> private::Sealed for SliceRead<'a> {}$/;"	c
SliceRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^pub struct SliceRead<'a> {$/;"	s
SlowRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    impl Read for SlowRead {$/;"	c	module:tests
SlowRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    struct SlowRead(u8);$/;"	s	module:tests
SocketAddr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::SocketAddr {$/;"	c
SocketAddr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for net::SocketAddr {$/;"	c
SocketAddr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl Value for std::net::SocketAddr {$/;"	c
SocketAddrV4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV4 {$/;"	c
SocketAddrV6	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV6 {$/;"	c
SocketAddrVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            impl<'de> Visitor<'de> for SocketAddrVisitor {$/;"	c	method:SocketAddr::deserialize
SocketAddrVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            struct SocketAddrVisitor;$/;"	s	method:SocketAddr::deserialize
Solidus	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    Solidus,$/;"	e	enum:CharEscape
Some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Some(Box<Content<'de>>),$/;"	e	enum:content::Content
Some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Some(Box<Content>),$/;"	e	enum:content::Content
SplitAsciiUnquoted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl<'a> Iterator for SplitAsciiUnquoted<'a> {$/;"	c
SplitAsciiUnquoted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^impl<'a> SplitAsciiUnquoted<'a> {$/;"	c
SplitAsciiUnquoted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^struct SplitAsciiUnquoted<'a> {$/;"	s
SpooledInner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^enum SpooledInner {$/;"	g
SpooledTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^impl Read for SpooledTempFile {$/;"	c
SpooledTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^impl Seek for SpooledTempFile {$/;"	c
SpooledTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^impl SpooledTempFile {$/;"	c
SpooledTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^impl Write for SpooledTempFile {$/;"	c
SpooledTempFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^pub struct SpooledTempFile {$/;"	s
Ssl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    Ssl(Box<StdError + Send + Sync>),$/;"	e	enum:Error
SslClient	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub trait SslClient<T: NetworkStream + Send + Clone = HttpStream> {$/;"	i
SslServer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub trait SslServer<T: NetworkStream + Send + Clone = HttpStream> {$/;"	i
Stale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    impl Stale {$/;"	c	module:stale
Stale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub struct Stale(bool);$/;"	s	module:stale
StaleCallback	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^type StaleCallback<S> = Box<Fn(StaleCheck<S>) -> Stale + Send + Sync + 'static>;$/;"	t
StaleCheck	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    impl<'a, S: 'a> StaleCheck<'a, S> {$/;"	c	module:stale
StaleCheck	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub struct StaleCheck<'a, S: 'a> {$/;"	s	module:stale
Standard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    Standard,$/;"	e	enum:CharacterSet
Star	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    Star,$/;"	e	enum:RequestUri
Start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Start,$/;"	e	enum:RelationType
Start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        Start,$/;"	e	enum:range::Field
StartPageToken	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for StartPageToken {}$/;"	c
StartPageToken	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct StartPageToken {$/;"	s
State	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub enum State {$/;"	g
Status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    Status,$/;"	e	enum:Error
StatusClass	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl StatusClass {$/;"	c
StatusClass	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^pub enum StatusClass {$/;"	g
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl Clone for StatusCode {$/;"	c
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl Copy for StatusCode {}$/;"	c
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl Eq for StatusCode {}$/;"	c
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl Ord for StatusCode {$/;"	c
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl PartialEq for StatusCode {$/;"	c
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl PartialOrd for StatusCode {$/;"	c
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl StatusCode {$/;"	c
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^impl fmt::Display for StatusCode {$/;"	c
StatusCode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^pub enum StatusCode {$/;"	g
Stderr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    Stderr {$/;"	e	enum:AnyTerminal
Stdout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    Stdout {$/;"	e	enum:AnyTerminal
Stop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    Stop,$/;"	e	enum:Action
Str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Str(&'a str),$/;"	e	enum:Unexpected
Str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Str(&'de str),$/;"	e	enum:content::Content
StrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'de, 'a, E> Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a> Fused for StrRead<'a> {}$/;"	c
StrRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a> Read<'a> for StrRead<'a> {$/;"	c
StrRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a> StrRead<'a> {$/;"	c
StrRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^impl<'a> private::Sealed for StrRead<'a> {}$/;"	c
StrRead	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^pub struct StrRead<'a> {$/;"	s
StrVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'a> Visitor<'a> for StrVisitor {$/;"	c
StrVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct StrVisitor;$/;"	s
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    type Stream = PooledStream<S>;$/;"	t	implementation:Pool
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        type Stream = Void;$/;"	t	implementation:no_ssl::Plaintext
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    type Stream = Proxied<C::Stream, S::Stream>;$/;"	t
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    type Stream = Box<NetworkStream + Send>;$/;"	t	implementation:ConnAdapter
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    type Stream = Box<NetworkStream + Send>;$/;"	t	implementation:Connector
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^enum Stream {$/;"	g
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl Stream {$/;"	c
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    type Stream = MockStream;$/;"	t	implementation:MockConnector
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    type Stream = T;$/;"	t	implementation:MockSsl
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream = HttpStream;$/;"	t
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream = HttpStream;$/;"	t	implementation:HttpConnector
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream = HttpStream;$/;"	t	implementation:HttpListener
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream = HttpsStream<S::Stream>;$/;"	t	implementation:HttpsConnector
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream = S::Stream;$/;"	t	implementation:HttpsListener
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream: Into<Box<NetworkStream + Send>>;$/;"	t	interface:NetworkConnector
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream: NetworkStream + Send + Clone;$/;"	t	interface:NetworkListener
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream: NetworkStream + Send + Clone;$/;"	t	interface:SslClient
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    type Stream: NetworkStream + Send + Clone;$/;"	t	interface:SslServer
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  type Stream = WrappedStream;$/;"	t	implementation:TlsClient
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  type Stream = WrappedStream;$/;"	t	implementation:TlsServer
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^        type Stream = MockStream;$/;"	t	implementation:tests::MockGoogleAuth
Stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^        type Stream = MockStream;$/;"	t	implementation:tests::MockGoogleRefresh
StreamContextInfo	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^struct StreamContextInfo {$/;"	s
StreamDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, R, T> FusedIterator for StreamDeserializer<'de, R, T>$/;"	c
StreamDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, R, T> Iterator for StreamDeserializer<'de, R, T>$/;"	c
StreamDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, R, T> StreamDeserializer<'de, R, T>$/;"	c
StreamDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^pub struct StreamDeserializer<'de, R, T> {$/;"	s
Streaming	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^pub enum Streaming {}$/;"	g
StrictOrigin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    StrictOrigin,$/;"	e	enum:ReferrerPolicy
StrictOriginWhenCrossOrigin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    StrictOriginWhenCrossOrigin,$/;"	e	enum:ReferrerPolicy
StrictTransportSecurity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^impl FromStr for StrictTransportSecurity {$/;"	c
StrictTransportSecurity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^impl Header for StrictTransportSecurity {$/;"	c
StrictTransportSecurity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^impl HeaderFormat for StrictTransportSecurity {$/;"	c
StrictTransportSecurity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^impl StrictTransportSecurity {$/;"	c
StrictTransportSecurity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^impl fmt::Display for StrictTransportSecurity {$/;"	c
StrictTransportSecurity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^pub struct StrictTransportSecurity {$/;"	s
StrictUtf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    StrictUtf8,$/;"	e	enum:AppSettings
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a> Into<Body<'a>> for &'a String {$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a> IntoUrl for &'a String {$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^impl Scheme for String {$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for String {$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for String$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    String,$/;"	e	enum:Unsupported
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for String {$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    String(String),$/;"	e	enum:ParserNumber
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    impl Sealed for super::String {}$/;"	c	module:private
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^impl Index for String {$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    String(String),$/;"	e	enum:Value
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^impl PartialEq<Value> for String {$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^impl From<Key> for String {$/;"	c
String	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl Value for String {$/;"	c
StringDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<E> Clone for StringDeserializer<E> {$/;"	c
StringDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl Error for StringError {$/;"	c
StringError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl From<String> for StringError {$/;"	c
StringError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl StringError {$/;"	c
StringError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl fmt::Display for StringError {$/;"	c
StringError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl<'a> From<&'a Error> for StringError {$/;"	c
StringError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub struct StringError {$/;"	s
StringInPlaceVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'a, 'de> Visitor<'de> for StringInPlaceVisitor<'a> {$/;"	c
StringInPlaceVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringSink	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^impl<'a> Sink for StringSink<'a> {$/;"	c
StringSink	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^impl<'a> StringSink<'a> {$/;"	c
StringSink	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^pub(crate) struct StringSink<'a> {$/;"	s
StringSinkTestHelper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    impl SinkTestHelper for StringSinkTestHelper {$/;"	c	module:tests
StringSinkTestHelper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    struct StringSinkTestHelper;$/;"	s	module:tests
StringVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Visitor<'de> for StringVisitor {$/;"	c
StringVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct StringVisitor;$/;"	s
Struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Struct(&'static str, Vec<(&'static str, Content)>),$/;"	e	enum:content::Content
StructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    StructVariant,$/;"	e	enum:Unexpected
StructVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        StructVariant($/;"	e	enum:content::Content
Stylesheet	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Stylesheet,$/;"	e	enum:RelationType
SubCommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/subcommand.rs	/^impl<'a> SubCommand<'a> {$/;"	c
SubCommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/subcommand.rs	/^pub struct SubCommand<'a> {$/;"	s
SubcommandRequired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    SubcommandRequired,$/;"	e	enum:AppSettings
SubcommandRequiredElseHelp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    SubcommandRequiredElseHelp,$/;"	e	enum:AppSettings
SubcommandsNegateReqs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    SubcommandsNegateReqs,$/;"	e	enum:AppSettings
Subject	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    type Subject = (Method, RequestUri);$/;"	t	implementation:Request
Subject	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    type Subject = RawStatus;$/;"	t	implementation:Response
Subject	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    type Subject;$/;"	t	interface:TryParse
Subsection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Subsection,$/;"	e	enum:RelationType
Success	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Success,$/;"	e	enum:StatusClass
Success	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    Success(Token),$/;"	e	enum:DeviceFlowState
Success	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    Success(Token),$/;"	e	enum:RefreshResult
SuccessorVersion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    SuccessorVersion,$/;"	e	enum:RelationType
Switched	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^impl<'e> Clone for Switched<'e> {$/;"	c
Switched	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^impl<'e> Default for Switched<'e> {$/;"	c
Switched	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^impl<'n, 'e, 'z> From<&'z Arg<'n, 'e>> for Switched<'e> {$/;"	c
Switched	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^pub struct Switched<'b> {$/;"	s
SwitchingProtocols	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    SwitchingProtocols,$/;"	e	enum:StatusCode
Sync	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl HeaderFormat + Send + Sync {$/;"	c
Sync	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a> fmt::Display for &'a (HeaderFormat + Send + Sync) {$/;"	c
Syntax	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    Syntax,$/;"	e	enum:Category
SystemTime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for SystemTime {$/;"	c
SystemTime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for SystemTime {$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^impl<'b, 'c, T> ArgWithDisplay<'b, 'c> for T where T: AnyArg<'b, 'c> + Display {}$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^impl<'b, 'c, T> ArgWithOrder<'b, 'c> for T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^impl<'n, 'e, 'z, T: ?Sized> AnyArg<'n, 'e> for &'z T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl<T: Seek + Read> ReadSeek for T {}$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    impl<T: HeaderFormat + Clone> Sealed for T {$/;"	c	module:sealed
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<T: Sealed> HeaderClone for T {}$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for [T; 0] {$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl<'de, T> Expected for T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl<T> DeserializeOwned for T where T: for<'de> Deserialize<'de> {}$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for [T; 0] {$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for [T]$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    impl<'a, T> Sealed for &'a T where T: ?Sized + Sealed {}$/;"	c	module:private
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^impl<'a, T> Index for &'a T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a, T> KV for &'a T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T, EI, EO> MapErrFn<EI, EO> for T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> FilterFn for T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> SendRefUnwindSafeDrain for T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> SendSyncRefUnwindSafeDrain for T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> SendSyncRefUnwindSafeKV for T where T: KV + ?Sized {}$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> SendSyncRefUnwindSafeKV for T where T: KV + Send + Sync + ?Sized {}$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> SendSyncRefUnwindSafeKV for T where T: KV + Send + Sync + RefUnwindSafe + ?Sized {}$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> SendSyncUnwindSafe for T$/;"	c
T	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> SendSyncUnwindSafeDrain for T$/;"	c
Tab	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    Tab,$/;"	e	enum:CharEscape
Tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagContentOtherField
Tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContent
Tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContentField
TagContentOtherField	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g	module:content
TagContentOtherFieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s	module:content
TagOrContent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g	module:content
TagOrContentField	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g	module:content
TagOrContentFieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s	module:content
TagOrContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s	module:content
TaggedContent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s	module:content
TaggedContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, T> DeserializeSeed<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, T> TaggedContentVisitor<'de, T> {$/;"	c	module:content
TaggedContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, T> Visitor<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s	module:content
TaggedSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl<S> Serializer for TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl<S> TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
TakesValue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    TakesValue,$/;"	e	enum:ArgSettings
Target	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    type Target = Mime;$/;"	t	implementation:XUploadContentType
Target	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    type Target = S;$/;"	t	implementation:Authorization
Target	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    type Target = Option<T>;$/;"	t	implementation:OptCell
Target	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    type Target = Cow<'static, str>;$/;"	t	implementation:CowStr
Target	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    type Target = T;$/;"	t
Target	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    type Target = Path;$/;"	t	implementation:TempPath
TeamDrive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl RequestValue for TeamDrive {}$/;"	c
TeamDrive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Resource for TeamDrive {}$/;"	c
TeamDrive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for TeamDrive {}$/;"	c
TeamDrive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamDrive {$/;"	s
TeamDriveBackgroundImageFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for TeamDriveBackgroundImageFile {}$/;"	c
TeamDriveBackgroundImageFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for TeamDriveBackgroundImageFile {}$/;"	c
TeamDriveBackgroundImageFile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamDriveBackgroundImageFile {$/;"	s
TeamDriveCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for TeamDriveCapabilities {}$/;"	c
TeamDriveCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for TeamDriveCapabilities {}$/;"	c
TeamDriveCapabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamDriveCapabilities {$/;"	s
TeamDriveList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl ResponseResult for TeamDriveList {}$/;"	c
TeamDriveList	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamDriveList {$/;"	s
TeamDriveRestrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl NestedType for TeamDriveRestrictions {}$/;"	c
TeamDriveRestrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for TeamDriveRestrictions {}$/;"	c
TeamDriveRestrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamDriveRestrictions {$/;"	s
TeamdriveCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for TeamdriveCreateCall<'a, C, A> {}$/;"	c
TeamdriveCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> TeamdriveCreateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetTo/;"	c
TeamdriveCreateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamdriveCreateCall<'a, C, A>$/;"	s
TeamdriveDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for TeamdriveDeleteCall<'a, C, A> {}$/;"	c
TeamdriveDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> TeamdriveDeleteCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetTo/;"	c
TeamdriveDeleteCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamdriveDeleteCall<'a, C, A>$/;"	s
TeamdriveGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for TeamdriveGetCall<'a, C, A> {}$/;"	c
TeamdriveGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> TeamdriveGetCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToken/;"	c
TeamdriveGetCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamdriveGetCall<'a, C, A>$/;"	s
TeamdriveListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for TeamdriveListCall<'a, C, A> {}$/;"	c
TeamdriveListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> TeamdriveListCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetToke/;"	c
TeamdriveListCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamdriveListCall<'a, C, A>$/;"	s
TeamdriveMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> MethodsBuilder for TeamdriveMethods<'a, C, A> {}$/;"	c
TeamdriveMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> TeamdriveMethods<'a, C, A> {$/;"	c
TeamdriveMethods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamdriveMethods<'a, C, A>$/;"	s
TeamdriveUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> CallBuilder for TeamdriveUpdateCall<'a, C, A> {}$/;"	c
TeamdriveUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl<'a, C, A> TeamdriveUpdateCall<'a, C, A> where C: BorrowMut<hyper::Client>, A: oauth2::GetTo/;"	c
TeamdriveUpdateCall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct TeamdriveUpdateCall<'a, C, A>$/;"	s
TempDir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^impl AsRef<Path> for TempDir {$/;"	c
TempDir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^impl Drop for TempDir {$/;"	c
TempDir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^impl TempDir {$/;"	c
TempDir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^impl fmt::Debug for TempDir {$/;"	c
TempDir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^pub struct TempDir {$/;"	s
TempPath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl AsRef<OsStr> for TempPath {$/;"	c
TempPath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl AsRef<Path> for TempPath {$/;"	c
TempPath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl Deref for TempPath {$/;"	c
TempPath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl Drop for TempPath {$/;"	c
TempPath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl From<PathPersistError> for TempPath {$/;"	c
TempPath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl TempPath {$/;"	c
TempPath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^impl fmt::Debug for TempPath {$/;"	c
TempPath	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^pub struct TempPath {$/;"	s
TemporaryRedirect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    TemporaryRedirect,$/;"	e	enum:StatusCode
TermDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl Decorator for TermDecorator {$/;"	c
TermDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl TermDecorator {$/;"	c
TermDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct TermDecorator {$/;"	s
TermDecoratorBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl TermDecoratorBuilder {$/;"	c
TermDecoratorBuilder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct TermDecoratorBuilder {$/;"	s
TermRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> Drop for TermRecordDecorator<'a> {$/;"	c
TermRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> RecordDecorator for TermRecordDecorator<'a> {$/;"	c
TermRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl<'a> io::Write for TermRecordDecorator<'a> {$/;"	c
TermRecordDecorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct TermRecordDecorator<'a> {$/;"	s
TestFormatterStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^        impl<'a> fmt::Display for TestFormatterStruct<'a> {$/;"	c	function:tests::test_link_fmt_delimited
TestFormatterStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^        struct TestFormatterStruct<'a> { v: Vec<&'a str> };$/;"	s	function:tests::test_link_fmt_delimited
TestStdoutWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^impl io::Write for TestStdoutWriter {$/;"	c
TestStdoutWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub struct TestStdoutWriter;$/;"	s
ThreadSafeTimestampFn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub trait ThreadSafeTimestampFn:$/;"	i
ThroughWriter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    ThroughWriter(W),$/;"	e	enum:HttpWriter
Timeouts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl Default for Timeouts {$/;"	c
Timeouts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^struct Timeouts {$/;"	s
Tls	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    Tls,$/;"	e	enum:ProtocolName
TlsClient	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl SslClient for TlsClient {$/;"	c
TlsClient	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl TlsClient {$/;"	c
TlsClient	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^pub struct TlsClient {$/;"	s
TlsServer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl SslServer for TlsServer {$/;"	c
TlsServer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl TlsServer {$/;"	c
TlsServer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^pub struct TlsServer {$/;"	s
TlsStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl TlsStream {$/;"	c
TlsStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl io::Read for TlsStream {$/;"	c
TlsStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl io::Write for TlsStream {$/;"	c
TlsStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^pub struct TlsStream {$/;"	s
ToParts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait ToParts {$/;"	i
ToSendSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl Serializer for ToSendSerializer {$/;"	c
ToSendSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^impl ToSendSerializer {$/;"	c
ToSendSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^struct ToSendSerializer {$/;"	s
Token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl Token {$/;"	c
Token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub struct Token {$/;"	s
TokenResponse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^impl TokenResponse {$/;"	c
TokenResponse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^struct TokenResponse {$/;"	s
TokenStorage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^pub trait TokenStorage {$/;"	i
TokenType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl AsRef<str> for TokenType {$/;"	c
TokenType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^impl FromStr for TokenType {$/;"	c
TokenType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub enum TokenType {$/;"	g
TooFewValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    TooFewValues,$/;"	e	enum:ErrorKind
TooLarge	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    TooLarge,$/;"	e	enum:Error
TooManyRequests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    TooManyRequests,$/;"	e	enum:StatusCode
TooManyValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    TooManyValues,$/;"	e	enum:ErrorKind
Trace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    Trace,$/;"	e	enum:Method
Trace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Trace,$/;"	e	enum:FilterLevel
Trace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Trace,$/;"	e	enum:Level
TrailingCharacters	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    TrailingCharacters,$/;"	e	enum:ErrorCode
TrailingComma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    TrailingComma,$/;"	e	enum:ErrorCode
TrailingValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    TrailingValues,$/;"	e	enum:AppSettings
TrailingVarArg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    TrailingVarArg,$/;"	e	enum:AppSettings
TryParse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^trait TryParse {$/;"	i
TryParseResult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^type TryParseResult<T> = Result<httparse::Status<(Incoming<T>, usize)>, Error>;$/;"	t
Tty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Tty,$/;"	e	enum:MediaDesc
Tunneled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    Tunneled(T2)$/;"	e	enum:Proxied
Tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Tuple(Vec<Content>),$/;"	e	enum:content::Content
Tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Tuple,$/;"	e	enum:Unsupported
TupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        TupleStruct(&'static str, Vec<Content>),$/;"	e	enum:content::Content
TupleStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    TupleStruct,$/;"	e	enum:Unsupported
TupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    TupleVariant,$/;"	e	enum:Unexpected
TupleVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        TupleVariant(&'static str, u32, &'static str, Vec<Content>),$/;"	e	enum:content::Content
Tv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Tv,$/;"	e	enum:MediaDesc
Type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^impl<'a> fmt::Display for Type<'a> {$/;"	c
Type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^struct Type<'a>(&'a Value);$/;"	s
U16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        U16(u16),$/;"	e	enum:content::Content
U16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        U16(u16),$/;"	e	enum:content::Content
U32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
U64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        U64(u64),$/;"	e	enum:content::Content
U64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        U64(u64),$/;"	e	enum:content::Content
U64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    U64(u64),$/;"	e	enum:ParserNumber
U8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        U8(u8),$/;"	e	enum:content::Content
U8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        U8(u8),$/;"	e	enum:content::Content
Unauthorized	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Unauthorized,$/;"	e	enum:StatusCode
UnavailableForLegalReasons	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    UnavailableForLegalReasons,$/;"	e	enum:StatusCode
Unbounded	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            Unbounded,$/;"	e	enum:deserialize::Field
Unexpected	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl<'a> fmt::Display for Unexpected<'a> {$/;"	c
Unexpected	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
UnexpectedEndOfHexEscape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    UnexpectedEndOfHexEscape,$/;"	e	enum:ErrorCode
UnexpectedMultipleUsage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    UnexpectedMultipleUsage,$/;"	e	enum:ErrorKind
UnifiedHelpMessage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    UnifiedHelpMessage,$/;"	e	enum:AppSettings
Unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Unit,$/;"	e	enum:Unexpected
Unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    Unit,$/;"	e	enum:Unsupported
UnitDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for UnitDeserializer<E>$/;"	c
UnitDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    impl<'de, E> de::VariantAccess<'de> for UnitOnly<E>$/;"	c	module:private
UnitOnly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s	module:private
UnitOnly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> de::VariantAccess<'de> for UnitOnly {$/;"	c
UnitOnly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct UnitOnly;$/;"	s
UnitStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        UnitStruct(&'static str),$/;"	e	enum:content::Content
UnitStruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    UnitStruct,$/;"	e	enum:Unsupported
UnitVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    UnitVariant,$/;"	e	enum:Unexpected
UnitVariant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        UnitVariant(&'static str, u32, &'static str),$/;"	e	enum:content::Content
UnitVariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'a, R: 'a> UnitVariantAccess<'a, R> {$/;"	c
UnitVariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::EnumAccess<'de> for UnitVariantAccess<'a, R> {$/;"	c
UnitVariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::VariantAccess<'de> for UnitVariantAccess<'a, R> {$/;"	c
UnitVariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^struct UnitVariantAccess<'a, R: 'a> {$/;"	s
UnitVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Visitor<'de> for UnitVisitor {$/;"	c
UnitVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
Unknown	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    Unknown,$/;"	e	enum:UsageToken
Unknown	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    Unknown$/;"	e	enum:Directive
UnknownArgument	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    UnknownArgument,$/;"	e	enum:ErrorKind
UnprocessableEntity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    UnprocessableEntity,$/;"	e	enum:StatusCode
UnrecognizedSubcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    UnrecognizedSubcommand,$/;"	e	enum:ErrorKind
Unregistered	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^    Unregistered(String),$/;"	e	enum:RangeUnit
Unregistered	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^    Unregistered {$/;"	e	enum:ContentRangeSpec
Unregistered	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    Unregistered(String, String)$/;"	e	enum:Range
Unregistered	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    Unregistered(String),$/;"	e	enum:ProtocolName
Unregistered	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    Unregistered(u16),$/;"	e	enum:StatusCode
UnsafeUrl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    UnsafeUrl,$/;"	e	enum:ReferrerPolicy
Unsigned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    Unsigned(u64),$/;"	e	enum:Unexpected
Unsigned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    type Unsigned = u32;$/;"	t	implementation:f32
Unsigned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    type Unsigned = u64;$/;"	t	implementation:f64
Unsigned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    type Unsigned: Integer;$/;"	t	interface:Float
Unsupported	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^enum Unsupported {$/;"	g
Unsupported	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^impl Display for Unsupported {$/;"	c
UnsupportedMediaType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    UnsupportedMediaType,$/;"	e	enum:StatusCode
UntaggedUnitVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'a> UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s	module:content
UnusedType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub trait UnusedType {}$/;"	i
Unwatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    Unwatch(PathBuf),$/;"	e	enum:Action
Up	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Up,$/;"	e	enum:RelationType
UpgradeRequired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    UpgradeRequired,$/;"	e	enum:StatusCode
UploadSizeLimitExceeded	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    UploadSizeLimitExceeded(u64, u64),$/;"	e	enum:Error
Uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    Uri(url::ParseError),$/;"	e	enum:Error
UriTooLong	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    UriTooLong,$/;"	e	enum:StatusCode
Url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl IntoUrl for Url {$/;"	c
UrlSafe	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    UrlSafe,$/;"	e	enum:CharacterSet
Us_Ascii	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    Us_Ascii,$/;"	e	enum:Charset
UsageParser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^impl<'a> UsageParser<'a> {$/;"	c
UsageParser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^pub struct UsageParser<'a> {$/;"	s
UsageToken	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^enum UsageToken {$/;"	g
UseProxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    UseProxy,$/;"	e	enum:StatusCode
UseValueDelimiter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    UseValueDelimiter,$/;"	e	enum:ArgSettings
User	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^impl Part for User {}$/;"	c
User	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^pub struct User {$/;"	s
Utf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    Utf8(Utf8Error),$/;"	e	enum:Error
V	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<'a, V> Value for &'a V$/;"	c
Vacant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    Vacant(VacantEntry<'a, K, V>),$/;"	e	enum:Entry
Vacant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    Vacant(VacantEntry<'a>),$/;"	e	enum:Entry
VacantEntry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^impl<'a, K, V> VacantEntry<'a, K, V> {$/;"	c
VacantEntry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^pub struct VacantEntry<'a, K: 'a, V: 'a> {$/;"	s
VacantEntry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^impl<'a> VacantEntry<'a> {$/;"	c
VacantEntry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct VacantEntry<'a> {$/;"	s
VacantEntryImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type VacantEntryImpl<'a> = btree_map::VacantEntry<'a, String, Value>;$/;"	t
VacantEntryImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type VacantEntryImpl<'a> = indexmap::map::VacantEntry<'a, String, Value>;$/;"	t
ValName	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    ValName,$/;"	e	enum:UsageToken
ValidArgFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ValidArgFound,$/;"	e	enum:AppSettings
ValidNegNumFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    ValidNegNumFound,$/;"	e	enum:AppSettings
Validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^impl<'a, 'b, 'z> Validator<'a, 'b, 'z> {$/;"	c
Validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^pub struct Validator<'a, 'b, 'z>(&'z mut Parser<'a, 'b>)$/;"	s
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^    Value(String),$/;"	e	enum:AccessControlAllowOrigin
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	t	implementation:IgnoredAny
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:deserialize::Field::deserialize::FieldVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                type Value = Field;$/;"	t	implementation:range::Field::deserialize::FieldVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                type Value = net::IpAddr;$/;"	t	implementation:IpAddr::deserialize::IpAddrVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                type Value = net::SocketAddr;$/;"	t	implementation:SocketAddr::deserialize::SocketAddrVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            type Value = ();$/;"	t	function:deserialize_in_place
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	t	function:deserialize
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:Duration::deserialize::DurationVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:SystemTime::deserialize::DurationVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	t	function:deserialize
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	t	function:deserialize
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	t	module:range
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = &'a Path;$/;"	t	implementation:PathVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	t	implementation:BytesVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = &'a str;$/;"	t	implementation:StrVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:StringInPlaceVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:UnitVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = CString;$/;"	t	implementation:CStringVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = Option<T>;$/;"	t
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = OsString;$/;"	t	implementation:OsStringVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = PathBuf;$/;"	t	implementation:PathBufVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	t	implementation:PhantomDataVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = String;$/;"	t	implementation:StringVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = [T; 0];$/;"	t	implementation:ArrayVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = bool;$/;"	t	implementation:BoolVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    type Value = char;$/;"	t	implementation:CharVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Value = T;$/;"	t
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Value;$/;"	t	interface:DeserializeSeed
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Value;$/;"	t	interface:Visitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        type Value = V::Value;$/;"	t	module:private
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::InternallyTaggedUnitVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::UntaggedUnitVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = Content<'de>;$/;"	t	implementation:content::ContentVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	t	implementation:borrow_cow_bytes::CowBytesVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	t	implementation:borrow_cow_str::CowStrVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	t	implementation:content::TagContentOtherFieldVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	t	implementation:content::TagOrContentVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	t	implementation:content::TagOrContentFieldVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	t	module:content
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    type Value = ();$/;"	t
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^            type Value = Map<String, Value>;$/;"	t	implementation:Map::deserialize::Visitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            type Value = ();$/;"	t	implementation:NumberKey::deserialize::FieldVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            type Value = Number;$/;"	t	implementation:Number::deserialize::NumberVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            type Value = NumberFromString;$/;"	t	implementation:NumberFromString::deserialize::Visitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            type Value = &'de RawValue;$/;"	t	implementation:RawValue::deserialize::ReferenceVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            type Value = ();$/;"	t	implementation:RawKey::deserialize::FieldVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            type Value = Box<RawValue>;$/;"	t	implementation:Box::deserialize::BoxedVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    type Value = &'de RawValue;$/;"	t	implementation:ReferenceFromString
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    type Value = Box<RawValue>;$/;"	t	implementation:BoxedFromString
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            type Value = Value;$/;"	t	implementation:Value::deserialize::ValueVisitor
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Value = KeyClass;$/;"	t	implementation:KeyClassifier
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl FromStr for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> Deserialize<'de> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> IntoDeserializer<'de, Error> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for &'de Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl From<()> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl From<Map<String, Value>> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl From<String> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl From<bool> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl From<f32> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl From<f64> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl<'a, T: Clone + Into<Value>> From<&'a [T]> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl<'a> From<&'a str> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl<'a> From<Cow<'a, str>> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl<T: Into<Value>> From<Vec<T>> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^impl<T: Into<Value>> FromIterator<T> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^impl<I> ops::Index<I> for Value$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^impl<I> ops::IndexMut<I> for Value$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^impl Debug for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^impl Default for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^impl Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^impl fmt::Display for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^pub enum Value {$/;"	g
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^impl PartialEq<String> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^impl PartialEq<str> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^impl<'a> PartialEq<&'a str> for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^impl Serialize for Value {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl Value for () {$/;"	c
Value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub trait Value {$/;"	i
ValueDelimiterNotSet	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    ValueDelimiterNotSet,$/;"	e	enum:ArgSettings
ValueSerializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub type ValueSerializer<'a> = PushFnValueSerializer<'a>;$/;"	t
ValueString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^impl<'a> fmt::Display for ValueString<'a> {$/;"	c
ValueString	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^struct ValueString<'a>(&'a Item);$/;"	s
ValueValidation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    ValueValidation,$/;"	e	enum:ErrorKind
ValueVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^        impl<'de> Visitor<'de> for ValueVisitor {$/;"	c	method:Value::deserialize
ValueVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^        struct ValueVisitor;$/;"	s	method:Value::deserialize
Valued	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^impl<'n, 'e, 'z> From<&'z Arg<'n, 'e>> for Valued<'n, 'e> {$/;"	c
Valued	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^impl<'n, 'e> Default for Valued<'n, 'e> {$/;"	c
Valued	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^impl<'n, 'e> Valued<'n, 'e> {$/;"	c
Valued	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^pub struct Valued<'a, 'b>$/;"	s
Values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> Default for Values<'a> {$/;"	c
Values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> DoubleEndedIterator for Values<'a> {$/;"	c
Values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> ExactSizeIterator for Values<'a> {}$/;"	c
Values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^impl<'a> Iterator for Values<'a> {$/;"	c
Values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^pub struct Values<'a> {$/;"	s
Values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^    pub type Values<'a, V> = btree_map::Values<'a, usize, V>;$/;"	t	module:vec_map
Values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct Values<'a> {$/;"	s
ValuesDone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    ValuesDone,$/;"	e	enum:ParseResult
ValuesImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type ValuesImpl<'a> = btree_map::Values<'a, String, Value>;$/;"	t
ValuesImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type ValuesImpl<'a> = indexmap::map::Values<'a, String, Value>;$/;"	t
ValuesMut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^pub struct ValuesMut<'a> {$/;"	s
ValuesMutImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type ValuesMutImpl<'a> = btree_map::ValuesMut<'a, String, Value>;$/;"	t
ValuesMutImpl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^type ValuesMutImpl<'a> = indexmap::map::ValuesMut<'a, String, Value>;$/;"	t
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	t	interface:EnumAccess
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	t
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	t
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	t	module:content
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	t	module:content
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Variant = Self;$/;"	t	implementation:UnitVariantAccess
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    type Variant = Self;$/;"	t	implementation:VariantAccess
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Variant = UnitOnly;$/;"	t	implementation:BorrowedCowStrDeserializer
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Variant = VariantDeserializer;$/;"	t	implementation:EnumDeserializer
Variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    type Variant = VariantRefDeserializer<'de>;$/;"	t	implementation:EnumRefDeserializer
VariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	i
VariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'a, R: 'a> VariantAccess<'a, R> {$/;"	c
VariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::EnumAccess<'de> for VariantAccess<'a, R> {$/;"	c
VariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::VariantAccess<'de> for VariantAccess<'a, R> {$/;"	c
VariantAccess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^struct VariantAccess<'a, R: 'a> {$/;"	s
VariantAlsoNegotiates	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    VariantAlsoNegotiates,$/;"	e	enum:StatusCode
VariantDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, E> de::VariantAccess<'de> for VariantDeserializer<'de, E>$/;"	c	module:content
VariantDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s	module:content
VariantDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> VariantAccess<'de> for VariantDeserializer {$/;"	c
VariantDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct VariantDeserializer {$/;"	s
VariantRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    impl<'de, 'a, E> de::VariantAccess<'de> for VariantRefDeserializer<'a, 'de, E>$/;"	c	module:content
VariantRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
VariantRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^impl<'de> VariantAccess<'de> for VariantRefDeserializer<'de> {$/;"	c
VariantRefDeserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^struct VariantRefDeserializer<'de> {$/;"	s
Vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Vec<T>$/;"	c
Vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for Vec<T>$/;"	c
Vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^impl Write for Vec<u8> {$/;"	c
VecInPlaceVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'a, 'de, T> Visitor<'de> for VecInPlaceVisitor<'a, T>$/;"	c	function:deserialize_in_place
VecInPlaceVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s	function:deserialize_in_place
VecMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^    impl<V> VecMap<V> {$/;"	c	module:vec_map
VecMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^    pub struct VecMap<V> {$/;"	s	module:vec_map
VecMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^impl<K: PartialEq, V> VecMap<K, V> {$/;"	c
VecMap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^pub struct VecMap<K, V> {$/;"	s
VecVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for VecVisitor<T>$/;"	c	function:deserialize
VecVisitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s	function:deserialize
Version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    Version,$/;"	e	enum:Error
VersionDisplayed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    VersionDisplayed,$/;"	e	enum:ErrorKind
VersionHistory	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    VersionHistory,$/;"	e	enum:RelationType
VersionlessSubcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    VersionlessSubcommands,$/;"	e	enum:AppSettings
Via	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    Via,$/;"	e	enum:RelationType
Visitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	i
Visitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^        impl<'de> de::Visitor<'de> for Visitor {$/;"	c	method:Map::deserialize
Visitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^        struct Visitor;$/;"	s	method:Map::deserialize
Visitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^        impl<'de> de::Visitor<'de> for Visitor {$/;"	c	method:NumberFromString::deserialize
Visitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^        struct Visitor;$/;"	s	method:NumberFromString::deserialize
Void	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    impl NetworkStream for Void {$/;"	c	module:no_ssl
Void	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    impl io::Read for Void {$/;"	c	module:no_ssl
Void	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    impl io::Write for Void {$/;"	c	module:no_ssl
Void	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    pub enum Void {}$/;"	g	module:no_ssl
Void	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^impl fmt::Debug for Void {$/;"	c
Void	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^pub struct Void(());$/;"	s
Void	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^enum Void {}$/;"	g
W	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^impl<W: Write> Write for &mut W {$/;"	c
Wait	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    Wait(u32),$/;"	e	enum:Preference
WaitOnError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    WaitOnError,$/;"	e	enum:AppSettings
Warning	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    Warning(T),$/;"	e	enum:Format
Warning	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Warning,$/;"	e	enum:FilterLevel
Warning	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    Warning,$/;"	e	enum:Level
Watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    Watch(PathBuf, RecursiveMode),$/;"	e	enum:Action
WatchData	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^struct WatchData {$/;"	s
WatchNotFound	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    WatchNotFound,$/;"	e	enum:Error
WatchState	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^struct WatchState {$/;"	s
WatchTimer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^impl Drop for WatchTimer {$/;"	c
WatchTimer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^impl WatchTimer {$/;"	c
WatchTimer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^pub struct WatchTimer {$/;"	s
Watcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub trait Watcher: Sized {$/;"	i
WatcherAwakened	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    WatcherAwakened,$/;"	e	enum:MetaEvent
WebSocket	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    WebSocket,$/;"	e	enum:ProtocolName
Wide	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^type Wide = u128;$/;"	t
Wide	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^type Wide = u64;$/;"	t
Worker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^impl<H: Handler + 'static> Worker<H> {$/;"	c
Worker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^struct Worker<H: Handler + 'static> {$/;"	s
WorkingCopy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    WorkingCopy,$/;"	e	enum:RelationType
WorkingCopyOf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    WorkingCopyOf,$/;"	e	enum:RelationType
WrappedStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl NetworkStream for WrappedStream {$/;"	c
WrappedStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl WrappedStream {$/;"	c
WrappedStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl io::Read for WrappedStream {$/;"	c
WrappedStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^impl io::Write for WrappedStream {$/;"	c
WrappedStream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^pub struct WrappedStream(Arc<Mutex<TlsStream>>);$/;"	s
Wrapper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^impl<T> Wrapper<T> {$/;"	c
Wrapper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^struct Wrapper<T> {$/;"	s
Wrapping	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Wrapping<T>$/;"	c
Wrapping	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl<T> Serialize for Wrapping<T>$/;"	c
Wrapping	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl<T> Value for core::num::Wrapping<T>$/;"	c
Write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    Write(PathBuf),$/;"	e	enum:DebouncedEvent
Write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^pub trait Write {$/;"	i
WriteError	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    WriteError(io::Error),$/;"	e	enum:CopyUntilResult
WriterFormatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^impl<'a, 'b> io::Write for WriterFormatter<'a, 'b> {$/;"	c
WriterFormatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^struct WriterFormatter<'a, 'b: 'a> {$/;"	s
Writing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    Writing(HttpWriter<BufWriter<Box<NetworkStream + Send>>>),$/;"	e	enum:Stream
WrongNumberOfValues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    WrongNumberOfValues,$/;"	e	enum:ErrorKind
X	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    struct X {$/;"	s	function:expressions
XUploadContentType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl ::std::ops::Deref for XUploadContentType {$/;"	c
XUploadContentType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl ::std::ops::DerefMut for XUploadContentType {$/;"	c
XUploadContentType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl Display for XUploadContentType {$/;"	c
XUploadContentType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl Header for XUploadContentType {$/;"	c
XUploadContentType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^impl HeaderFormat for XUploadContentType {$/;"	c
XUploadContentType	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub struct XUploadContentType(pub Mime);$/;"	s
Zsh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    Zsh,$/;"	e	enum:Shell
ZshGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/zsh.rs	/^impl<'a, 'b> ZshGen<'a, 'b> {$/;"	c
ZshGen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/zsh.rs	/^pub struct ZshGen<'a, 'b>$/;"	s
_StrExt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/strext.rs	/^pub trait _StrExt {$/;"	i
__Nonexhaustive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    __Nonexhaustive(Void)$/;"	e	enum:Error
__hyper__deref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^macro_rules! __hyper__deref {$/;"	M
__hyper__tm	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^macro_rules! __hyper__tm {$/;"	M
__lazy_static_create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/core_lazy.rs	/^macro_rules! __lazy_static_create {$/;"	M
__lazy_static_create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^macro_rules! __lazy_static_create {$/;"	M
__lazy_static_internal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^macro_rules! __lazy_static_internal {$/;"	M
__private_deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/macros.rs	/^macro_rules! __private_deserialize {$/;"	M
__private_serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/macros.rs	/^macro_rules! __private_serialize {$/;"	M
__private_visit_untagged_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	P	interface:Visitor
__serialize_unimplemented	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/macros.rs	/^macro_rules! __serialize_unimplemented {$/;"	M
__serialize_unimplemented_helper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	M
__serialize_unimplemented_method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/macros.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	M
__slog_builtin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! __slog_builtin {$/;"	M
__slog_static_max_level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub fn __slog_static_max_level() -> FilterLevel {$/;"	f
_acknowledge_abuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _acknowledge_abuse: Option<bool>,$/;"	m	struct:FileGetCall
_acknowledge_abuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _acknowledge_abuse: Option<bool>,$/;"	m	struct:FileWatchCall
_acknowledge_abuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _acknowledge_abuse: Option<bool>,$/;"	m	struct:RevisionGetCall
_add_parents	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _add_parents: Option<String>,$/;"	m	struct:FileUpdateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:AboutGetCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ChangeGetStartPageTokenCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ChangeListCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ChangeWatchCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ChannelStopCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:CommentCreateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:CommentDeleteCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:CommentGetCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:CommentListCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:CommentUpdateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:DriveCreateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:DriveDeleteCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:DriveGetCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:DriveHideCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:DriveListCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:DriveUnhideCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:DriveUpdateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileCopyCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileCreateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileDeleteCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileEmptyTrashCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileExportCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileGenerateIdCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileGetCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileListCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileUpdateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:FileWatchCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:PermissionCreateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:PermissionDeleteCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:PermissionGetCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:PermissionListCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:PermissionUpdateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ReplyCreateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ReplyDeleteCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ReplyGetCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ReplyListCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:ReplyUpdateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:RevisionDeleteCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:RevisionGetCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:RevisionListCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:RevisionUpdateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:TeamdriveCreateCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:TeamdriveDeleteCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:TeamdriveGetCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:TeamdriveListCall
_additional_params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _additional_params: HashMap<String, String>,$/;"	m	struct:TeamdriveUpdateCall
_assert_send	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^    fn _assert_send<T: Send>() {}$/;"	f	function:_assert_types
_assert_sync	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^    fn _assert_sync<T: Sync>() {}$/;"	f	function:_assert_types
_assert_types	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^fn _assert_types() {$/;"	f
_base_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _base_url: String,$/;"	m	struct:DriveHub
_clap_count_exprs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! _clap_count_exprs {$/;"	M
_comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _comment_id: String,$/;"	m	struct:CommentDeleteCall
_comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _comment_id: String,$/;"	m	struct:CommentGetCall
_comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _comment_id: String,$/;"	m	struct:CommentUpdateCall
_comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _comment_id: String,$/;"	m	struct:ReplyCreateCall
_comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _comment_id: String,$/;"	m	struct:ReplyDeleteCall
_comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _comment_id: String,$/;"	m	struct:ReplyGetCall
_comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _comment_id: String,$/;"	m	struct:ReplyListCall
_comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _comment_id: String,$/;"	m	struct:ReplyUpdateCall
_corpora	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _corpora: Option<String>,$/;"	m	struct:FileListCall
_corpus	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _corpus: Option<String>,$/;"	m	struct:FileListCall
_count	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _count: Option<i32>,$/;"	m	struct:FileGenerateIdCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:AboutGetCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ChangeGetStartPageTokenCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ChangeListCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ChangeWatchCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ChannelStopCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:CommentCreateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:CommentDeleteCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:CommentGetCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:CommentListCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:CommentUpdateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:DriveCreateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:DriveDeleteCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:DriveGetCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:DriveHideCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:DriveListCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:DriveUnhideCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:DriveUpdateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileCopyCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileCreateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileDeleteCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileEmptyTrashCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileExportCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileGenerateIdCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileGetCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileListCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileUpdateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:FileWatchCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:PermissionCreateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:PermissionDeleteCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:PermissionGetCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:PermissionListCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:PermissionUpdateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ReplyCreateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ReplyDeleteCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ReplyGetCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ReplyListCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:ReplyUpdateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:RevisionDeleteCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:RevisionGetCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:RevisionListCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:RevisionUpdateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:TeamdriveCreateCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:TeamdriveDeleteCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:TeamdriveGetCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:TeamdriveListCall
_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _delegate: Option<&'a mut dyn Delegate>,$/;"	m	struct:TeamdriveUpdateCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: Option<String>,$/;"	m	struct:ChangeGetStartPageTokenCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: Option<String>,$/;"	m	struct:ChangeListCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: Option<String>,$/;"	m	struct:ChangeWatchCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: Option<String>,$/;"	m	struct:FileListCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: String,$/;"	m	struct:DriveDeleteCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: String,$/;"	m	struct:DriveGetCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: String,$/;"	m	struct:DriveHideCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: String,$/;"	m	struct:DriveUnhideCall
_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _drive_id: String,$/;"	m	struct:DriveUpdateCall
_email_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _email_message: Option<String>,$/;"	m	struct:PermissionCreateCall
_enforce_single_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _enforce_single_parent: Option<bool>,$/;"	m	struct:FileCopyCall
_enforce_single_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _enforce_single_parent: Option<bool>,$/;"	m	struct:FileCreateCall
_enforce_single_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _enforce_single_parent: Option<bool>,$/;"	m	struct:FileUpdateCall
_enforce_single_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _enforce_single_parent: Option<bool>,$/;"	m	struct:PermissionCreateCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:CommentCreateCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:CommentDeleteCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:CommentGetCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:CommentListCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:CommentUpdateCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:FileCopyCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:FileDeleteCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:FileExportCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:FileGetCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:FileUpdateCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:FileWatchCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:PermissionCreateCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:PermissionDeleteCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:PermissionGetCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:PermissionListCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:PermissionUpdateCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:ReplyCreateCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:ReplyDeleteCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:ReplyGetCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:ReplyListCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:ReplyUpdateCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:RevisionDeleteCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:RevisionGetCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:RevisionListCall
_file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _file_id: String,$/;"	m	struct:RevisionUpdateCall
_find_by_long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! _find_by_long {$/;"	M
_find_by_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! _find_by_short {$/;"	M
_guard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    _guard: Option<JoinHandle<()>>,$/;"	m	struct:Listening
_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn _help(&self, mut use_long: bool) -> Error {$/;"	f
_ignore_default_visibility	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _ignore_default_visibility: Option<bool>,$/;"	m	struct:FileCopyCall
_ignore_default_visibility	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _ignore_default_visibility: Option<bool>,$/;"	m	struct:FileCreateCall
_include_corpus_removals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_corpus_removals: Option<bool>,$/;"	m	struct:ChangeListCall
_include_corpus_removals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_corpus_removals: Option<bool>,$/;"	m	struct:ChangeWatchCall
_include_deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_deleted: Option<bool>,$/;"	m	struct:CommentGetCall
_include_deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_deleted: Option<bool>,$/;"	m	struct:CommentListCall
_include_deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_deleted: Option<bool>,$/;"	m	struct:ReplyGetCall
_include_deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_deleted: Option<bool>,$/;"	m	struct:ReplyListCall
_include_items_from_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_items_from_all_drives: Option<bool>,$/;"	m	struct:ChangeListCall
_include_items_from_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_items_from_all_drives: Option<bool>,$/;"	m	struct:ChangeWatchCall
_include_items_from_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_items_from_all_drives: Option<bool>,$/;"	m	struct:FileListCall
_include_removed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_removed: Option<bool>,$/;"	m	struct:ChangeListCall
_include_removed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_removed: Option<bool>,$/;"	m	struct:ChangeWatchCall
_include_team_drive_items	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_team_drive_items: Option<bool>,$/;"	m	struct:ChangeListCall
_include_team_drive_items	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_team_drive_items: Option<bool>,$/;"	m	struct:ChangeWatchCall
_include_team_drive_items	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _include_team_drive_items: Option<bool>,$/;"	m	struct:FileListCall
_is_char_boundary	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/strext.rs	/^    fn _is_char_boundary(&self, index: usize) -> bool {$/;"	P	implementation:str
_is_char_boundary	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/strext.rs	/^    fn _is_char_boundary(&self, index: usize) -> bool;$/;"	P	interface:_StrExt
_keep_revision_forever	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _keep_revision_forever: Option<bool>,$/;"	m	struct:FileCopyCall
_keep_revision_forever	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _keep_revision_forever: Option<bool>,$/;"	m	struct:FileCreateCall
_keep_revision_forever	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _keep_revision_forever: Option<bool>,$/;"	m	struct:FileUpdateCall
_marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    _marker: PhantomData<W>,$/;"	m	struct:Request
_marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatInternallyTaggedAccess
_marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatMapAccess
_marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatStructAccess
_mime_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _mime_type: String,$/;"	m	struct:FileExportCall
_move_to_new_owners_root	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _move_to_new_owners_root: Option<bool>,$/;"	m	struct:PermissionCreateCall
_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! _names {$/;"	M
_ocr_language	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _ocr_language: Option<String>,$/;"	m	struct:FileCopyCall
_ocr_language	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _ocr_language: Option<String>,$/;"	m	struct:FileCreateCall
_ocr_language	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _ocr_language: Option<String>,$/;"	m	struct:FileUpdateCall
_order_by	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _order_by: Option<String>,$/;"	m	struct:FileListCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:ChangeListCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:ChangeWatchCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:CommentListCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:DriveListCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:FileListCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:PermissionListCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:ReplyListCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:RevisionListCall
_page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_size: Option<i32>,$/;"	m	struct:TeamdriveListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: Option<String>,$/;"	m	struct:CommentListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: Option<String>,$/;"	m	struct:DriveListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: Option<String>,$/;"	m	struct:FileListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: Option<String>,$/;"	m	struct:PermissionListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: Option<String>,$/;"	m	struct:ReplyListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: Option<String>,$/;"	m	struct:RevisionListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: Option<String>,$/;"	m	struct:TeamdriveListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: String,$/;"	m	struct:ChangeListCall
_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _page_token: String,$/;"	m	struct:ChangeWatchCall
_permission_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _permission_id: String,$/;"	m	struct:PermissionDeleteCall
_permission_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _permission_id: String,$/;"	m	struct:PermissionGetCall
_permission_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _permission_id: String,$/;"	m	struct:PermissionUpdateCall
_q	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _q: Option<String>,$/;"	m	struct:DriveListCall
_q	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _q: Option<String>,$/;"	m	struct:FileListCall
_q	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _q: Option<String>,$/;"	m	struct:TeamdriveListCall
_remove_expiration	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _remove_expiration: Option<bool>,$/;"	m	struct:PermissionUpdateCall
_remove_parents	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _remove_parents: Option<String>,$/;"	m	struct:FileUpdateCall
_reply_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _reply_id: String,$/;"	m	struct:ReplyDeleteCall
_reply_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _reply_id: String,$/;"	m	struct:ReplyGetCall
_reply_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _reply_id: String,$/;"	m	struct:ReplyUpdateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Channel,$/;"	m	struct:ChangeWatchCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Channel,$/;"	m	struct:ChannelStopCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Channel,$/;"	m	struct:FileWatchCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Comment,$/;"	m	struct:CommentCreateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Comment,$/;"	m	struct:CommentUpdateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Drive,$/;"	m	struct:DriveCreateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Drive,$/;"	m	struct:DriveUpdateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: File,$/;"	m	struct:FileCopyCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: File,$/;"	m	struct:FileCreateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: File,$/;"	m	struct:FileUpdateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Permission,$/;"	m	struct:PermissionCreateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Permission,$/;"	m	struct:PermissionUpdateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Reply,$/;"	m	struct:ReplyCreateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Reply,$/;"	m	struct:ReplyUpdateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: Revision,$/;"	m	struct:RevisionUpdateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: TeamDrive,$/;"	m	struct:TeamdriveCreateCall
_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request: TeamDrive,$/;"	m	struct:TeamdriveUpdateCall
_request_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request_id: String,$/;"	m	struct:DriveCreateCall
_request_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _request_id: String,$/;"	m	struct:TeamdriveCreateCall
_restrict_to_my_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _restrict_to_my_drive: Option<bool>,$/;"	m	struct:ChangeListCall
_restrict_to_my_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _restrict_to_my_drive: Option<bool>,$/;"	m	struct:ChangeWatchCall
_revision_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _revision_id: String,$/;"	m	struct:RevisionDeleteCall
_revision_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _revision_id: String,$/;"	m	struct:RevisionGetCall
_revision_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _revision_id: String,$/;"	m	struct:RevisionUpdateCall
_root_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _root_url: String,$/;"	m	struct:DriveHub
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:AboutGetCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ChangeGetStartPageTokenCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ChangeListCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ChangeWatchCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ChannelStopCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:CommentCreateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:CommentDeleteCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:CommentGetCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:CommentListCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:CommentUpdateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:DriveCreateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:DriveDeleteCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:DriveGetCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:DriveHideCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:DriveListCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:DriveUnhideCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:DriveUpdateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileCopyCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileCreateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileDeleteCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileEmptyTrashCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileExportCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileGenerateIdCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileGetCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileListCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileUpdateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:FileWatchCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:PermissionCreateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:PermissionDeleteCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:PermissionGetCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:PermissionListCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:PermissionUpdateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ReplyCreateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ReplyDeleteCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ReplyGetCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ReplyListCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:ReplyUpdateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:RevisionDeleteCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:RevisionGetCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:RevisionListCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:RevisionUpdateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:TeamdriveCreateCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:TeamdriveDeleteCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:TeamdriveGetCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:TeamdriveListCall
_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _scopes: BTreeMap<String, ()>$/;"	m	struct:TeamdriveUpdateCall
_send_notification_email	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _send_notification_email: Option<bool>,$/;"	m	struct:PermissionCreateCall
_shorts_longs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! _shorts_longs {$/;"	M
_space	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _space: Option<String>,$/;"	m	struct:FileGenerateIdCall
_spaces	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _spaces: Option<String>,$/;"	m	struct:ChangeListCall
_spaces	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _spaces: Option<String>,$/;"	m	struct:ChangeWatchCall
_spaces	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _spaces: Option<String>,$/;"	m	struct:FileListCall
_start_modified_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _start_modified_time: Option<String>,$/;"	m	struct:CommentListCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:ChangeGetStartPageTokenCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:ChangeListCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:ChangeWatchCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:FileCopyCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:FileCreateCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:FileDeleteCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:FileGetCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:FileListCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:FileUpdateCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:FileWatchCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:PermissionCreateCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:PermissionDeleteCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:PermissionGetCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:PermissionListCall
_supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_all_drives: Option<bool>,$/;"	m	struct:PermissionUpdateCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:ChangeGetStartPageTokenCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:ChangeListCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:ChangeWatchCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:FileCopyCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:FileCreateCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:FileDeleteCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:FileGetCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:FileListCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:FileUpdateCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:FileWatchCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:PermissionCreateCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:PermissionDeleteCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:PermissionGetCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:PermissionListCall
_supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _supports_team_drives: Option<bool>,$/;"	m	struct:PermissionUpdateCall
_team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _team_drive_id: Option<String>,$/;"	m	struct:ChangeGetStartPageTokenCall
_team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _team_drive_id: Option<String>,$/;"	m	struct:ChangeListCall
_team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _team_drive_id: Option<String>,$/;"	m	struct:ChangeWatchCall
_team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _team_drive_id: Option<String>,$/;"	m	struct:FileListCall
_team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _team_drive_id: String,$/;"	m	struct:TeamdriveDeleteCall
_team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _team_drive_id: String,$/;"	m	struct:TeamdriveGetCall
_team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _team_drive_id: String,$/;"	m	struct:TeamdriveUpdateCall
_transfer_ownership	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _transfer_ownership: Option<bool>,$/;"	m	struct:PermissionCreateCall
_transfer_ownership	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _transfer_ownership: Option<bool>,$/;"	m	struct:PermissionUpdateCall
_use_content_as_indexable_text	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_content_as_indexable_text: Option<bool>,$/;"	m	struct:FileCreateCall
_use_content_as_indexable_text	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_content_as_indexable_text: Option<bool>,$/;"	m	struct:FileUpdateCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:DriveGetCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:DriveListCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:DriveUpdateCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:PermissionCreateCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:PermissionDeleteCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:PermissionGetCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:PermissionListCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:PermissionUpdateCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:TeamdriveGetCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:TeamdriveListCall
_use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _use_domain_admin_access: Option<bool>,$/;"	m	struct:TeamdriveUpdateCall
_user_agent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    _user_agent: String,$/;"	m	struct:DriveHub
_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn _version(&self, use_long: bool) -> Error {$/;"	f
_write_parser_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn _write_parser_help($/;"	P	implementation:Help
_writing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    _writing: PhantomData<W>$/;"	m	struct:Response
a	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl<'a> Display for Expected + 'a {$/;"	c
about	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub about: Option<&'b str>,$/;"	m	struct:AppMeta
about	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn about<S: Into<&'b str>>(mut self, about: S) -> Self {$/;"	P	implementation:App
about	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn about(&'a self) -> AboutMethods<'a, C, A> {$/;"	f
accept	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod accept;$/;"	n
accept	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn accept(&mut self) -> ::Result<HttpStream> {$/;"	P	implementation:HttpListener
accept	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn accept(&mut self) -> ::Result<S::Stream> {$/;"	P	implementation:HttpsListener
accept	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn accept(&mut self) -> ::Result<Self::Stream>;$/;"	P	interface:NetworkListener
accept	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^    pub fn accept<F>(self, work: F, threads: usize)$/;"	P	implementation:ListenerPool
accept_charset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod accept_charset;$/;"	n
accept_encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod accept_encoding;$/;"	n
accept_language	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod accept_language;$/;"	n
accept_ranges	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod accept_ranges;$/;"	n
acceptor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^    acceptor: A$/;"	m	struct:ListenerPool
accepts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn accepts(self, level: Level) -> bool {$/;"	P	implementation:FilterLevel
access_control_allow_credentials	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod access_control_allow_credentials;$/;"	n
access_control_allow_headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod access_control_allow_headers;$/;"	n
access_control_allow_methods	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod access_control_allow_methods;$/;"	n
access_control_allow_origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod access_control_allow_origin;$/;"	n
access_control_expose_headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod access_control_expose_headers;$/;"	n
access_control_max_age	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod access_control_max_age;$/;"	n
access_control_request_headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod access_control_request_headers;$/;"	n
access_control_request_method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod access_control_request_method;$/;"	n
access_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    access_token: Option<String>,$/;"	m	struct:JSONTokenResponse
access_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^            access_token: String,$/;"	m	struct:refresh_token::JsonToken
access_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    access_token: Option<String>,$/;"	m	struct:TokenResponse
access_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub access_token: String,$/;"	m	struct:Scheme
access_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub access_token: String,$/;"	m	struct:Token
acknowledge_abuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn acknowledge_abuse(mut self, new_value: bool) -> FileGetCall<'a, C, A> {$/;"	f
acknowledge_abuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn acknowledge_abuse(mut self, new_value: bool) -> FileWatchCall<'a, C, A> {$/;"	f
acknowledge_abuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn acknowledge_abuse(mut self, new_value: bool) -> RevisionGetCall<'a, C, A> {$/;"	f
action	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub action: Option<String>,$/;"	m	struct:Reply
add	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn add(x: &[Limb], y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
add	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn add(x: Limb, y: Limb) -> (Limb, bool) {$/;"	f	module:scalar
add_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn add_arg(&mut self, a: Arg<'a, 'b>) {$/;"	f
add_arg_groups	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn add_arg_groups(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_arg_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn add_arg_ref(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_conditional_reqs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn add_conditional_reqs(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_defaults	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn add_defaults(&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
add_digit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/digit.rs	/^pub(crate) fn add_digit(value: u64, digit: u32) -> Option<u64> {$/;"	f
add_env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn add_env(&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	f
add_group	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn add_group(&mut self, group: ArgGroup<'a>) {$/;"	f
add_index_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn add_index_to(&mut self, arg: &'a str, idx: usize) {$/;"	P	implementation:ArgMatcher
add_padding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^pub fn add_padding(input_len: usize, output: &mut [u8]) -> usize {$/;"	f
add_padding_random_valid_utf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn add_padding_random_valid_utf8() {$/;"	f	module:tests
add_parents	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_parents(mut self, new_value: &str) -> FileUpdateCall<'a, C, A> {$/;"	f
add_part	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub fn add_part(&mut self, reader: &'a mut dyn Read, size: u64, mime_type: Mime) -> &mut Mul/;"	P	implementation:MultiPartReader
add_reqs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn add_reqs(&mut self, a: &Arg<'a, 'b>) {$/;"	f
add_sc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/zsh.rs	/^    fn add_sc(sc: &App, n: &str, ret: &mut Vec<String>) {$/;"	f	function:subcommands_of
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> AboutGetCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ChangeGetStartPageTokenCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ChangeListCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ChangeWatchCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ChannelStopCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> CommentCreateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> CommentDeleteCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> CommentGetCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> CommentListCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> CommentUpdateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> DriveCreateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> DriveDeleteCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> DriveGetCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> DriveHideCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> DriveListCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> DriveUnhideCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> DriveUpdateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileCopyCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileCreateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileDeleteCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileEmptyTrashCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileExportCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileGenerateIdCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileGetCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileListCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileUpdateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> FileWatchCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> PermissionCreateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> PermissionDeleteCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> PermissionGetCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> PermissionListCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> PermissionUpdateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ReplyCreateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ReplyDeleteCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ReplyGetCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ReplyListCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> ReplyUpdateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> RevisionDeleteCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> RevisionGetCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> RevisionListCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> RevisionUpdateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> TeamdriveCreateCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> TeamdriveDeleteCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> TeamdriveGetCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> TeamdriveListCall<'a, C, A>$/;"	f
add_scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn add_scope<T, S>(mut self, scope: T) -> TeamdriveUpdateCall<'a, C, A>$/;"	f
add_single_val_to_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn add_single_val_to_arg<A>($/;"	f
add_single_watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn add_single_watch($/;"	P	implementation:EventLoop
add_subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn add_subcommand(&mut self, mut subcmd: App<'a, 'b>) {$/;"	f
add_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^        macro_rules! add_val {$/;"	M	function:add_defaults
add_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^        macro_rules! add_val {$/;"	M	function:add_env
add_val_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn add_val_to(&mut self, arg: &'a str, val: &OsStr) {$/;"	P	implementation:ArgMatcher
add_val_to_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn add_val_to_arg<A>($/;"	f
add_watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn add_watch(&mut self, path: PathBuf, is_recursive: bool, mut watch_self: bool) -> Result<(/;"	P	implementation:EventLoop
add_watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn add_watch(&mut self, path: PathBuf, is_recursive: bool) -> Result<PathBuf> {$/;"	P	implementation:ReadDirectoryChangesServer
add_watch_by_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^fn add_watch_by_event($/;"	f
address	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub address: Option<String>,$/;"	m	struct:Channel
admin_managed_restrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub admin_managed_restrictions: Option<bool>,$/;"	m	struct:DriveRestrictions
admin_managed_restrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub admin_managed_restrictions: Option<bool>,$/;"	m	struct:TeamDriveRestrictions
after_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn after_help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
algorithm	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^pub(crate) mod algorithm;$/;"	n
alias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	P	implementation:App
alias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	P	implementation:Arg
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub aliases: Option<Vec<(&'b str, bool)>>, \/\/ (name, visible)$/;"	m	struct:AppMeta
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	P	implementation:App
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn aliases(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:App
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	f
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>>;$/;"	P	interface:AnyArg
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn aliases(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:Arg
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	P	implementation:FlagBuilder
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	P	implementation:OptBuilder
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn aliases(&self) -> Option<Vec<&'e str>> {$/;"	P	implementation:PosBuilder
aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^    pub aliases: Option<Vec<(&'b str, bool)>>, \/\/ (name, visible)$/;"	m	struct:Switched
all_options_for_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^    fn all_options_for_path(&self, path: &str) -> String {$/;"	P	implementation:BashGen
all_subcommand_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^pub fn all_subcommand_names(p: &Parser) -> Vec<String> {$/;"	f
all_subcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^    fn all_subcommands(&self) -> String {$/;"	P	implementation:BashGen
all_subcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^pub fn all_subcommands(p: &Parser) -> Vec<(String, String)> {$/;"	f
allow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod allow;$/;"	n
allow_file_discovery	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub allow_file_discovery: Option<bool>,$/;"	m	struct:Permission
allow_hyphen_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn allow_hyphen_values(self, a: bool) -> Self {$/;"	P	implementation:Arg
altitude	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub altitude: Option<f64>,$/;"	m	struct:FileImageMediaMetadataLocation
anchor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub anchor: Option<String>,$/;"	m	struct:Comment
anchor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    anchor: Option<String>,$/;"	m	struct:LinkValue
anchor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn anchor(&self) -> Option<&str> {$/;"	P	implementation:LinkValue
any_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^pub mod any_arg;$/;"	n
aperture	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub aperture: Option<f32>,$/;"	m	struct:FileImageMediaMetadata
api_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn api_key(&mut self) -> Option<String> {$/;"	P	interface:Delegate
api_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    fn api_key(&mut self) -> Option<String> {$/;"	f
api_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    fn api_key(&mut self) -> Option<String>;$/;"	P	interface:GetToken
api_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn api_key(&mut self) -> Option<String> {$/;"	P	implementation:ServiceAccountAccess
app	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod app;$/;"	n
app_debug_asserts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn app_debug_asserts(&self) -> bool {$/;"	f
app_from_crate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! app_from_crate {$/;"	M
app_installed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub app_installed: Option<bool>,$/;"	m	struct:About
app_properties	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub app_properties: Option<HashMap<String, String>>,$/;"	m	struct:File
app_props_map	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn app_props_map(id: &str) -> Option<HashMap<String, String>> {$/;"	f
app_settings_fromstr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    fn app_settings_fromstr() {$/;"	f	module:test
append	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn append(&mut self, other: &mut Self) {$/;"	P	implementation:Map
append	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    append: bool,$/;"	m	struct:Builder
append	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn append(&mut self, append: bool) -> &mut Self {$/;"	P	implementation:Builder
append_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn append_path<P: AsRef<Path>>($/;"	P	implementation:FsEventWatcher
append_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn append_raw<K: Into<Cow<'static, str>>>(&mut self, name: K, value: Vec<u8>) {$/;"	P	implementation:Headers
application_secret	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    application_secret: ApplicationSecret,$/;"	m	struct:DeviceFlow
arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn arg<A: Into<Arg<'a, 'b>>>(mut self, a: A) -> Self {$/;"	P	implementation:App
arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn arg(mut self, n: &'a str) -> Self {$/;"	P	implementation:ArgGroup
arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^mod arg;$/;"	n
arg_builder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^mod arg_builder;$/;"	n
arg_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! arg_enum {$/;"	M
arg_from_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn arg_from_usage(mut self, usage: &'a str) -> Self {$/;"	P	implementation:App
arg_matcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^mod arg_matcher;$/;"	n
arg_matches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^mod arg_matches;$/;"	n
arg_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn arg_names(&'a self) -> Vec<&'a str> {$/;"	P	implementation:ArgMatcher
arg_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! arg_names {$/;"	M
arg_names_in_group	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn arg_names_in_group(&self, group: &str) -> Vec<&'a str> {$/;"	f
arg_settings_fromstr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    fn arg_settings_fromstr() {$/;"	f	module:test
args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn args(mut self, args: &[Arg<'a, 'b>]) -> Self {$/;"	P	implementation:App
args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub args: HashMap<&'a str, MatchedArg>,$/;"	m	struct:ArgMatches
args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub args: Vec<&'a str>,$/;"	m	struct:ArgGroup
args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn args(mut self, ns: &[&'a str]) -> Self {$/;"	P	implementation:ArgGroup
args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod args;$/;"	n
args_from_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn args_from_usage(mut self, usage: &'a str) -> Self {$/;"	P	implementation:App
args_in_group	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn args_in_group(&self, group: &str) -> Vec<String> {$/;"	f
argument_conflict	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn argument_conflict<O, U>($/;"	P	implementation:Error
argument_not_found_auto	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn argument_not_found_auto<A>(arg: A) -> Self$/;"	P	implementation:Error
array_impls	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! array_impls {$/;"	M
array_impls	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	M
as_arg_trait	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^fn as_arg_trait<'a, 'b, T: ArgWithOrder<'a, 'b>>(x: &T) -> &ArgWithOrder<'a, 'b> {$/;"	f
as_array	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_array(&self) -> Option<&Vec<Value>> {$/;"	P	implementation:Value
as_array_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_array_mut(&mut self) -> Option<&mut Vec<Value>> {$/;"	P	implementation:Value
as_base	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn as_base(&self) -> &ArgWithDisplay<'b, 'c> {$/;"	f
as_base	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn as_base(&self) -> &ArgWithDisplay<'b, 'c>;$/;"	P	interface:ArgWithOrder
as_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_bool(&self) -> Option<bool> {$/;"	P	implementation:Value
as_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn as_bytes(&self) -> &[u8] {$/;"	P	implementation:OsStr
as_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn as_bytes(&self) -> &[u8];$/;"	P	interface:OsStrExt3
as_cast	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn as_cast<N: AsPrimitive>(n: N) -> Self;$/;"	P	interface:AsCast
as_cast_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^macro_rules! as_cast_impl {$/;"	M
as_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn as_f32(self) -> f32;$/;"	P	interface:AsPrimitive
as_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn as_f64(self) -> f64;$/;"	P	interface:AsPrimitive
as_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	P	implementation:Number
as_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	P	implementation:Value
as_file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn as_file(&self) -> &File {$/;"	P	implementation:NamedTempFile
as_file_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn as_file_mut(&mut self) -> &mut File {$/;"	P	implementation:NamedTempFile
as_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	P	implementation:Number
as_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	P	implementation:Value
as_limb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^pub(crate) fn as_limb<T: Integer>(t: T) -> Limb {$/;"	f
as_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn as_mut(&mut self) -> &mut T { self.obj.as_mut().unwrap() }$/;"	P	implementation:Wrapper
as_null	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_null(&self) -> Option<()> {$/;"	P	implementation:Value
as_object	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_object(&self) -> Option<&Map<String, Value>> {$/;"	P	implementation:Value
as_object_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_object_mut(&mut self) -> Option<&mut Map<String, Value>> {$/;"	P	implementation:Value
as_primitive_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^macro_rules! as_primitive_impl {$/;"	M
as_raw_fd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn as_raw_fd(&self) -> ::std::os::unix::io::RawFd {$/;"	P	implementation:HttpListener
as_raw_fd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn as_raw_fd(&self) -> ::std::os::unix::io::RawFd {$/;"	P	implementation:HttpStream
as_raw_fd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn as_raw_fd(&self) -> std::os::unix::io::RawFd {$/;"	P	implementation:NamedTempFile
as_raw_handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn as_raw_handle(&self) -> std::os::windows::io::RawHandle {$/;"	P	implementation:NamedTempFile
as_raw_socket	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn as_raw_socket(&self) -> ::std::os::windows::io::RawSocket {$/;"	P	implementation:HttpListener
as_raw_socket	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn as_raw_socket(&self) -> ::std::os::windows::io::RawSocket {$/;"	P	implementation:HttpStream
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:Scope
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        fn as_ref(&self) -> &str {$/;"	P	implementation:scheme::Scheme
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:CowStr
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn as_ref(&self) -> &T { self.obj.as_ref().unwrap() }$/;"	P	implementation:Wrapper
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:Method
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:HttpVersion
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn as_ref<'a>(&'a self) -> &'a str {$/;"	P	implementation:Key
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    pub fn as_ref(&self) -> &str {$/;"	P	implementation:Key
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn as_ref<'a>(&'a self) -> &'a str {$/;"	P	implementation:Key
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    pub fn as_ref(&self) -> &str {$/;"	P	implementation:Key
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    fn as_ref(&self) -> &Path {$/;"	P	implementation:TempDir
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn as_ref(&self) -> &OsStr {$/;"	P	implementation:TempPath
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn as_ref(&self) -> &Path {$/;"	P	implementation:NamedTempFile
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn as_ref(&self) -> &Path {$/;"	P	implementation:TempPath
as_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn as_ref(&self) -> &'static str {$/;"	P	implementation:TokenType
as_serde	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn as_serde(&self) -> &erased_serde::Serialize;$/;"	P	interface:SerdeValue
as_short_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn as_short_str(&self) -> &'static str {$/;"	P	implementation:FilterLevel
as_short_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn as_short_str(&self) -> &'static str {$/;"	P	implementation:Level
as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Encode
as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:content::Content
as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^fn as_str<'de, 's, R: Read<'de>>(read: &R, slice: &'s [u8]) -> Result<&'s str> {$/;"	f
as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:Value
as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Key
as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Key
as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn as_str(&self) -> &'static str {$/;"	P	implementation:FilterLevel
as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn as_str(&self) -> &'static str {$/;"	P	implementation:Level
as_u128	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn as_u128(self) -> u128;$/;"	P	interface:AsPrimitive
as_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn as_u32(self) -> u32;$/;"	P	interface:AsPrimitive
as_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn as_u64(self) -> u64;$/;"	P	interface:AsPrimitive
as_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	P	implementation:Number
as_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	P	implementation:Value
as_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn as_usize(self) -> usize;$/;"	P	interface:AsPrimitive
as_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn as_usize(&self) -> usize {$/;"	P	implementation:FilterLevel
as_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn as_usize(&self) -> usize {$/;"	P	implementation:Level
as_wide	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^fn as_wide<T: Integer>(t: T) -> Wide {$/;"	f
assert_display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    fn assert_display(expected_string: &str, request_uri: RequestUri) {$/;"	f	function:test_uri_display
assert_encode_sanity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/tests.rs	/^pub fn assert_encode_sanity(encoded: &str, config: Config, input_len: usize) {$/;"	f
assert_encoded_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn assert_encoded_length(input_len: usize, encoded_len: usize, config: Config) {$/;"	f	module:tests
assert_from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn assert_from_str<T>(expected: T, level_str: &str)$/;"	f
assert_no_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn assert_no_body(s: &str) {$/;"	f	module:tests
assert_to_string_from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn assert_to_string_from_str<T>(expected: T)$/;"	f
atomic_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! atomic_impl {$/;"	M
atomic_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! atomic_impl {$/;"	M
aud	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    aud: String,$/;"	m	struct:Claims
auth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub auth: &'a mut A,$/;"	m	struct:ResumableUploadHelper
auth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    auth: RefCell<A>,$/;"	m	struct:DriveHub
auth_code_rcv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    auth_code_rcv: Option<Receiver<String>>,$/;"	m	struct:InstalledFlow
auth_code_snd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    auth_code_snd: Mutex<Sender<String>>,$/;"	m	struct:InstalledFlowHandler
auth_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub auth_header: Authorization<Bearer>,$/;"	m	struct:ResumableUploadHelper
auth_provider_x509_cert_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub auth_provider_x509_cert_url: Option<String>,$/;"	m	struct:ApplicationSecret
auth_provier_x509_cert_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub auth_provier_x509_cert_url: Option<String>,$/;"	m	struct:ServiceAccountKey
auth_uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub auth_uri: Option<String>,$/;"	m	struct:ServiceAccountKey
auth_uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub auth_uri: String,$/;"	m	struct:ApplicationSecret
authenticator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod authenticator;$/;"	n
authenticator_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod authenticator_delegate;$/;"	n
author	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub author: Option<&'b str>,$/;"	m	struct:AppMeta
author	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn author<S: Into<&'b str>>(mut self, author: S) -> Self {$/;"	P	implementation:App
author	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub author: Option<User>,$/;"	m	struct:Comment
author	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub author: Option<User>,$/;"	m	struct:Reply
authorization	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod authorization;$/;"	n
avoid_overflow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn avoid_overflow<F>(fp: &mut ExtendedFloat)$/;"	f
b	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub b: Base<'a, 'b>,$/;"	m	struct:Arg
b	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    pub b: Base<'n, 'e>,$/;"	m	struct:FlagBuilder
b	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    pub b: Base<'n, 'e>,$/;"	m	struct:OptBuilder
b	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    pub b: Base<'n, 'e>,$/;"	m	struct:PosBuilder
b	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! b($/;"	M
b64_buffer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    b64_buffer: [u8; BUF_SIZE],$/;"	m	struct:DecoderReader
b64_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    b64_len: usize,$/;"	m	struct:DecoderReader
b64_offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    b64_offset: usize,$/;"	m	struct:DecoderReader
b_extended	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bhcomp.rs	/^pub(super) fn b_extended<F: Float>(f: F) -> ExtendedFloat {$/;"	f
background_image_file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub background_image_file: Option<DriveBackgroundImageFile>,$/;"	m	struct:Drive
background_image_file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub background_image_file: Option<TeamDriveBackgroundImageFile>,$/;"	m	struct:TeamDrive
background_image_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub background_image_link: Option<String>,$/;"	m	struct:AboutDriveThemes
background_image_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub background_image_link: Option<String>,$/;"	m	struct:AboutTeamDriveThemes
background_image_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub background_image_link: Option<String>,$/;"	m	struct:Drive
background_image_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub background_image_link: Option<String>,$/;"	m	struct:TeamDrive
bad_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
bad_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn bad_type(what: Unsupported) -> M::Error {$/;"	f
bar	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^        fn bar(&self) -> u32 {$/;"	P	implementation:expressions::Foo
base	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/mod.rs	/^mod base;$/;"	n
base_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn base_url(&mut self, new_base_url: String) -> String {$/;"	f
bash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^mod bash;$/;"	n
basic_display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    fn basic_display() {$/;"	f	module:tests
before_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn before_help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
begin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn begin(&mut self, MethodInfo) {}$/;"	P	interface:Delegate
begin_raw_buffering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	P	implementation:SliceRead
begin_raw_buffering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	P	implementation:StrRead
begin_raw_buffering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	f
begin_raw_buffering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn begin_raw_buffering(&mut self);$/;"	P	interface:Read
begin_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn begin_string<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	P	interface:Formatter
bench_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^macro_rules! bench_header($/;"	M
bench_headers_fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn bench_headers_fmt(b: &mut Bencher) {$/;"	f	module:tests
bench_headers_from_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn bench_headers_from_raw(b: &mut Bencher) {$/;"	f	module:tests
bench_headers_get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn bench_headers_get(b: &mut Bencher) {$/;"	f	module:tests
bench_headers_get_miss	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn bench_headers_get_miss(b: &mut Bencher) {$/;"	f	module:tests
bench_headers_has	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn bench_headers_has(b: &mut Bencher) {$/;"	f	module:tests
bench_headers_new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn bench_headers_new(b: &mut Bencher) {$/;"	f	module:tests
bench_headers_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn bench_headers_set(b: &mut Bencher) {$/;"	f	module:tests
bench_headers_view_is	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn bench_headers_view_is(b: &mut Bencher) {$/;"	f	module:tests
bench_parse_incoming	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn bench_parse_incoming(b: &mut Bencher) {$/;"	f	module:tests
bh_extended	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bhcomp.rs	/^pub(super) fn bh_extended<F: Float>(f: F) -> ExtendedFloat {$/;"	f
bhcomp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bhcomp.rs	/^pub(crate) fn bhcomp<F>(b: F, integer: &[u8], mut fraction: &[u8], exponent: i32) -> F$/;"	f
bhcomp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod bhcomp;$/;"	n
bias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub bias: i32,$/;"	m	struct:ModeratePathPowers
bignum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod bignum;$/;"	n
bin_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub bin_name: Option<String>,$/;"	m	struct:AppMeta
bin_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn bin_name<S: Into<String>>(mut self, name: S) -> Self {$/;"	P	implementation:App
bit_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn bit_length(&self) -> usize {$/;"	P	interface:Math
bit_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn bit_length(x: &[Limb]) -> usize {$/;"	f	module:small
bitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    fn bitor(self, rhs: Self) -> Self {$/;"	P	implementation:AppFlags
blacklist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	P	implementation:App
blacklist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	f
blacklist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn blacklist(&self) -> Option<&[&'e str]>;$/;"	P	interface:AnyArg
blacklist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub blacklist: Option<Vec<&'a str>>,$/;"	m	struct:Base
blacklist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	P	implementation:FlagBuilder
blacklist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	P	implementation:OptBuilder
blacklist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn blacklist(&self) -> Option<&[&'e str]> {$/;"	P	implementation:PosBuilder
blocking	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    blocking: bool,$/;"	m	struct:AsyncCore
blocking	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    blocking: bool,$/;"	m	struct:AsyncCoreBuilder
blocking	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn blocking(mut self, blocking: bool) -> Self {$/;"	f
body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    body: Option<Body<'a>>,$/;"	m	struct:RequestBuilder
body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn body<B: Into<Body<'a>>>(mut self, body: B) -> RequestBuilder<'a> {$/;"	P	implementation:RequestBuilder
body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    body: HttpReader<&'a mut BufReader<&'b mut NetworkStream>>$/;"	m	struct:Request
body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    body: HttpWriter<&'a mut (Write + 'a)>,$/;"	m	struct:Response
bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for bool {$/;"	c
borrow_cow_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrow_cow_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
box_forwarded_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	M
buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    buf: Vec<u8>,$/;"	m	struct:BufReader
buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/utf8.rs	/^    buf: [u8; 4],$/;"	m	struct:Encode
buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    buf: Vec<(Vec<u8>, Vec<u8>)>,$/;"	m	struct:CompactFormatSerializer
buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    buf: Vec<u8>,$/;"	m	struct:PlainSyncRecordDecorator
buffer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod buffer;$/;"	n
buffer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    buffer: [u8; BUF_SIZE as usize],$/;"	m	struct:ReadDirectoryRequest
build	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn build(self) -> Async {$/;"	f
build	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn build(self) -> AsyncCore {$/;"	f
build	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn build(self) -> CompactFormat<D> {$/;"	f
build	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn build(self) -> FullFormat<D> {$/;"	f
build	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn build(self) -> TermDecorator {$/;"	P	implementation:TermDecoratorBuilder
build_authentication_request_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^fn build_authentication_request_url<'a, T, I>(auth_uri: &str,$/;"	f
build_bin_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn build_bin_names(&mut self) {$/;"	f
build_err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn build_err(&self, name: &str, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
build_no_guard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn build_no_guard(self) -> Async {$/;"	f
build_no_guard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn build_no_guard(self) -> AsyncCore {$/;"	f
build_with_guard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn build_with_guard(self) -> (Async, AsyncGuard) {$/;"	f
build_with_guard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn build_with_guard(self) -> (AsyncCore, AsyncGuard) {$/;"	f
byte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    macro_rules! byte ($/;"	M	function:read_chunk_size
byte_offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	P	implementation:SliceRead
byte_offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	P	implementation:StrRead
byte_offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn byte_offset(&self) -> usize;$/;"	P	interface:Read
bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    bytes: &'a [u8],$/;"	m	struct:Base64Display
bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    pub fn bytes(from: u64, to: u64) -> Range {$/;"	P	implementation:Range
bytes_multi	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    pub fn bytes_multi(ranges: Vec<(u64, u64)>) -> Range {$/;"	P	implementation:Range
cache	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    cache: Option<&'a str>,$/;"	m	struct:Parser
cache	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    cache: MemoryStorage,$/;"	m	struct:ServiceAccountAccess
cache_control	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod cache_control;$/;"	n
cached	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod cached;$/;"	n
cached_float80	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod cached_float80;$/;"	n
callback	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^pub unsafe extern "C" fn callback($/;"	f
camera_make	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub camera_make: Option<String>,$/;"	m	struct:FileImageMediaMetadata
camera_model	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub camera_model: Option<String>,$/;"	m	struct:FileImageMediaMetadata
can_add_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_add_children: Option<bool>,$/;"	m	struct:DriveCapabilities
can_add_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_add_children: Option<bool>,$/;"	m	struct:FileCapabilities
can_add_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_add_children: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_add_folder_from_another_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_add_folder_from_another_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_add_my_drive_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_add_my_drive_parent: Option<bool>,$/;"	m	struct:FileCapabilities
can_change_copy_requires_writer_permission	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_copy_requires_writer_permission: Option<bool>,$/;"	m	struct:FileCapabilities
can_change_copy_requires_writer_permission_restriction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_copy_requires_writer_permission_restriction: Option<bool>,$/;"	m	struct:DriveCapabilities
can_change_copy_requires_writer_permission_restriction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_copy_requires_writer_permission_restriction: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_change_domain_users_only_restriction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_domain_users_only_restriction: Option<bool>,$/;"	m	struct:DriveCapabilities
can_change_domain_users_only_restriction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_domain_users_only_restriction: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_change_drive_background	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_drive_background: Option<bool>,$/;"	m	struct:DriveCapabilities
can_change_drive_members_only_restriction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_drive_members_only_restriction: Option<bool>,$/;"	m	struct:DriveCapabilities
can_change_team_drive_background	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_team_drive_background: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_change_team_members_only_restriction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_team_members_only_restriction: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_change_viewers_can_copy_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_change_viewers_can_copy_content: Option<bool>,$/;"	m	struct:FileCapabilities
can_comment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_comment: Option<bool>,$/;"	m	struct:DriveCapabilities
can_comment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_comment: Option<bool>,$/;"	m	struct:FileCapabilities
can_comment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_comment: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_copy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_copy: Option<bool>,$/;"	m	struct:DriveCapabilities
can_copy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_copy: Option<bool>,$/;"	m	struct:FileCapabilities
can_copy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_copy: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_create_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_create_drives: Option<bool>,$/;"	m	struct:About
can_create_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_create_team_drives: Option<bool>,$/;"	m	struct:About
can_delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_delete: Option<bool>,$/;"	m	struct:FileCapabilities
can_delete_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_delete_children: Option<bool>,$/;"	m	struct:DriveCapabilities
can_delete_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_delete_children: Option<bool>,$/;"	m	struct:FileCapabilities
can_delete_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_delete_children: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_delete_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_delete_drive: Option<bool>,$/;"	m	struct:DriveCapabilities
can_delete_team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_delete_team_drive: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_download	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_download: Option<bool>,$/;"	m	struct:DriveCapabilities
can_download	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_download: Option<bool>,$/;"	m	struct:FileCapabilities
can_download	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_download: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_edit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_edit: Option<bool>,$/;"	m	struct:DriveCapabilities
can_edit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_edit: Option<bool>,$/;"	m	struct:FileCapabilities
can_edit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_edit: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_list_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_list_children: Option<bool>,$/;"	m	struct:DriveCapabilities
can_list_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_list_children: Option<bool>,$/;"	m	struct:FileCapabilities
can_list_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_list_children: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_manage_members	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_manage_members: Option<bool>,$/;"	m	struct:DriveCapabilities
can_manage_members	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_manage_members: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_modify_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_modify_content: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_children_out_of_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_children_out_of_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_children_out_of_team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_children_out_of_team_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_children_within_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_children_within_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_children_within_team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_children_within_team_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_item_into_team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_item_into_team_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_item_out_of_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_item_out_of_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_item_out_of_team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_item_out_of_team_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_item_within_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_item_within_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_item_within_team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_item_within_team_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_move_team_drive_item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_move_team_drive_item: Option<bool>,$/;"	m	struct:FileCapabilities
can_read_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_read_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_read_revisions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_read_revisions: Option<bool>,$/;"	m	struct:DriveCapabilities
can_read_revisions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_read_revisions: Option<bool>,$/;"	m	struct:FileCapabilities
can_read_revisions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_read_revisions: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_read_team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_read_team_drive: Option<bool>,$/;"	m	struct:FileCapabilities
can_remove_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_remove_children: Option<bool>,$/;"	m	struct:FileCapabilities
can_remove_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_remove_children: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_remove_my_drive_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_remove_my_drive_parent: Option<bool>,$/;"	m	struct:FileCapabilities
can_rename	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_rename: Option<bool>,$/;"	m	struct:DriveCapabilities
can_rename	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_rename: Option<bool>,$/;"	m	struct:FileCapabilities
can_rename	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_rename: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_rename_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_rename_drive: Option<bool>,$/;"	m	struct:DriveCapabilities
can_rename_team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_rename_team_drive: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_share	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_share: Option<bool>,$/;"	m	struct:DriveCapabilities
can_share	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_share: Option<bool>,$/;"	m	struct:FileCapabilities
can_share	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_share: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_trash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_trash: Option<bool>,$/;"	m	struct:FileCapabilities
can_trash_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_trash_children: Option<bool>,$/;"	m	struct:DriveCapabilities
can_trash_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_trash_children: Option<bool>,$/;"	m	struct:FileCapabilities
can_trash_children	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_trash_children: Option<bool>,$/;"	m	struct:TeamDriveCapabilities
can_untrash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub can_untrash: Option<bool>,$/;"	m	struct:FileCapabilities
cancel_chunk_upload	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn cancel_chunk_upload(&mut self, chunk: &ContentRange) -> bool {$/;"	P	interface:Delegate
canonical_reason	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn canonical_reason(&self) -> Option<&'static str> {$/;"	P	implementation:StatusCode
cap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    cap: usize,$/;"	m	struct:BufReader
capabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub capabilities: Option<DriveCapabilities>,$/;"	m	struct:Drive
capabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub capabilities: Option<FileCapabilities>,$/;"	m	struct:File
capabilities	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub capabilities: Option<TeamDriveCapabilities>,$/;"	m	struct:TeamDrive
case_insensitive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn case_insensitive(self, ci: bool) -> Self {$/;"	P	implementation:Arg
cause	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn cause(&self) -> Option<&dyn error::Error> {$/;"	P	implementation:DecodeError
cause	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn cause(&self) -> Option<&dyn error::Error> {$/;"	P	implementation:Error
cause	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn cause(&self) -> Option<&StdError> {$/;"	P	implementation:Error
cause	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn cause(&self) -> Option<&StdError> {$/;"	P	implementation:Error
cause	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn cause(&self) -> Option<&std::error::Error> {$/;"	P	implementation:Error
cause	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn cause(&self) -> Option<&std::error::Error> {$/;"	f
cautious	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub fn cautious(hint: Option<usize>) -> usize {$/;"	f	module:size_hint
cell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/mod.rs	/^mod cell;$/;"	n
cfg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub cfg: Arc<rustls::ClientConfig>$/;"	m	struct:TlsClient
cfg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub cfg: Arc<rustls::ServerConfig>$/;"	m	struct:TlsServer
ch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    ch: Option<u8>,$/;"	m	struct:IoRead
chan_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    chan_size: usize,$/;"	m	struct:AsyncCoreBuilder
chan_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn chan_size(mut self, s: usize) -> Self {$/;"	f
chan_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn chan_size(self, s: usize) -> Self {$/;"	f
change_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub change_type: Option<String>,$/;"	m	struct:Change
changes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub changes: Option<Vec<Change>>,$/;"	m	struct:ChangeList
changes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn changes(&'a self) -> ChangeMethods<'a, C, A> {$/;"	f
channel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn channel(&self) -> mio_extras::channel::Sender<EventLoopMsg> {$/;"	P	implementation:EventLoop
channels	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn channels(&'a self) -> ChannelMethods<'a, C, A> {$/;"	f
char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de> Deserialize<'de> for char {$/;"	c
char_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    char_set: CharacterSet,$/;"	m	struct:Config
charset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    pub charset: Charset,$/;"	m	struct:ExtendedValue
charset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/mod.rs	/^mod charset;$/;"	n
check	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^        macro_rules! check {$/;"	M	method:Validator::validate_required_unless
check	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub fn check<'a, S: 'a>(stream: &'a mut S, dur: Duration) -> StaleCheck<'a, S> {$/;"	f	module:stale
check_continue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^            fn check_continue(&self, _: (&Method, &RequestUri, &Headers)) -> StatusCode {$/;"	P	implementation:tests::test_check_continue_reject::Reject
check_continue	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn check_continue(&self, _: (&Method, &RequestUri, &Headers)) -> StatusCode {$/;"	P	interface:Handler
check_for_help_and_version_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn check_for_help_and_version_char(&self, arg: char) -> ClapResult<()> {$/;"	f
check_for_help_and_version_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn check_for_help_and_version_str(&self, arg: &OsStr) -> ClapResult<()> {$/;"	f
check_io_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn check_io_error(&mut self) -> io::Result<()> {$/;"	P	implementation:TlsStream
check_partial_rename	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    fn check_partial_rename(&mut self, path: PathBuf, op: op::Op, cookie: Option<u32>) {$/;"	P	implementation:Debounce
check_recursion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^macro_rules! check_recursion {$/;"	M
check_slice_validity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^fn check_slice_validity(slice: &str) -> bool {$/;"	f
checkout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn checkout(&self, key: &Key) -> Option<PooledStreamInner<C::Stream>> {$/;"	P	implementation:Pool
chunk_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn chunk_size(&mut self) -> u64 {$/;"	P	interface:Delegate
chunked_encode_empty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn chunked_encode_empty() {$/;"	f	module:tests
chunked_encode_fast_loop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn chunked_encode_fast_loop() {$/;"	f	module:tests
chunked_encode_intermediate_fast_loop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn chunked_encode_intermediate_fast_loop() {$/;"	f	module:tests
chunked_encode_matches_normal_encode_random	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    pub fn chunked_encode_matches_normal_encode_random<S: SinkTestHelper>(sink_test_helper: &S) /;"	f	module:tests
chunked_encode_matches_normal_encode_random_string_sink	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn chunked_encode_matches_normal_encode_random_string_sink() {$/;"	f	module:tests
chunked_encode_slow_loop_only	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn chunked_encode_slow_loop_only() {$/;"	f	module:tests
chunked_encode_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn chunked_encode_str(bytes: &[u8], config: Config) -> String {$/;"	f	module:tests
chunked_encoder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    chunked_encoder: ChunkedEncoder,$/;"	m	struct:Base64Display
chunked_encoder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^mod chunked_encoder;$/;"	n
cizer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    cizer: Colorizer,$/;"	m	struct:Help
claims	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    claims: Claims,$/;"	m	struct:JWT
clap_app	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! clap_app {$/;"	M
class	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn class(&self) -> StatusClass {$/;"	P	implementation:StatusCode
classify	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub fn classify(&self) -> Category {$/;"	P	implementation:Error
clear	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:VecMap
clear	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:Headers
clear	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:Map
clear_idle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub fn clear_idle(&mut self) {$/;"	P	implementation:Pool
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub client: &'a mut hyper::client::Client,$/;"	m	struct:ResumableUploadHelper
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    client: RefCell<C>,$/;"	m	struct:DriveHub
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    client: &'a Client,$/;"	m	struct:RequestBuilder
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod client;$/;"	n
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    client: C,$/;"	m	struct:Authenticator
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    client: C,$/;"	m	struct:DeviceFlow
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    client: C,$/;"	m	struct:InstalledFlow
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    client: C,$/;"	m	struct:RefreshFlow
client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    client: C,$/;"	m	struct:ServiceAccountAccess
client_email	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub client_email: Option<String>,$/;"	m	struct:ServiceAccountKey
client_email	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub client_email: Option<String>,$/;"	m	struct:ApplicationSecret
client_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub client_id: Option<String>,$/;"	m	struct:ServiceAccountKey
client_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub client_id: String,$/;"	m	struct:ApplicationSecret
client_secret	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub client_secret: String,$/;"	m	struct:ApplicationSecret
client_x509_cert_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub client_x509_cert_url: Option<String>,$/;"	m	struct:ServiceAccountKey
client_x509_cert_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub client_x509_cert_url: Option<String>,$/;"	m	struct:ApplicationSecret
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:App
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Switched
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:ArgGroup
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn clone(&self) -> RedirectPolicy {$/;"	P	implementation:RedirectPolicy
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn clone(&self) -> OptCell<T> {$/;"	P	implementation:OptCell
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn clone(&self) -> PtrMapCell<V> {$/;"	f
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn clone(&self) -> Box<HeaderFormat + Send + Sync> {$/;"	P	implementation:Box
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn clone(&self) -> HttpStream {$/;"	P	implementation:HttpStream
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    fn clone(&self) -> StatusCode {$/;"	P	implementation:StatusCode
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:CowStrDeserializer
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:StringDeserializer
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Map
clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Box
clone_box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^        fn clone_box(&self) -> Box<HeaderFormat + Send + Sync> {$/;"	P	implementation:sealed::T
clone_box	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^        fn clone_box(&self) -> Box<HeaderFormat + Send + Sync>;$/;"	P	interface:sealed::Sealed
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn close(&mut self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:PooledStream
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        fn close(&mut self, _how: Shutdown) -> io::Result<()> {$/;"	P	implementation:no_ssl::Void
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    fn close(&mut self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:Proxied
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    pub fn close() -> Connection {$/;"	P	implementation:Connection
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn close(&mut self, _how: Shutdown) -> io::Result<()> {$/;"	P	implementation:MockStream
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn close(&mut self, _how: Shutdown) -> io::Result<()> {$/;"	P	interface:NetworkStream
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn close(&mut self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:HttpStream
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn close(&mut self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:HttpsStream
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn close(&mut self) -> ::Result<()> {$/;"	P	implementation:Listening
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn close(&mut self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:TlsStream
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn close(&mut self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:WrappedStream
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    pub fn close(mut self) -> io::Result<()> {$/;"	P	implementation:TempDir
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn close(mut self) -> io::Result<()> {$/;"	P	implementation:TempPath
close	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn close(self) -> io::Result<()> {$/;"	P	implementation:NamedTempFile
close_connection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn close_connection(&mut self) -> ::Result<()> {$/;"	P	implementation:Http11Message
close_connection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    fn close_connection(&mut self) -> ::Result<()>;$/;"	P	interface:HttpMessage
cmd_rx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    cmd_rx: Receiver<Result<PathBuf>>,$/;"	m	struct:ReadDirectoryChangesWatcher
cmd_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    cmd_tx: Sender<Result<PathBuf>>,$/;"	m	struct:ReadDirectoryChangesServer
cmn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^mod cmn;$/;"	n
cmp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    fn cmp(&self, other: &StatusCode) -> Ordering {$/;"	P	implementation:StatusCode
code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub code: u16,$/;"	m	struct:ServerError
code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    code: ErrorCode,$/;"	m	struct:ErrorImpl
col	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    col: usize,$/;"	m	struct:LineColIterator
col	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    pub fn col(&self) -> usize {$/;"	f
collect_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
collect_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn collect_str<T>(self, value: &T) -> Result<()>$/;"	f
collect_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<String>$/;"	P	implementation:MapKeySerializer
collect_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Value>$/;"	P	implementation:Serializer
color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    color: bool,$/;"	m	struct:Help
color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^macro_rules! color {$/;"	M
color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn color(&self) -> ColorWhen {$/;"	f
color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^macro_rules! color {$/;"	M
color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    color: Option<bool>,$/;"	m	struct:TermDecoratorBuilder
color_rgb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub color_rgb: Option<String>,$/;"	m	struct:AboutDriveThemes
color_rgb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub color_rgb: Option<String>,$/;"	m	struct:AboutTeamDriveThemes
color_rgb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub color_rgb: Option<String>,$/;"	m	struct:Drive
color_rgb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub color_rgb: Option<String>,$/;"	m	struct:TeamDrive
color_space	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub color_space: Option<String>,$/;"	m	struct:FileImageMediaMetadata
colored_output	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    fn colored_output() {$/;"	f	module:test
column	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    column: usize,$/;"	m	struct:ErrorImpl
column	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub fn column(&self) -> usize {$/;"	P	implementation:Error
column	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    pub column: usize,$/;"	m	struct:Position
column	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub column: u32,$/;"	m	struct:RecordLocation
column	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn column(&self) -> u32 {$/;"	P	implementation:Record
comma_needed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    comma_needed: bool,$/;"	m	struct:Serializer
comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comment_id(mut self, new_value: &str) -> CommentDeleteCall<'a, C, A> {$/;"	f
comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comment_id(mut self, new_value: &str) -> CommentGetCall<'a, C, A> {$/;"	f
comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comment_id(mut self, new_value: &str) -> CommentUpdateCall<'a, C, A> {$/;"	f
comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comment_id(mut self, new_value: &str) -> ReplyCreateCall<'a, C, A> {$/;"	f
comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comment_id(mut self, new_value: &str) -> ReplyDeleteCall<'a, C, A> {$/;"	f
comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comment_id(mut self, new_value: &str) -> ReplyGetCall<'a, C, A> {$/;"	f
comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comment_id(mut self, new_value: &str) -> ReplyListCall<'a, C, A> {$/;"	f
comment_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comment_id(mut self, new_value: &str) -> ReplyUpdateCall<'a, C, A> {$/;"	f
comments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub comments: Option<Vec<Comment>>,$/;"	m	struct:CommentList
comments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn comments(&'a self) -> CommentMethods<'a, C, A> {$/;"	f
common	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^mod common;$/;"	n
common	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^mod common;$/;"	n
compare	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn compare(&self, y: &Self) -> cmp::Ordering {$/;"	P	interface:Math
compare	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn compare(x: &[Limb], y: &[Limb]) -> cmp::Ordering {$/;"	f	module:large
complete_sem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    complete_sem: HANDLE,$/;"	m	struct:ReadData
complete_sem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    complete_sem: HANDLE,$/;"	m	struct:WatchState
completions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod completions;$/;"	n
config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    config: Config,$/;"	m	struct:ChunkedEncoder
config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    config: Config,$/;"	m	struct:DecoderReader
config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    config: Config,$/;"	m	struct:EncoderWriter
config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    config: Config2,$/;"	m	struct:PoolImpl
config_with_pad	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn config_with_pad(pad: bool) -> Config {$/;"	f	module:tests
conflicts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub conflicts: Option<Vec<&'a str>>,$/;"	m	struct:ArgGroup
conflicts_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn conflicts_with(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
conflicts_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn conflicts_with(mut self, n: &'a str) -> Self {$/;"	P	implementation:ArgGroup
conflicts_with_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn conflicts_with_all(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
conflicts_with_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn conflicts_with_all(mut self, ns: &[&'a str]) -> Self {$/;"	P	implementation:ArgGroup
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn connect(&self, host: &str, port: u16, scheme: &str) -> ::Result<PooledStream<S>> {$/;"	P	implementation:Pool
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    fn connect(&self, host: &str, port: u16, scheme: &str) -> ::Result<Self::Stream> {$/;"	f
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn connect(&self, host: &str, port: u16, scheme: &str)$/;"	P	implementation:ConnAdapter
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn connect(&self, host: &str, port: u16, scheme: &str)$/;"	P	implementation:Connector
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn connect(&self, _host: &str, _port: u16, _scheme: &str) -> ::Result<MockStream> {$/;"	P	implementation:MockConnector
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn connect(&self, host: &str, port: u16, scheme: &str) -> ::Result<HttpStream> {$/;"	P	implementation:HttpConnector
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn connect(&self, host: &str, port: u16, scheme: &str) -> ::Result<HttpStream> {$/;"	f
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn connect(&self, host: &str, port: u16, scheme: &str) -> ::Result<Self::Stream> {$/;"	P	implementation:HttpsConnector
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn connect(&self, host: &str, port: u16, scheme: &str) -> ::Result<Self::Stream>;$/;"	P	interface:NetworkConnector
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^        fn connect(&self, host: &str, port: u16, scheme: &str) -> ::hyper::Result<MockStream> {$/;"	P	implementation:tests::MockGoogleAuth
connect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^        fn connect(&self, host: &str, port: u16, scheme: &str) -> ::hyper::Result<MockStream> {$/;"	P	implementation:tests::MockGoogleRefresh
connection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod connection;$/;"	n
connection_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn connection_error(&mut self, _: &hyper::Error) -> Retry {$/;"	P	interface:AuthenticatorDelegate
connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    connector: C,$/;"	m	struct:ProxyConfig
connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    connector: C,$/;"	m	struct:Pool
connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    pub connector: C,$/;"	m	struct:Proxy
connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    connector: Connector,$/;"	m	struct:Http11Protocol
connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    connector: C,$/;"	m	struct:HttpsConnector
conns	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    conns: HashMap<Key, Vec<PooledStreamInner<S>>>,$/;"	m	struct:PoolImpl
console_secret	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn console_secret() {$/;"	f	module:tests
constrain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
construct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn construct(version: version::HttpVersion,$/;"	P	implementation:Response
consume	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    fn consume(&mut self, amt: usize) {$/;"	P	implementation:BufReader
consume_with_short_reads_and_validate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^fn consume_with_short_reads_and_validate<R: Read>($/;"	f
contains	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn contains(&self, arg: &str) -> bool {$/;"	P	implementation:ArgMatcher
contains_byte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn contains_byte(&self, b: u8) -> bool;$/;"	P	interface:OsStrExt2
contains_byte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn contains_byte(&self, byte: u8) -> bool {$/;"	P	implementation:OsStr
contains_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn contains_key(&self, key: usize) -> bool {$/;"	P	implementation:vec_map::VecMap
contains_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn contains_key(&self, key: &K) -> bool {$/;"	P	implementation:VecMap
contains_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn contains_key<Q>(&self, key: &Q) -> bool$/;"	P	implementation:Map
contains_long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn contains_long(&self, l: &str) -> bool {$/;"	f
contains_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn contains_short(&self, s: char) -> bool {$/;"	f
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub content: Option<String>,$/;"	m	struct:Comment
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub content: Option<String>,$/;"	m	struct:Reply
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        content: &'a Content<'de>,$/;"	m	struct:content::ContentRefDeserializer
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        content: Content<'de>,$/;"	m	struct:content::ContentDeserializer
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub content: Content<'de>,$/;"	m	struct:content::TaggedContent
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^mod content {$/;"	n
content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^mod content {$/;"	n
content_disposition	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod content_disposition;$/;"	n
content_encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod content_encoding;$/;"	n
content_hints	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub content_hints: Option<FileContentHints>,$/;"	m	struct:File
content_language	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod content_language;$/;"	n
content_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub content_length: u64$/;"	m	struct:ResumableUploadHelper
content_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod content_length;$/;"	n
content_range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod content_range;$/;"	n
content_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod content_type;$/;"	n
context	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    context: Option<Box<StreamContextInfo>>,$/;"	m	struct:FsEventWatcher
cookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod cookie;$/;"	n
cookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub cookie: Option<u32>,$/;"	m	struct:RawEvent
copy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn copy(&self, request: File, file_id: &str) -> FileCopyCall<'a, C, A> {$/;"	P	implementation:FileMethods
copy_and_capture	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^fn copy_and_capture<R: Read, W: Write>($/;"	f
copy_requires_writer_permission	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub copy_requires_writer_permission: Option<bool>,$/;"	m	struct:DriveRestrictions
copy_requires_writer_permission	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub copy_requires_writer_permission: Option<bool>,$/;"	m	struct:File
copy_requires_writer_permission	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub copy_requires_writer_permission: Option<bool>,$/;"	m	struct:TeamDriveRestrictions
copy_until	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^fn copy_until<R: Read, W: Write>(r: &mut R, w: &mut W, delimiter_byte: u8) -> CopyUntilResult {$/;"	f
core	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^    mod core {$/;"	n	module:lib
core	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^    mod core {$/;"	n	module:lib
core	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    core: AsyncCore,$/;"	m	struct:Async
core	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    core: AsyncCoreBuilder<D>,$/;"	m	struct:AsyncBuilder
corpora	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn corpora(mut self, new_value: &str) -> FileListCall<'a, C, A> {$/;"	f
corpus	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn corpus(mut self, new_value: &str) -> FileListCall<'a, C, A> {$/;"	f
count	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn count(mut self, new_value: i32) -> FileGenerateIdCall<'a, C, A> {$/;"	f
count	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    count: usize,$/;"	m	struct:MapDeserializer
count	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    count: usize,$/;"	m	struct:SeqDeserializer
count	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    count: usize,$/;"	m	struct:CountingWriter
count	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn count(&self) -> usize {$/;"	P	implementation:CountingWriter
counter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    counter: u64,$/;"	m	struct:WatchTimer
crate_authors	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! crate_authors {$/;"	M
crate_description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! crate_description {$/;"	M
crate_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! crate_name {$/;"	M
crate_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! crate_version {$/;"	M
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn create(&self, request: Comment, file_id: &str) -> CommentCreateCall<'a, C, A> {$/;"	P	implementation:CommentMethods
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn create(&self, request: Drive, request_id: &str) -> DriveCreateCall<'a, C, A> {$/;"	P	implementation:DriveMethods
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn create(&self, request: File) -> FileCreateCall<'a, C, A> {$/;"	P	implementation:FileMethods
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn create(&self, request: Permission, file_id: &str) -> PermissionCreateCall<'a, C, A> {$/;"	P	implementation:PermissionMethods
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn create(&self, request: Reply, file_id: &str, comment_id: &str) -> ReplyCreateCall<'a,/;"	P	implementation:ReplyMethods
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn create(&self, request: TeamDrive, request_id: &str) -> TeamdriveCreateCall<'a, C, A> /;"	P	implementation:TeamdriveMethods
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    pub fn create($/;"	P	implementation:ReadDirectoryChangesWatcher
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^pub(crate) fn create(path: PathBuf) -> io::Result<TempDir> {$/;"	f
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/other.rs	/^pub fn create(_dir: &Path) -> io::Result<File> {$/;"	f
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^pub fn create(dir: &Path) -> io::Result<File> {$/;"	f
create	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/windows.rs	/^pub fn create(dir: &Path) -> io::Result<File> {$/;"	f
create_debounced	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    pub fn create_debounced($/;"	P	implementation:ReadDirectoryChangesWatcher
create_error_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^pub fn create_error_usage<'a, 'b>($/;"	f
create_flag_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_flag_usage() {$/;"	f	module:test
create_help_and_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn create_help_and_version(&mut self) {$/;"	f
create_help_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^pub fn create_help_usage(p: &Parser, incl_reqs: bool) -> String {$/;"	f
create_helper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/util.rs	/^pub fn create_helper<F, R>($/;"	f
create_named	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/other.rs	/^pub fn create_named(_path: &Path, open_options: &mut OpenOptions) -> io::Result<File> {$/;"	f
create_named	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^pub fn create_named(path: &Path, open_options: &mut OpenOptions) -> io::Result<File> {$/;"	f
create_named	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/windows.rs	/^pub fn create_named(path: &Path, open_options: &mut OpenOptions) -> io::Result<File> {$/;"	f
create_named	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^pub(crate) fn create_named($/;"	f
create_option_usage0	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage0() {$/;"	f	module:test
create_option_usage1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage1() {$/;"	f	module:test
create_option_usage2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage2() {$/;"	f	module:test
create_option_usage3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage3() {$/;"	f	module:test
create_option_usage4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage4() {$/;"	f	module:test
create_option_usage5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage5() {$/;"	f	module:test
create_option_usage6	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage6() {$/;"	f	module:test
create_option_usage7	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage7() {$/;"	f	module:test
create_option_usage8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage8() {$/;"	f	module:test
create_option_usage9	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage9() {$/;"	f	module:test
create_option_usage_both1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both1() {$/;"	f	module:test
create_option_usage_both2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both2() {$/;"	f	module:test
create_option_usage_both3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both3() {$/;"	f	module:test
create_option_usage_both4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both4() {$/;"	f	module:test
create_option_usage_both5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both5() {$/;"	f	module:test
create_option_usage_both6	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both6() {$/;"	f	module:test
create_option_usage_both7	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both7() {$/;"	f	module:test
create_option_usage_both8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both8() {$/;"	f	module:test
create_option_usage_both_equals1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both_equals1() {$/;"	f	module:test
create_option_usage_both_equals2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both_equals2() {$/;"	f	module:test
create_option_usage_both_equals3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both_equals3() {$/;"	f	module:test
create_option_usage_both_equals4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both_equals4() {$/;"	f	module:test
create_option_usage_both_equals5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both_equals5() {$/;"	f	module:test
create_option_usage_both_equals6	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both_equals6() {$/;"	f	module:test
create_option_usage_both_equals7	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both_equals7() {$/;"	f	module:test
create_option_usage_both_equals8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_both_equals8() {$/;"	f	module:test
create_option_usage_long1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long1() {$/;"	f	module:test
create_option_usage_long10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long10() {$/;"	f	module:test
create_option_usage_long2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long2() {$/;"	f	module:test
create_option_usage_long3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long3() {$/;"	f	module:test
create_option_usage_long4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long4() {$/;"	f	module:test
create_option_usage_long5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long5() {$/;"	f	module:test
create_option_usage_long6	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long6() {$/;"	f	module:test
create_option_usage_long7	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long7() {$/;"	f	module:test
create_option_usage_long8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long8() {$/;"	f	module:test
create_option_usage_long9	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long9() {$/;"	f	module:test
create_option_usage_long_equals1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals1() {$/;"	f	module:test
create_option_usage_long_equals10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals10() {$/;"	f	module:test
create_option_usage_long_equals2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals2() {$/;"	f	module:test
create_option_usage_long_equals3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals3() {$/;"	f	module:test
create_option_usage_long_equals4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals4() {$/;"	f	module:test
create_option_usage_long_equals5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals5() {$/;"	f	module:test
create_option_usage_long_equals6	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals6() {$/;"	f	module:test
create_option_usage_long_equals7	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals7() {$/;"	f	module:test
create_option_usage_long_equals8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals8() {$/;"	f	module:test
create_option_usage_long_equals9	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_usage_long_equals9() {$/;"	f	module:test
create_option_with_vals1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_with_vals1() {$/;"	f	module:test
create_option_with_vals2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_with_vals2() {$/;"	f	module:test
create_option_with_vals3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_with_vals3() {$/;"	f	module:test
create_option_with_vals4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_with_vals4() {$/;"	f	module:test
create_option_with_vals5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_option_with_vals5() {$/;"	f	module:test
create_positional_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_positional_usage() {$/;"	f	module:test
create_positional_usage0	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn create_positional_usage0() {$/;"	f	module:test
create_smart_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^fn create_smart_usage(p: &Parser, used: &[&str]) -> String {$/;"	f
create_unix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^fn create_unix(dir: &Path) -> io::Result<File> {$/;"	f
create_unlinked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^fn create_unlinked(path: &Path) -> io::Result<File> {$/;"	f
create_usage_no_title	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^pub fn create_usage_no_title(p: &Parser, used: &[&str]) -> String {$/;"	f
create_usage_with_title	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^pub fn create_usage_with_title(p: &Parser, used: &[&str]) -> String {$/;"	f
created_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub created_time: Option<String>,$/;"	m	struct:Comment
created_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub created_time: Option<String>,$/;"	m	struct:Drive
created_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub created_time: Option<String>,$/;"	m	struct:File
created_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub created_time: Option<String>,$/;"	m	struct:Reply
created_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub created_time: Option<String>,$/;"	m	struct:TeamDrive
crit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! crit($/;"	M
cs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^macro_rules! cs($/;"	M
cstr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^pub fn cstr(path: &Path) -> io::Result<CString> {$/;"	f
cur_idx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    cur_idx: Cell<usize>,$/;"	m	struct:Parser
current_part	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    current_part: Option<(Cursor<Vec<u8>>, &'a mut dyn Read)>,$/;"	m	struct:MultiPartReader
custom	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	P	implementation:Error
custom	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn custom<T>(_: T) -> Self$/;"	P	implementation:Error
custom	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn custom<T: Display>(_msg: T) -> Self {$/;"	P	implementation:Error
custom	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    fn custom<T: Display>(msg: T) -> Error {$/;"	P	implementation:Error
custom	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn custom<$/;"	P	implementation:AsyncCore
cvt_err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^pub fn cvt_err(result: Result<usize, syscall::Error>) -> io::Result<usize> {$/;"	f
cvt_err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^pub fn cvt_err(result: c_int) -> io::Result<c_int> {$/;"	f
data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    data: VecMap<HeaderName, Item>,$/;"	m	struct:Headers
data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    data: ReadData,$/;"	m	struct:ReadDirectoryRequest
data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bignum.rs	/^    fn data(&self) -> &Vec<Limb> {$/;"	P	implementation:Bigint
data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn data(&self) -> &Vec<Limb>;$/;"	P	interface:Math
data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    data: &'a str,$/;"	m	struct:StrRead
data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    data: Cow<'static, str>,$/;"	m	struct:Key
data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    data: Cow<'static, str>$/;"	m	struct:Key
data_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bignum.rs	/^    fn data_mut(&mut self) -> &mut Vec<Limb> {$/;"	P	implementation:Bigint
data_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn data_mut(&mut self) -> &mut Vec<Limb>;$/;"	P	interface:Math
date	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod date;$/;"	n
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^pub mod de;$/;"	n
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/mod.rs	/^pub mod de;$/;"	n
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:MapAccess
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:MapKey
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:SeqAccess
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:UnitVariantAccess
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:VariantAccess
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    de: Deserializer<R>,$/;"	m	struct:StreamDeserializer
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^pub mod de;$/;"	n
de	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^mod de;$/;"	n
debounce	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^mod debounce;$/;"	n
debug	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^    macro_rules! debug {$/;"	M	module:debug_macros
debug	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! debug($/;"	M
debug_asserts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn debug_asserts(&self, a: &Arg) -> bool {$/;"	f
debug_macros	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^mod debug_macros {$/;"	n
debugln	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^    macro_rules! debugln {$/;"	M	module:debug_macros
declare_error_trait	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
declare_error_trait	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
decode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^pub fn decode<T: AsRef<[u8]>>(input: T) -> Result<Vec<u8>, DecodeError> {$/;"	f
decode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^mod decode;$/;"	n
decode_allow_trailing_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    decode_allow_trailing_bits: bool,$/;"	m	struct:Config
decode_allow_trailing_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    pub fn decode_allow_trailing_bits(self, allow: bool) -> Config {$/;"	P	implementation:Config
decode_chunk_precise_writes_only_6_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn decode_chunk_precise_writes_only_6_bytes() {$/;"	f	module:tests
decode_chunk_writes_8_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn decode_chunk_writes_8_bytes() {$/;"	f	module:tests
decode_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^pub fn decode_config<T: AsRef<[u8]>>(input: T, config: Config) -> Result<Vec<u8>, DecodeError> {$/;"	f
decode_config_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^pub fn decode_config_buf<T: AsRef<[u8]>>($/;"	f
decode_config_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^pub fn decode_config_slice<T: AsRef<[u8]>>($/;"	f
decode_helper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^fn decode_helper($/;"	f
decode_hex_escape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	P	implementation:SliceRead
decode_hex_escape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	P	implementation:StrRead
decode_hex_escape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	f
decode_hex_escape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16>;$/;"	P	interface:Read
decode_hex_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^fn decode_hex_val(val: u8) -> Option<u16> {$/;"	f
decode_imap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn decode_imap() {$/;"	f	module:tests
decode_into_nonempty_vec_doesnt_clobber_existing_prefix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn decode_into_nonempty_vec_doesnt_clobber_existing_prefix() {$/;"	f	module:tests
decode_into_slice_doesnt_clobber_existing_prefix_or_suffix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn decode_into_slice_doesnt_clobber_existing_prefix_or_suffix() {$/;"	f	module:tests
decode_into_slice_fits_in_precisely_sized_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn decode_into_slice_fits_in_precisely_sized_slice() {$/;"	f	module:tests
decode_rsa_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^fn decode_rsa_key(pem_pkcs8: &str) -> Result<PKey<Private>, Box<error::Error>> {$/;"	f
decode_rsa_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^fn decode_rsa_key(pem_pkcs8: &str) -> Result<PrivateKey, Box<error::Error>> {$/;"	f
decode_table	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    fn decode_table(self) -> &'static [u8; 256] {$/;"	P	implementation:CharacterSet
decode_to_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    fn decode_to_buf(&mut self, num_bytes: usize, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:DecoderReader
decoded_buffer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    decoded_buffer: [u8; 3],$/;"	m	struct:DecoderReader
decoded_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    decoded_len: usize,$/;"	m	struct:DecoderReader
decoded_offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    decoded_offset: usize,$/;"	m	struct:DecoderReader
decoder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/mod.rs	/^mod decoder;$/;"	n
decoder_tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/mod.rs	/^mod decoder_tests;$/;"	n
deconstruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub fn deconstruct(self) -> (SocketAddr, Method, Headers,$/;"	P	implementation:Request
deconstruct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn deconstruct(self) -> (version::HttpVersion, HttpWriter<&'a mut (Write + 'a)>,$/;"	P	implementation:Response
decorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    decorator: &'a mut dyn RecordDecorator,$/;"	m	struct:CompactFormatSerializer
decorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    decorator: &'a mut dyn RecordDecorator,$/;"	m	struct:Serializer
decorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    decorator: D,$/;"	m	struct:CompactFormat
decorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    decorator: D,$/;"	m	struct:CompactFormatBuilder
decorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    decorator: D,$/;"	m	struct:FullFormat
decorator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    decorator: D,$/;"	m	struct:FullFormatBuilder
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    fn default() -> Self {$/;"	P	implementation:AppFlags
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^    fn default() -> Self {$/;"	P	implementation:Switched
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    fn default() -> Self {$/;"	P	implementation:Valued
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgMatcher
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgMatches
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Indices
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:OsValues
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Values
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/matched_arg.rs	/^    fn default() -> Self {$/;"	P	implementation:MatchedArg
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgFlags
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    fn default() -> Self {$/;"	P	implementation:Colorizer
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    fn default() -> Scope {$/;"	P	implementation:Scope
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn default() -> Client { Client::new() }$/;"	P	implementation:Client
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn default() -> RedirectPolicy {$/;"	P	implementation:RedirectPolicy
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn default() -> Config {$/;"	P	implementation:Config
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn default() -> Quality {$/;"	P	implementation:Quality
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn default() -> Timeouts {$/;"	P	implementation:Timeouts
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bignum.rs	/^    fn default() -> Self {$/;"	P	implementation:Bigint
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn default() -> Self {$/;"	P	implementation:Map
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn default() -> Self {$/;"	P	implementation:Box
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    fn default() -> Value {$/;"	P	implementation:Value
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn default() -> Key {$/;"	P	implementation:Key
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn default() -> Key {$/;"	P	implementation:Key
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn default<$/;"	P	implementation:Async
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^        fn default() -> MockGoogleAuth {$/;"	P	implementation:tests::MockGoogleAuth
default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^        fn default() -> MockGoogleRefresh {$/;"	P	implementation:tests::MockGoogleRefresh
default_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn default_code(&self) -> StatusCode {$/;"	P	implementation:StatusClass
default_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	P	implementation:App
default_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	f
default_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn default_val(&self) -> Option<&'e OsStr>;$/;"	P	interface:AnyArg
default_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	P	implementation:FlagBuilder
default_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	P	implementation:OptBuilder
default_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn default_val(&self) -> Option<&'e OsStr> {$/;"	P	implementation:PosBuilder
default_val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub default_val: Option<&'b OsStr>,$/;"	m	struct:Valued
default_vals_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	P	implementation:App
default_vals_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	f
default_vals_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>>;$/;"	P	interface:AnyArg
default_vals_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	P	implementation:FlagBuilder
default_vals_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	P	implementation:OptBuilder
default_vals_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn default_vals_ifs(&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>> {$/;"	P	implementation:PosBuilder
default_vals_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub default_vals_ifs: Option<VecMap<(&'a str, Option<&'b OsStr>, &'b OsStr)>>,$/;"	m	struct:Valued
default_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn default_value(self, val: &'a str) -> Self {$/;"	P	implementation:Arg
default_value_if	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn default_value_if(self, arg: &'a str, val: Option<&'b str>, default: &'b str) -> Self /;"	P	implementation:Arg
default_value_if_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn default_value_if_os($/;"	P	implementation:Arg
default_value_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn default_value_ifs(mut self, ifs: &[(&'a str, Option<&'b str>, &'b str)]) -> Self {$/;"	P	implementation:Arg
default_value_ifs_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn default_value_ifs_os(mut self, ifs: &[(&'a str, Option<&'b OsStr>, &'b OsStr)]) -> Se/;"	P	implementation:Arg
default_value_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn default_value_os(mut self, val: &'a OsStr) -> Self {$/;"	P	implementation:Arg
del	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    del: &'a str$/;"	m	struct:SplitAsciiUnquoted
delay	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    delay: Duration,$/;"	m	struct:WatchTimer
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^    delegate: &'b mut R,$/;"	m	struct:RandomShortRead
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub delegate: &'a mut dyn Delegate,$/;"	m	struct:ResumableUploadHelper
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> AboutGetCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ChangeGetStartPageTokenCall<'a/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ChangeListCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ChangeWatchCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ChannelStopCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> CommentCreateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> CommentDeleteCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> CommentGetCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> CommentListCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> CommentUpdateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> DriveCreateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> DriveDeleteCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> DriveGetCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> DriveHideCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> DriveListCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> DriveUnhideCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> DriveUpdateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileCopyCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileCreateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileDeleteCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileEmptyTrashCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileExportCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileGenerateIdCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileGetCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileListCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileUpdateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> FileWatchCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> PermissionCreateCall<'a, C, A>/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> PermissionDeleteCall<'a, C, A>/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> PermissionGetCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> PermissionListCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> PermissionUpdateCall<'a, C, A>/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ReplyCreateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ReplyDeleteCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ReplyGetCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ReplyListCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> ReplyUpdateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> RevisionDeleteCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> RevisionGetCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> RevisionListCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> RevisionUpdateCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> TeamdriveCreateCall<'a, C, A> /;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> TeamdriveDeleteCall<'a, C, A> /;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> TeamdriveGetCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> TeamdriveListCall<'a, C, A> {$/;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delegate(mut self, new_value: &'a mut dyn Delegate) -> TeamdriveUpdateCall<'a, C, A> /;"	f
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    delegate: S,$/;"	m	struct:TaggedSerializer
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    delegate: SliceRead<'a>,$/;"	m	struct:StrRead
delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    delegate: D,$/;"	m	struct:Authenticator
delegate_iterator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^macro_rules! delegate_iterator {$/;"	M
delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delete(&self, drive_id: &str) -> DriveDeleteCall<'a, C, A> {$/;"	P	implementation:DriveMethods
delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delete(&self, file_id: &str) -> FileDeleteCall<'a, C, A> {$/;"	P	implementation:FileMethods
delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delete(&self, file_id: &str, comment_id: &str) -> CommentDeleteCall<'a, C, A> {$/;"	P	implementation:CommentMethods
delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delete(&self, file_id: &str, comment_id: &str, reply_id: &str) -> ReplyDeleteCall<'a,/;"	P	implementation:ReplyMethods
delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delete(&self, file_id: &str, permission_id: &str) -> PermissionDeleteCall<'a, C, A> {$/;"	P	implementation:PermissionMethods
delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delete(&self, file_id: &str, revision_id: &str) -> RevisionDeleteCall<'a, C, A> {$/;"	P	implementation:RevisionMethods
delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn delete(&self, team_drive_id: &str) -> TeamdriveDeleteCall<'a, C, A> {$/;"	P	implementation:TeamdriveMethods
delete	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn delete<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub deleted: Option<bool>,$/;"	m	struct:Comment
deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub deleted: Option<bool>,$/;"	m	struct:Permission
deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub deleted: Option<bool>,$/;"	m	struct:Reply
denied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn denied(&mut self) {}$/;"	P	interface:AuthenticatorDelegate
deref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn deref<'a>(&'a self) -> &'a Mime { &self.0 }$/;"	P	implementation:XUploadContentType
deref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn deref(&self) -> &S {$/;"	P	implementation:Authorization
deref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn deref(&self) -> &Option<T> {$/;"	P	implementation:OptCell
deref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn deref(&self) -> &Cow<'static, str> {$/;"	P	implementation:CowStr
deref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn deref(&self) -> &Path {$/;"	P	implementation:TempPath
deref_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	M
deref_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn deref_mut<'a>(&'a mut self) -> &'a mut Mime { &mut self.0 }$/;"	P	implementation:XUploadContentType
deref_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn deref_mut(&mut self) -> &mut S {$/;"	P	implementation:Authorization
deref_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn deref_mut(&mut self) -> &mut Cow<'static, str> {$/;"	P	implementation:CowStr
derive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod derive {$/;"	n
derive_display_order	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn derive_display_order(&mut self) {$/;"	f
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:DecodeError
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub description: Option<String>,$/;"	m	struct:File
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn description(&self) -> &str {$/;"	f
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:NullError
description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:StringError
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	P	implementation:IgnoredAny
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration::deserialize::Field
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime::deserialize::Field
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:deserialize::Field
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:range::Field
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:CString
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:IpAddr
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:OsString
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Path
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PathBuf
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PhantomData
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SocketAddr
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:String
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:T
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:bool
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:char
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:str
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:u8
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	interface:Deserialize
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:DeserializeSeed
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:private
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:content::Content
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagContentOtherFieldVisitor
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentFieldVisitor
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:content
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Map
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Number, D::Error>$/;"	P	implementation:Number
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberFromString, D::Error>$/;"	P	implementation:NumberFromString
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberKey, D::Error>$/;"	P	implementation:NumberKey
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<RawKey, D::Error>$/;"	P	implementation:RawKey
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Box
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:RawValue
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:BoxedFromString
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:ReferenceFromString
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Value, D::Error>$/;"	P	implementation:Value
deserialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:KeyClassifier
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:NumberFieldDeserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^macro_rules! deserialize_any {$/;"	M
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:RawKeyDeserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:SeqDeserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:SeqRefDeserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:BorrowedCowStrDeserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:MapDeserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:MapKeyDeserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:MapRefDeserializer
deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	M
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	P	interface:Deserializer
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f	module:content
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:Deserializer
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:BorrowedCowStrDeserializer
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:MapKeyDeserializer
deserialize_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:Value
deserialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_identifier	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_identifier	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_ignored_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_ignored_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_ignored_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_ignored_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_in_place	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	implementation:String
deserialize_in_place	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	interface:Deserialize
deserialize_integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_integer_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^macro_rules! deserialize_integer_key {$/;"	M
deserialize_integer_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^macro_rules! deserialize_integer_key {$/;"	M
deserialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	interface:Deserializer
deserialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f	module:content
deserialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Er/;"	f
deserialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, name: &str, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:MapKeyDeserializer
deserialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:Value
deserialize_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_number<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^macro_rules! deserialize_number {$/;"	M
deserialize_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^macro_rules! deserialize_number {$/;"	M
deserialize_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^macro_rules! deserialize_number {$/;"	M
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:MapKeyDeserializer
deserialize_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_other	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_raw_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_raw_value<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	P	interface:Deserializer
deserialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f	module:content
deserialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:Deserializer
deserialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:Value
deserialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	interface:Deserializer
deserialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f	module:content
deserialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	implementation:Deserializer
deserialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	implementation:Value
deserialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	P	interface:Deserializer
deserialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f	module:content
deserialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value, Err/;"	P	implementation:Value
deserialize_value_ref_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^macro_rules! deserialize_value_ref_number {$/;"	M
detect_invalid_last_symbol_every_possible_three_symbols	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn detect_invalid_last_symbol_every_possible_three_symbols() {$/;"	f	module:tests
detect_invalid_last_symbol_every_possible_two_symbols	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn detect_invalid_last_symbol_every_possible_two_symbols() {$/;"	f	module:tests
detect_invalid_last_symbol_one_byte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn detect_invalid_last_symbol_one_byte() {$/;"	f	module:tests
detect_invalid_last_symbol_two_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn detect_invalid_last_symbol_two_bytes() {$/;"	f	module:tests
device	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod device;$/;"	n
device_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^                    device_code: String,$/;"	m	struct:request_code::JsonData
device_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    device_code: String,$/;"	m	struct:DeviceFlow
device_code_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    device_code_url: String,$/;"	m	struct:DeviceFlow
did_you_mean	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^pub fn did_you_mean<'a, T: ?Sized, I>(_: &str, _: I) -> Option<&'a str>$/;"	f
did_you_mean	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^pub fn did_you_mean<'a, T: ?Sized, I>(v: &str, possible_values: I) -> Option<&'a str>$/;"	f
did_you_mean_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn did_you_mean_error($/;"	f
did_you_mean_flag_suffix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^pub fn did_you_mean_flag_suffix<'z, T, I>($/;"	f
did_you_mean_value_suffix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^pub fn did_you_mean_value_suffix<'z, T, I>(arg: &str, values: I) -> (String, Option<&'z str>)$/;"	f
digit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod digit;$/;"	n
dimensions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn dimensions() -> Option<(usize, usize)> {$/;"	f	module:term_size
dir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    dir: PathBuf,          \/\/ directory that is being watched$/;"	m	struct:ReadData
dir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^mod dir;$/;"	n
dir_handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    dir_handle: HANDLE,$/;"	m	struct:WatchState
disable_recursion_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    disable_recursion_limit: bool,$/;"	m	struct:Deserializer
disable_recursion_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    pub fn disable_recursion_limit(&mut self) {$/;"	P	implementation:Deserializer
discard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn discard(&mut self) {$/;"	P	implementation:SliceRead
discard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn discard(&mut self) {$/;"	P	implementation:StrRead
discard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn discard(&mut self) {$/;"	f
discard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn discard(&mut self);$/;"	P	interface:Read
disp_ord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn disp_ord(&self) -> usize {$/;"	P	implementation:App
disp_ord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub disp_ord: usize,$/;"	m	struct:AppMeta
disp_ord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn disp_ord(&self) -> usize;$/;"	P	interface:DispOrder
disp_ord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn disp_ord(&self) -> usize {$/;"	P	implementation:FlagBuilder
disp_ord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn disp_ord(&self) -> usize {$/;"	P	implementation:OptBuilder
disp_ord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn disp_ord(&self) -> usize {$/;"	P	implementation:PosBuilder
disp_ord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^    pub disp_ord: usize,$/;"	m	struct:Switched
display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^pub mod display;$/;"	n
display_encode_matches_normal_encode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    fn display_encode_matches_normal_encode() {$/;"	f	module:tests
display_formatted_errors	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^fn display_formatted_errors() {$/;"	f
display_mult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn display_mult() {$/;"	f	module:test
display_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub display_name: Option<String>,$/;"	m	struct:Permission
display_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub display_name: Option<String>,$/;"	m	struct:User
display_order	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	P	implementation:App
display_order	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	P	implementation:Arg
display_required	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn display_required() {$/;"	f	module:test
display_val_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn display_val_names() {$/;"	f	module:test
display_val_names_req	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn display_val_names_req() {$/;"	f	module:test
disposition	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    pub disposition: DispositionType,$/;"	m	struct:ContentDisposition
do_encode_random_config_matches_normal_encode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn do_encode_random_config_matches_normal_encode(max_input_len: usize) {$/;"	f
do_installed_flow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    fn do_installed_flow(&mut self, scopes: &Vec<&str>) -> Result<Token, Box<Error>> {$/;"	f
do_x	/home/alan/local-devel/pi_drive_sync/src/upload_handler.rs	/^fn do_x() -> bool {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    fn doit<RS>(mut self, mut reader: RS, reader_mime_type: mime::Mime, protocol: &'static str) /;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, About)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, ChangeList)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, Channel)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, Comment)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, CommentList)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, Drive)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, DriveList)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, File)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, FileList)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, GeneratedIds)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, Permission)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, PermissionList)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, Reply)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, ReplyList)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, Revision)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, RevisionList)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, StartPageToken)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, TeamDrive)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<(hyper::client::Response, TeamDriveList)> {$/;"	f
doit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit(mut self) -> Result<hyper::client::Response> {$/;"	f
doit_without_upload	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn doit_without_upload(mut self) -> Result<(hyper::client::Response, File)> {$/;"	f
domain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub domain: String,$/;"	m	struct:ServerMessage
domain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub domain: Option<String>,$/;"	m	struct:Permission
domain_users_only	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub domain_users_only: Option<bool>,$/;"	m	struct:DriveRestrictions
domain_users_only	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub domain_users_only: Option<bool>,$/;"	m	struct:TeamDriveRestrictions
done	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    done: Receiver<()>,$/;"	m	struct:StreamContextInfo
done	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    done: bool,$/;"	m	struct:PushFnValueSerializer
downard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^fn downard(_: &mut ExtendedFloat, _: bool) {}$/;"	f
downcast	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub fn downcast<T: Any>(self: Box<HttpMessage>)$/;"	P	implementation:HttpMessage
downcast	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn downcast<T: Any>(self: Box<NetworkStream + Send>)$/;"	P	implementation:Send
downcast	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn downcast<T: Any>(self: Box<NetworkStream>)$/;"	P	implementation:NetworkStream
downcast_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub fn downcast_mut<T: Any>(&mut self) -> Option<&mut T> {$/;"	P	implementation:HttpMessage
downcast_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn downcast_mut<T: Any>(&mut self) -> Option<&mut T> {$/;"	P	implementation:NetworkStream
downcast_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn downcast_mut<T: Any>(&mut self) -> Option<&mut T> {$/;"	P	implementation:Send
downcast_mut_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    unsafe fn downcast_mut_unchecked<T: 'static>(&mut self) -> &mut T {$/;"	P	implementation:Sync
downcast_mut_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    unsafe fn downcast_mut_unchecked<T: 'static>(&mut self) -> &mut T {$/;"	P	implementation:HttpMessage
downcast_mut_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn downcast_mut_unchecked<T: 'static>(&mut self) -> &mut T {$/;"	P	implementation:NetworkStream
downcast_mut_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn downcast_mut_unchecked<T: 'static>(&mut self) -> &mut T {$/;"	P	implementation:Send
downcast_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub fn downcast_ref<T: Any>(&self) -> Option<&T> {$/;"	P	implementation:HttpMessage
downcast_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn downcast_ref<T: Any>(&self) -> Option<&T> {$/;"	P	implementation:NetworkStream
downcast_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn downcast_ref<T: Any>(&self) -> Option<&T> {$/;"	P	implementation:Send
downcast_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub fn downcast_ref<T: NetworkStream>(&self) -> Option<&T> {$/;"	P	implementation:Request
downcast_ref_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    unsafe fn downcast_ref_unchecked<T: 'static>(&self) -> &T {$/;"	P	implementation:Sync
downcast_ref_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    unsafe fn downcast_ref_unchecked<T: 'static>(&self) -> &T {$/;"	P	implementation:HttpMessage
downcast_ref_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn downcast_ref_unchecked<T: 'static>(&self) -> &T {$/;"	P	implementation:NetworkStream
downcast_ref_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn downcast_ref_unchecked<T: 'static>(&self) -> &T {$/;"	P	implementation:Send
downcast_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    unsafe fn downcast_unchecked<T: 'static>(self: Box<HttpMessage>) -> Box<T>  {$/;"	P	implementation:HttpMessage
downcast_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn downcast_unchecked<T: 'static>(self: Box<NetworkStream + Send>) -> Box<T>  {$/;"	P	implementation:Send
downcast_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn downcast_unchecked<T: 'static>(self: Box<NetworkStream>) -> Box<T>  {$/;"	P	implementation:NetworkStream
drain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    drain: D,$/;"	m	struct:IgnoreResult
drain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    drain: D,$/;"	m	struct:Logger
drain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    drain: D,$/;"	m	struct:MapError
drain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    drain: D,$/;"	m	struct:AsyncCoreBuilder
drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub drive: Option<Drive>,$/;"	m	struct:Change
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub drive_id: Option<String>,$/;"	m	struct:Change
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub drive_id: Option<String>,$/;"	m	struct:File
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> ChangeGetStartPageTokenCall<'a, C, A> {$/;"	f
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> ChangeListCall<'a, C, A> {$/;"	f
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> ChangeWatchCall<'a, C, A> {$/;"	f
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> DriveDeleteCall<'a, C, A> {$/;"	f
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> DriveGetCall<'a, C, A> {$/;"	f
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> DriveHideCall<'a, C, A> {$/;"	f
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> DriveUnhideCall<'a, C, A> {$/;"	f
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> DriveUpdateCall<'a, C, A> {$/;"	f
drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drive_id(mut self, new_value: &str) -> FileListCall<'a, C, A> {$/;"	f
drive_members_only	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub drive_members_only: Option<bool>,$/;"	m	struct:DriveRestrictions
drive_themes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub drive_themes: Option<Vec<AboutDriveThemes>>,$/;"	m	struct:About
drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub drives: Option<Vec<Drive>>,$/;"	m	struct:DriveList
drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn drives(&'a self) -> DriveMethods<'a, C, A> {$/;"	f
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    fn drop(&mut self) {$/;"	P	implementation:EncoderWriter
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn drop(&mut self) {$/;"	P	implementation:PooledStream
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Response
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Sentinel
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Listening
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Response
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    fn drop(&mut self) {$/;"	P	implementation:WatchTimer
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn drop(&mut self) {$/;"	P	implementation:FsEventWatcher
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn drop(&mut self) {$/;"	P	implementation:INotifyWatcher
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn drop(&mut self) {$/;"	P	implementation:PollWatcher
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ReadDirectoryChangesWatcher
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:PushFnValueSerializer
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Async
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AsyncCore
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AsyncGuard
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Serializer
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TermRecordDecorator
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TempDir
drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TempPath
drop_calls_finish_for_you	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn drop_calls_finish_for_you() {$/;"	f
dropped	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    dropped: AtomicUsize,$/;"	m	struct:Async
dump_to_file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    pub fn dump_to_file(&mut self) -> Result<(), io::Error> {$/;"	P	implementation:DiskTokenStorage
duration	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^        duration: Duration,$/;"	m	struct:stale::StaleCheck
duration_millis	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub duration_millis: Option<String>,$/;"	m	struct:FileVideoMediaMetadata
dynamic	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/mod.rs	/^mod dynamic;$/;"	n
eat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^fn eat<R: Read>(rdr: &mut R, bytes: &[u8]) -> io::Result<()> {$/;"	f
eat_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn eat_char(&mut self) {$/;"	P	implementation:Deserializer
elements	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeSeq
elements	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeTuple
elvish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^mod elvish;$/;"	n
email_address	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub email_address: Option<String>,$/;"	m	struct:Permission
email_address	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub email_address: Option<String>,$/;"	m	struct:User
email_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn email_message(mut self, new_value: &str) -> PermissionCreateCall<'a, C, A> {$/;"	f
emit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn emit<'b, S: 'b + Value>(mut self, s: S) -> Result {$/;"	P	implementation:PushFnValueSerializer
emit_arguments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn emit_arguments(&mut self, key: Key, val: &fmt::Arguments) -> Result {$/;"	P	implementation:SerializerForward
emit_arguments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn emit_arguments(&mut self, key: Key, val: &fmt::Arguments) -> Result {$/;"	f
emit_arguments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn emit_arguments(&mut self, key: Key, val: &fmt::Arguments) -> Result;$/;"	P	interface:Serializer
emit_arguments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_arguments($/;"	P	implementation:ToSendSerializer
emit_arguments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_arguments($/;"	P	implementation:CompactFormatSerializer
emit_arguments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_arguments($/;"	P	implementation:Serializer
emit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_bool(&mut self, key: Key, val: bool) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_bool(&mut self, key: Key, val: bool) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_bool(&mut self, key: Key, val: bool) -> slog::Result {$/;"	P	implementation:Serializer
emit_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_char(&mut self, key: Key, val: char) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_char(&mut self, key: Key, val: char) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_char(&mut self, key: Key, val: char) -> slog::Result {$/;"	P	implementation:Serializer
emit_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_f32(&mut self, key: Key, val: f32) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_f32(&mut self, key: Key, val: f32) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_f32(&mut self, key: Key, val: f32) -> slog::Result {$/;"	P	implementation:Serializer
emit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_f64(&mut self, key: Key, val: f64) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_f64(&mut self, key: Key, val: f64) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_f64(&mut self, key: Key, val: f64) -> slog::Result {$/;"	P	implementation:Serializer
emit_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_i16(&mut self, key: Key, val: i16) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_i16(&mut self, key: Key, val: i16) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_i16(&mut self, key: Key, val: i16) -> slog::Result {$/;"	P	implementation:Serializer
emit_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_i32(&mut self, key: Key, val: i32) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_i32(&mut self, key: Key, val: i32) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_i32(&mut self, key: Key, val: i32) -> slog::Result {$/;"	P	implementation:Serializer
emit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_i64(&mut self, key: Key, val: i64) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_i64(&mut self, key: Key, val: i64) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_i64(&mut self, key: Key, val: i64) -> slog::Result {$/;"	P	implementation:Serializer
emit_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_i8(&mut self, key: Key, val: i8) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_i8(&mut self, key: Key, val: i8) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_i8(&mut self, key: Key, val: i8) -> slog::Result {$/;"	P	implementation:Serializer
emit_isize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_isize(&mut self, key: Key, val: isize) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_isize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_isize(&mut self, key: Key, val: isize) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_isize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_isize(&mut self, key: Key, val: isize) -> slog::Result {$/;"	P	implementation:Serializer
emit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn emit_none(&mut self, key: Key) -> Result {$/;"	P	interface:Serializer
emit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_none(&mut self, key: Key) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_none(&mut self, key: Key) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_none(&mut self, key: Key) -> slog::Result {$/;"	P	implementation:Serializer
emit_serde	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn emit_serde(&mut self, _key: Key, _value: &SerdeValue) -> Result {$/;"	P	implementation:SerializerForward
emit_serde	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn emit_serde(&mut self, key: Key, value: &SerdeValue) -> Result {$/;"	P	interface:Serializer
emit_serde	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_serde(&mut self, key: Key, value: &slog::SerdeValue) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_serde	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_serde($/;"	P	implementation:Serializer
emit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_str(&mut self, key: Key, val: &str) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_str(&mut self, key: Key, val: &str) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_str(&mut self, key: Key, val: &str) -> slog::Result {$/;"	P	implementation:Serializer
emit_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_u16(&mut self, key: Key, val: u16) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_u16(&mut self, key: Key, val: u16) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_u16(&mut self, key: Key, val: u16) -> slog::Result {$/;"	P	implementation:Serializer
emit_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_u32(&mut self, key: Key, val: u32) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_u32(&mut self, key: Key, val: u32) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_u32(&mut self, key: Key, val: u32) -> slog::Result {$/;"	P	implementation:Serializer
emit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_u64(&mut self, key: Key, val: u64) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_u64(&mut self, key: Key, val: u64) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_u64(&mut self, key: Key, val: u64) -> slog::Result {$/;"	P	implementation:Serializer
emit_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_u8(&mut self, key: Key, val: u8) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_u8(&mut self, key: Key, val: u8) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_u8(&mut self, key: Key, val: u8) -> slog::Result {$/;"	P	implementation:Serializer
emit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn emit_unit(&mut self, key: Key) -> Result {$/;"	P	interface:Serializer
emit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_unit(&mut self, key: Key) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_unit(&mut self, key: Key) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_unit(&mut self, key: Key) -> slog::Result {$/;"	P	implementation:Serializer
emit_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn emit_usize(&mut self, key: Key, val: usize) -> slog::Result {$/;"	P	implementation:ToSendSerializer
emit_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_usize(&mut self, key: Key, val: usize) -> slog::Result {$/;"	P	implementation:CompactFormatSerializer
emit_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn emit_usize(&mut self, key: Key, val: usize) -> slog::Result {$/;"	P	implementation:Serializer
empty_trash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn empty_trash(&self) -> FileEmptyTrashCall<'a, C, A> {$/;"	P	implementation:FileMethods
empty_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn empty_value<U>(arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
empty_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn empty_values(mut self, ev: bool) -> Self {$/;"	P	implementation:Arg
encode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    pub fn encode<S: Sink>(&self, bytes: &[u8], sink: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:ChunkedEncoder
encode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^pub fn encode<T: AsRef<[u8]>>(input: T) -> String {$/;"	f
encode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^mod encode;$/;"	n
encode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
encode_1_2_3_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_1_2_3_bytes() {$/;"	f
encode_base64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^fn encode_base64<T: AsRef<[u8]>>(s: T) -> String {$/;"	f
encode_claims	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn encode_claims(&self) -> String {$/;"	P	implementation:JWT
encode_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^pub fn encode_config<T: AsRef<[u8]>>(input: T, config: Config) -> String {$/;"	f
encode_config_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^pub fn encode_config_buf<T: AsRef<[u8]>>(input: T, config: Config, buf: &mut String) {$/;"	f
encode_config_buf_into_nonempty_buffer_doesnt_clobber_prefix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encode_config_buf_into_nonempty_buffer_doesnt_clobber_prefix() {$/;"	f	module:tests
encode_config_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^pub fn encode_config_slice<T: AsRef<[u8]>>(input: T, config: Config, output: &mut [u8]) -> usize/;"	f
encode_config_slice_fits_into_precisely_sized_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encode_config_slice_fits_into_precisely_sized_slice() {$/;"	f	module:tests
encode_config_slice_into_nonempty_buffer_doesnt_clobber_suffix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encode_config_slice_into_nonempty_buffer_doesnt_clobber_suffix() {$/;"	f	module:tests
encode_imap	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encode_imap() {$/;"	f	module:tests
encode_nine_bytes_two_writes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_nine_bytes_two_writes() {$/;"	f
encode_one_then_five_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_one_then_five_bytes() {$/;"	f
encode_one_then_two_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_one_then_two_bytes() {$/;"	f
encode_random_config_matches_normal_encode_reasonable_input_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_random_config_matches_normal_encode_reasonable_input_len() {$/;"	f
encode_random_config_matches_normal_encode_tiny_input_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_random_config_matches_normal_encode_tiny_input_len() {$/;"	f
encode_table	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    fn encode_table(self) -> &'static [u8; 64] {$/;"	P	implementation:CharacterSet
encode_three_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_three_bytes() {$/;"	f
encode_to_slice_random_valid_utf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encode_to_slice_random_valid_utf8() {$/;"	f	module:tests
encode_to_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^        fn encode_to_string(&self, config: Config, bytes: &[u8]) -> String {$/;"	P	implementation:tests::StringSinkTestHelper
encode_to_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^        fn encode_to_string(&self, config: Config, bytes: &[u8]) -> String;$/;"	P	interface:tests::SinkTestHelper
encode_to_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^        fn encode_to_string(&self, config: Config, bytes: &[u8]) -> String {$/;"	P	implementation:tests::DisplaySinkTestHelper
encode_with_padding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^fn encode_with_padding(input: &[u8], config: Config, encoded_size: usize, output: &mut [u8]) {$/;"	f
encode_with_padding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_with_padding() {$/;"	f
encode_with_padding_multiple_writes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn encode_with_padding_multiple_writes() {$/;"	f
encode_with_padding_random_valid_utf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encode_with_padding_random_valid_utf8() {$/;"	f	module:tests
encoded_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^pub fn encoded_size(bytes_len: usize, config: Config) -> Option<usize> {$/;"	f
encoded_size_correct_no_pad	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encoded_size_correct_no_pad() {$/;"	f	module:tests
encoded_size_correct_standard	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encoded_size_correct_standard() {$/;"	f	module:tests
encoded_size_overflow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^    fn encoded_size_overflow() {$/;"	f	module:tests
encoder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/mod.rs	/^mod encoder;$/;"	n
encoder_tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/mod.rs	/^mod encoder_tests;$/;"	n
encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/mod.rs	/^mod encoding;$/;"	n
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn end(mut self) -> Result<W, EndError<W>> {$/;"	P	implementation:HttpWriter
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^        fn end<W: Write>(w: &mut W) {$/;"	f	method:Response::drop
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn end(self) -> io::Result<()> {$/;"	P	implementation:Response
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f	module:content
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f	module:content
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeMap
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeSeq
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStruct
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStructVariant
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTuple
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleStruct
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleVariant
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    pub fn end(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn end(self) -> Result<()> {$/;"	f
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	P	implementation:SerializeMap
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	P	implementation:SerializeStructVariant
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	P	implementation:SerializeTupleVariant
end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	P	implementation:SerializeVec
end_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn end_map(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
end_raw_buffering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	implementation:SliceRead
end_raw_buffering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	implementation:StrRead
end_raw_buffering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	interface:Read
end_raw_buffering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
end_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn end_seq(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
end_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn end_string<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	P	interface:Formatter
enforce_single_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn enforce_single_parent(mut self, new_value: bool) -> FileCopyCall<'a, C, A> {$/;"	f
enforce_single_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn enforce_single_parent(mut self, new_value: bool) -> FileCreateCall<'a, C, A> {$/;"	f
enforce_single_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn enforce_single_parent(mut self, new_value: bool) -> FileUpdateCall<'a, C, A> {$/;"	f
enforce_single_parent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn enforce_single_parent(mut self, new_value: bool) -> PermissionCreateCall<'a, C, A> {$/;"	f
entity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/mod.rs	/^mod entity;$/;"	n
entries	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        entries: Vec<(Content, Content)>,$/;"	m	struct:content::SerializeMap
entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn entry(&mut self, arg: &'a str) -> Entry<&'a str, MatchedArg> {$/;"	P	implementation:ArgMatcher
entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn entry(&mut self, key: usize) -> Entry<V> {$/;"	P	implementation:vec_map::VecMap
entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn entry(&mut self, key: K) -> Entry<K, V> {$/;"	P	implementation:VecMap
entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn entry<S>(&mut self, key: S) -> Entry$/;"	P	implementation:Map
env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	P	implementation:App
env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	f
env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)>;$/;"	P	interface:AnyArg
env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn env(self, name: &'a str) -> Self {$/;"	P	implementation:Arg
env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	P	implementation:FlagBuilder
env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	P	implementation:OptBuilder
env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn env<'s>(&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)> {$/;"	P	implementation:PosBuilder
env	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub env: Option<(&'a OsStr, Option<OsString>)>,$/;"	m	struct:Valued
env_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn env_os(mut self, name: &'a OsStr) -> Self {$/;"	P	implementation:Arg
eof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  eof: bool,$/;"	m	struct:TlsStream
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    fn eq(&self, other: &Arg<'n, 'e>) -> bool {$/;"	P	implementation:Arg
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    fn eq(&self, other: &Base<'n, 'e>) -> bool {$/;"	P	implementation:Base
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn eq(&self, other: &FlagBuilder<'n, 'e>) -> bool {$/;"	P	implementation:FlagBuilder
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn eq(&self, other: &OptBuilder<'n, 'e>) -> bool {$/;"	P	implementation:OptBuilder
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn eq(&self, other: &PosBuilder<'n, 'e>) -> bool {$/;"	P	implementation:PosBuilder
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    fn eq(&self, other: &Origin) -> bool {$/;"	P	implementation:Origin
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn eq(&self, other: &Headers) -> bool {$/;"	P	implementation:Headers
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn eq(&self, other: &MockStream) -> bool {$/;"	P	implementation:MockStream
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    fn eq(&self, other: &StatusCode) -> bool {$/;"	P	implementation:StatusCode
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn eq(&self, other: &DebouncedEvent) -> bool {$/;"	P	implementation:DebouncedEvent
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Map
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^    fn eq(&self, other: &&str) -> bool {$/;"	P	implementation:Value
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	P	implementation:Value
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^    fn eq(&self, other: &Value) -> bool {$/;"	P	implementation:String
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^    fn eq(&self, other: &Value) -> bool {$/;"	P	implementation:str
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	P	implementation:Value
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Key
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	P	implementation:Key
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	P	implementation:Key
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Key
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	P	implementation:Key
eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	P	implementation:Key
eq_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^fn eq_bool(value: &Value, other: bool) -> bool {$/;"	f
eq_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^fn eq_f64(value: &Value, other: f64) -> bool {$/;"	f
eq_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^fn eq_i64(value: &Value, other: i64) -> bool {$/;"	f
eq_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^fn eq_str(value: &Value, other: &str) -> bool {$/;"	f
eq_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^fn eq_u64(value: &Value, other: u64) -> bool {$/;"	f
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    err: ErrorImpl,$/;"	m	struct:Error
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentRefDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumRefDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapRefDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqRefDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantRefDeserializer
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    err: Box<ErrorImpl>,$/;"	m	struct:Error
err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^    err: io::Error,$/;"	m	struct:PathError
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    pub fn error<T>(&self, msg: T) -> Format<T>$/;"	P	implementation:Colorizer
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub error: ServerError,$/;"	m	struct:ErrorResponse
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub error: String,$/;"	m	struct:JsonServerError
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod error;$/;"	n
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    error: PhantomData<E>,$/;"	m	struct:MapDeserializer
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::ContentSerializer
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeMap
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeSeq
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStruct
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStructVariant
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTuple
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleStruct
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleVariant
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    error: PhantomData<Error>,$/;"	m	struct:Impossible
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn error(&self, reason: ErrorCode) -> Error {$/;"	P	implementation:Deserializer
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^pub mod error;$/;"	n
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^fn error<'de, R, T>(read: &R, reason: ErrorCode) -> Result<T>$/;"	f
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^            error: Option<io::Error>,$/;"	m	struct:collect_str::Adapter
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! error($/;"	M
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub error: io::Error,$/;"	m	struct:PathPersistError
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub error: io::Error,$/;"	m	struct:PersistError
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^mod error;$/;"	n
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^            error: String,$/;"	m	struct:poll_token::JsonError
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    error: Option<PollError>,$/;"	m	struct:DeviceFlow
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    error: Option<String>,$/;"	m	struct:JSONTokenResponse
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    error: String,$/;"	m	struct:StringError
error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub error: String,$/;"	m	struct:JsonError
error_description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub error_description: Option<String>$/;"	m	struct:JsonServerError
error_description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    error_description: Option<String>,$/;"	m	struct:JSONTokenResponse
error_description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub error_description: Option<String>,$/;"	m	struct:JsonError
error_halfscale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^    fn error_halfscale() -> u32 {$/;"	P	implementation:u64
error_halfscale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^    fn error_halfscale() -> u32;$/;"	P	interface:FloatErrors
error_is_accurate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^    fn error_is_accurate<F: Float>(count: u32, fp: &ExtendedFloat) -> bool {$/;"	P	implementation:u64
error_is_accurate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^    fn error_is_accurate<F: Float>(count: u32, fp: &ExtendedFloat) -> bool;$/;"	P	interface:FloatErrors
error_on_read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub error_on_read: bool,$/;"	m	struct:MockStream
error_on_write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub error_on_write: bool,$/;"	m	struct:MockStream
error_scale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^    fn error_scale() -> u32 {$/;"	P	implementation:u64
error_scale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^    fn error_scale() -> u32;$/;"	P	interface:FloatErrors
error_uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub error_uri: Option<String>,$/;"	m	struct:JsonError
errors	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod errors;$/;"	n
errors	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub errors: Vec<ServerMessage>,$/;"	m	struct:ServerError
errors	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod errors;$/;"	n
escape_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/elvish.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/fish.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/powershell.rs	/^fn escape_string(string: &str) -> String {$/;"	f
etag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod etag;$/;"	n
event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    pub fn event(&mut self, path: PathBuf, mut op: op::Op, cookie: Option<u32>) {$/;"	P	implementation:Debounce
event_loop_rx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    event_loop_rx: mio_extras::channel::Receiver<EventLoopMsg>,$/;"	m	struct:EventLoop
event_loop_thread	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn event_loop_thread(mut self) {$/;"	P	implementation:EventLoop
event_loop_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    event_loop_tx: mio_extras::channel::Sender<EventLoopMsg>,$/;"	m	struct:EventLoop
event_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    event_tx: Arc<Mutex<EventTx>>,$/;"	m	struct:FsEventWatcher
event_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    event_tx: Arc<Mutex<EventTx>>,$/;"	m	struct:StreamContextInfo
event_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    event_tx: EventTx,$/;"	m	struct:EventLoop
event_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    event_tx: EventTx,$/;"	m	struct:PollWatcher
event_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    event_tx: Arc<Mutex<EventTx>>,$/;"	m	struct:ReadDirectoryChangesServer
event_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    event_tx: Arc<Mutex<EventTx>>,$/;"	m	struct:ReadDirectoryRequest
events	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    events: Arc<Mutex<VecDeque<ScheduledEvent>>>,$/;"	m	struct:ScheduleWorker
events	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    events: Arc<Mutex<VecDeque<ScheduledEvent>>>,$/;"	m	struct:WatchTimer
every_possible_split_of_input	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn every_possible_split_of_input() {$/;"	f
excluding_subdomains	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    pub fn excluding_subdomains(max_age: u64) -> StrictTransportSecurity {$/;"	P	implementation:StrictTransportSecurity
exit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn exit(&self) -> ! {$/;"	P	implementation:Error
exp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub exp: &'static [i32],$/;"	m	struct:ExtendedFloatArray
exp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub exp: i32,$/;"	m	struct:ExtendedFloat
exp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    exp: i64,$/;"	m	struct:Claims
expect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod expect;$/;"	n
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IgnoredAny
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IpAddr::deserialize::IpAddrVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SocketAddr::deserialize::SocketAddrVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:range::Field::deserialize::FieldVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::DurationVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_in_place
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:range
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        pub expecting: &'static str,$/;"	m	struct:range::RangeVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ArrayVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoolVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BytesVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CStringVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CharVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OsStringVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathBufVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PhantomDataVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringInPlaceVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Visitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::ContentVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:content
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_str::CowStrVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagContentOtherFieldVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentFieldVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::UntaggedUnitVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Map::deserialize::Visitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Number::deserialize::NumberVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NumberFromString::deserialize::Visitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NumberKey::deserialize::FieldVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Box::deserialize::BoxedVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RawKey::deserialize::FieldVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RawValue::deserialize::ReferenceVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoxedFromString
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ReferenceFromString
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Value::deserialize::ValueVisitor
expecting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:KeyClassifier
expiration	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub expiration: Option<String>,$/;"	m	struct:Channel
expiration_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub expiration_time: Option<String>,$/;"	m	struct:Permission
expired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn expired(&mut self, _: &DateTime<Utc>) {}$/;"	P	interface:AuthenticatorDelegate
expired	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub fn expired(&self) -> bool {$/;"	P	implementation:Token
expires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod expires;$/;"	n
expires_at	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    pub expires_at: DateTime<Utc>,$/;"	m	struct:PollInformation
expires_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^                    expires_in: i64,$/;"	m	struct:request_code::JsonData
expires_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    expires_in: Option<i64>,$/;"	m	struct:JSONTokenResponse
expires_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^            expires_in: i64,$/;"	m	struct:refresh_token::JsonToken
expires_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    expires_in: Option<i64>,$/;"	m	struct:TokenResponse
expires_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub expires_in: Option<i64>,$/;"	m	struct:Token
expires_in_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub expires_in_timestamp: Option<i64>,$/;"	m	struct:Token
expiry_date	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub fn expiry_date(&self) -> DateTime<Utc> {$/;"	P	implementation:Token
explicit_name_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    explicit_name_set: bool,$/;"	m	struct:UsageParser
explicitly_trashed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub explicitly_trashed: Option<bool>,$/;"	m	struct:File
exponent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^pub(crate) mod exponent;$/;"	n
exponent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn exponent(self) -> i32 {$/;"	P	interface:Float
exponent_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn exponent_limit() -> (i32, i32) {$/;"	P	implementation:f32
exponent_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn exponent_limit() -> (i32, i32) {$/;"	P	implementation:f64
exponent_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn exponent_limit() -> (i32, i32);$/;"	P	interface:Float
export	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn export(&self, file_id: &str, mime_type: &str) -> FileExportCall<'a, C, A> {$/;"	P	implementation:FileMethods
export	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^pub mod export;$/;"	n
export_formats	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub export_formats: Option<HashMap<String, Vec<String>>>,$/;"	m	struct:About
export_links	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub export_links: Option<HashMap<String, String>>,$/;"	m	struct:File
export_links	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub export_links: Option<HashMap<String, String>>,$/;"	m	struct:Revision
exposure_bias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub exposure_bias: Option<f32>,$/;"	m	struct:FileImageMediaMetadata
exposure_mode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub exposure_mode: Option<String>,$/;"	m	struct:FileImageMediaMetadata
exposure_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub exposure_time: Option<f32>,$/;"	m	struct:FileImageMediaMetadata
expressions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^fn expressions() {$/;"	f
expressions_fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^fn expressions_fmt() {$/;"	f
extend	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn extend<I: IntoIterator<Item=HeaderView<'a>>>(&mut self, iter: I) {$/;"	P	implementation:Headers
extend	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	P	implementation:Map
extra_input	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    extra_input: [u8; MIN_ENCODE_CHUNK_SIZE],$/;"	m	struct:EncoderWriter
extra_input_occupied_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    extra_input_occupied_len: usize,$/;"	m	struct:EncoderWriter
f	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    f: &'a mut Formatter<'b>,$/;"	m	struct:FormatterSink
f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^impl Float for f32 {$/;"	c
f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^impl Float for f64 {$/;"	c
f64_from_parts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn f64_from_parts($/;"	P	implementation:Deserializer
f64_from_parts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn f64_from_parts(&mut self, positive: bool, significand: u64, exponent: i32) -> Result<f64>/;"	P	implementation:Deserializer
f64_long_from_parts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn f64_long_from_parts($/;"	P	implementation:Deserializer
failed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    failed: bool,$/;"	m	struct:StreamDeserializer
fallback_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/algorithm.rs	/^pub(crate) fn fallback_path<F>($/;"	f
fast_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/algorithm.rs	/^pub(crate) fn fast_path<F>(mantissa: u64, exponent: i32) -> Option<F>$/;"	f
features_check	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod features_check;$/;"	n
fields	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fields: &'static [&'static str],$/;"	m	struct:FlatStructAccess
fields	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStruct
fields	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariant
fields	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariantAsMapValue
fields	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleStruct
fields	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariant
fields	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
fields	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fields: Vec<(&'static str, Content)>,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub file: Option<File>,$/;"	m	struct:Change
file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    file: Option<PathBuf>, \/\/ if a file is being watched, this is its full path$/;"	m	struct:ReadData
file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub file: &'static str,$/;"	m	struct:RecordLocation
file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn file(&self) -> &'static str {$/;"	P	implementation:Record
file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    file: File,$/;"	m	struct:NamedTempFile
file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub file: NamedTempFile,$/;"	m	struct:PersistError
file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^mod file;$/;"	n
file_extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub file_extension: Option<String>,$/;"	m	struct:File
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub file_id: Option<String>,$/;"	m	struct:Change
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> CommentCreateCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> CommentDeleteCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> CommentGetCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> CommentListCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> CommentUpdateCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> FileCopyCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> FileDeleteCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> FileExportCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> FileGetCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> FileUpdateCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> FileWatchCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> PermissionCreateCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> PermissionDeleteCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> PermissionGetCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> PermissionListCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> PermissionUpdateCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> ReplyCreateCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> ReplyDeleteCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> ReplyGetCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> ReplyListCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> ReplyUpdateCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> RevisionDeleteCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> RevisionGetCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> RevisionListCall<'a, C, A> {$/;"	f
file_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn file_id(mut self, new_value: &str) -> RevisionUpdateCall<'a, C, A> {$/;"	f
files	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub files: Option<Vec<File>>,$/;"	m	struct:FileList
files	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn files(&'a self) -> FileMethods<'a, C, A> {$/;"	f
fill_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    fn fill_buf(&mut self) -> io::Result<&[u8]> {$/;"	P	implementation:BufReader
fill_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub fn fill_in(&mut self) {$/;"	P	implementation:Valued
fill_in_global_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    fn fill_in_global_values($/;"	P	implementation:ArgMatcher
filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn filter<F>(self, f: F) -> Filter<Self, F>$/;"	P	interface:Drain
filter_dir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^fn filter_dir(e: walkdir::Result<walkdir::DirEntry>) -> Option<walkdir::DirEntry> {$/;"	f
filter_level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn filter_level(self, level: Level) -> LevelFilter<Self>$/;"	P	interface:Drain
filter_level_accepts_tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn filter_level_accepts_tests() {$/;"	f
filter_level_from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn filter_level_from_str() {$/;"	f
filter_level_sanity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn filter_level_sanity() {$/;"	f
filter_level_to_string_and_from_str_are_compatible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn filter_level_to_string_and_from_str_are_compatible() {$/;"	f
find	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    fn find(&self, key: &K) -> Option<usize> {$/;"	P	implementation:VecMap
find_any_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn find_any_arg(&self, name: &str) -> Option<&AnyArg<'a, 'b>> {$/;"	f
find_any_by_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! find_any_by_name {$/;"	M
find_by_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! find_by_name {$/;"	M
find_flag_by_long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! find_flag_by_long {$/;"	M
find_flag_by_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! find_flag_by_short {$/;"	M
find_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! find_from {$/;"	M
find_opt_by_long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! find_opt_by_long {$/;"	M
find_opt_by_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! find_opt_by_short {$/;"	M
find_subcmd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! find_subcmd {$/;"	M
find_subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn find_subcommand(&'b self, sc: &str) -> Option<&'b App<'a, 'b>> {$/;"	f
finish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    pub fn finish(&mut self) -> Result<()> {$/;"	P	implementation:EncoderWriter
finish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn finish(self) -> Box<dyn KV + Send> {$/;"	P	implementation:ToSendSerializer
finish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn finish(&mut self) -> io::Result<usize> {$/;"	P	implementation:CompactFormatSerializer
finish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn finish(mut self) -> io::Result<()> {$/;"	P	implementation:Serializer
finish_writes_extra_byte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn finish_writes_extra_byte() {$/;"	f
finished	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    finished: bool,$/;"	m	struct:EncoderWriter
finished	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn finished(&mut self, is_success: bool) {$/;"	P	interface:Delegate
fire_due_events	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    fn fire_due_events(&self, now: Instant) -> Option<Instant> {$/;"	P	implementation:ScheduleWorker
fire_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    fn fire_event($/;"	P	implementation:ScheduleWorker
first	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub first: u64,$/;"	m	struct:Chunk
first	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    first: bool,$/;"	m	struct:MapAccess
first	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    first: bool,$/;"	m	struct:SeqAccess
fish	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^mod fish;$/;"	n
fix_position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn fix_position(&self, err: Error) -> Error {$/;"	P	implementation:Deserializer
fix_position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub(crate) fn fix_position<F>(self, f: F) -> Self$/;"	P	implementation:Error
flag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/mod.rs	/^mod flag;$/;"	n
flagbuilder_display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display() {$/;"	f	module:test
flagbuilder_display_multiple_aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display_multiple_aliases() {$/;"	f	module:test
flagbuilder_display_single_alias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn flagbuilder_display_single_alias() {$/;"	f	module:test
flags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub flags: Vec<FlagBuilder<'a, 'b>>,$/;"	m	struct:Parser
flags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn flags(&self) -> Iter<FlagBuilder<'a, 'b>> {$/;"	f
flags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    flags: fs::FSEventStreamCreateFlags,$/;"	m	struct:FsEventWatcher
flash_used	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub flash_used: Option<bool>,$/;"	m	struct:FileImageMediaMetadata
float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^pub(crate) mod float;$/;"	n
flow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    fn flow() {$/;"	f	module:tests
flow_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    flow_type: FlowType,$/;"	m	struct:Authenticator
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    fn flush(&mut self) -> Result<()> {$/;"	P	implementation:EncoderWriter
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:InterruptingWriter
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:PartialInterruptingWriter
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:DummyNetworkStream
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:PooledStream
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:no_ssl::Void
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Proxied
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Request
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Http11Message
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:HttpWriter
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:MockStream
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:HttpStream
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:HttpsStream
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Response
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:TlsStream
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:WrappedStream
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn flush(&mut self) -> Result<()> {$/;"	P	implementation:Vec
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn flush(&mut self) -> Result<()> {$/;"	P	implementation:W
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn flush(&mut self) -> Result<()>;$/;"	P	interface:Write
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:WriterFormatter
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:CountingWriter
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:TermRecordDecorator
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:TestStdoutWriter
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:NamedTempFile
flush	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:SpooledTempFile
flush_decoded_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    fn flush_decoded_buf(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:DecoderReader
flush_outgoing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn flush_outgoing(&mut self) -> ::Result<()> {$/;"	P	implementation:Http11Message
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DecodeError
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    fn fmt(&self, formatter: &mut Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Base64Display
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DecoderReader
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:EncoderWriter
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:App
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:FlagBuilder
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:OptBuilder
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:PosBuilder
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:ArgGroup
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Shell
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    fn fmt(&self, f: &mut std_fmt::Formatter) -> std_fmt::Result {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Format
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod fmt;$/;"	n
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:vec_map::Iter
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:XUploadContentType
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Chunk
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Client
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RedirectPolicy
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Void
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RangeUnit
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	P	implementation:AccessControlAllowCredentials
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	P	implementation:AccessControlAllowOrigin
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CacheControl
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CacheDirective
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ConnectionOption
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ContentDisposition
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_length.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ContentLength
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ContentRangeSpec
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Expect
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Host
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IfRange
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:tests::test_link_fmt_delimited::TestFormatterStruct
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Link
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:LinkValue
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:MediaDesc
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RelationType
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Origin
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Pragma
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Prefer
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Preference
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PreferenceApplied
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ByteRangeSpec
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Range
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ReferrerPolicy
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrictTransportSecurity
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Protocol
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ProtocolName
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CowStr
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FmtHeader
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HeaderFormatter
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HeaderView
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Headers
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Sync
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ValueString
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^   fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Headers
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExtendedValue
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Charset
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Encoding
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:EntityTag
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HttpDate
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Quality
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:QualityItem
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HttpReader
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HttpWriter
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Method
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HttpStream
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Box
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Listening
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StatusCode
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RequestUri
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:HttpVersion
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Unexpected
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OneOf
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:a
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:str
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Expected
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInMap
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInSeq
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Unsupported
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^mod fmt;$/;"	n
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorCode
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorImpl
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn fmt(&self, _formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Map
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Number
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RawValue
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RawValue
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Type
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Value
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Value
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Key
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Key
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FilterLevel
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Level
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OwnedKVList
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> result::Result<(), fmt::Error> {$/;"	f
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn fmt(&self, fmt: &mut core::fmt::Formatter) -> std::fmt::Result {$/;"	P	implementation:Error
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TempDir
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PathError
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:NamedTempFile
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PathPersistError
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PersistError
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TempPath
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:PollError
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:PollInformation
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:NullError
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:RequestError
fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:StringError
fmt_comma_delimited	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^pub fn fmt_comma_delimited<T: Display>(f: &mut fmt::Formatter, parts: &[T]) -> fmt::Result {$/;"	f
fmt_delimited	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^fn fmt_delimited<T: fmt::Display>(f: &mut fmt::Formatter, p: &[T], d: &str, b: (&str, &str)) -> /;"	f
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn fmt_header(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RangeResponseHeader
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:XUploadContentType
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn fmt_header(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ContentRange
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:AccessControlAllowCredentials
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:AccessControlAllowOrigin
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CacheControl
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ContentDisposition
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_length.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ContentLength
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cookie.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Cookie
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Expect
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Host
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^    fn fmt_header(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {$/;"	P	implementation:IfRange
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Link
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Origin
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Pragma
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Prefer
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PreferenceApplied
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Range
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ReferrerPolicy
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/set_cookie.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SetCookie
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrictTransportSecurity
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^        fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:tests::CrazyLength
fmt_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt_header(&self, f: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:HeaderFormat
fmt_line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt_line(&mut self, line: &fmt::Display) -> fmt::Result {$/;"	P	implementation:MultilineFormatter
fmt_multi_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/set_cookie.rs	/^    fn fmt_multi_header(&self, f: &mut ::header::MultilineFormatter) -> fmt::Result {$/;"	P	implementation:SetCookie
fmt_multi_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn fmt_multi_header(&self, f: &mut MultilineFormatter) -> fmt::Result {$/;"	P	interface:HeaderFormat
fmt_primitives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^macro_rules! fmt_primitives {$/;"	M
fmt_scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^	fn fmt_scheme(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Bearer
fmt_scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn fmt_scheme(&self, &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Scheme
fmt_scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn fmt_scheme(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Basic
fmt_scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn fmt_scheme(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:String
fmt_scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn fmt_scheme(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Scheme
fn_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn_timestamp: Box<dyn ThreadSafeTimestampFn<Output = io::Result<()>>>,$/;"	m	struct:CompactFormat
fn_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn_timestamp: Box<dyn ThreadSafeTimestampFn<Output = io::Result<()>>>,$/;"	m	struct:CompactFormatBuilder
fn_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn_timestamp: Box<dyn ThreadSafeTimestampFn<Output = io::Result<()>>>,$/;"	m	struct:FullFormat
fn_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn_timestamp: Box<dyn ThreadSafeTimestampFn<Output = io::Result<()>>>,$/;"	m	struct:FullFormatBuilder
focal_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub focal_length: Option<f32>,$/;"	m	struct:FileImageMediaMetadata
folder_color_palette	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub folder_color_palette: Option<Vec<String>>,$/;"	m	struct:About
folder_color_rgb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub folder_color_rgb: Option<String>,$/;"	m	struct:File
follow_if	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        fn follow_if(url: &Url) -> bool {$/;"	f	function:tests::test_redirect_followif
foo	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^        foo: Foo,$/;"	m	struct:expressions::X
force_color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn force_color(mut self) -> Self {$/;"	P	implementation:TermDecoratorBuilder
force_next_line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    force_next_line: bool,$/;"	m	struct:Help
force_plain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn force_plain(mut self) -> Self {$/;"	P	implementation:TermDecoratorBuilder
form_url_encoded	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_type.rs	/^    pub fn form_url_encoded() -> ContentType {$/;"	P	implementation:ContentType
format	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    fn format(&self) -> &T {$/;"	P	implementation:Format
format	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    fn format(&self) -> ANSIString {$/;"	P	implementation:Format
format_compact	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn format_compact($/;"	f
format_full	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn format_full($/;"	f
formatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^            formatter: &'ser mut F,$/;"	m	struct:collect_str::Adapter
formatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    formatter: F,$/;"	m	struct:Serializer
forward_to_deserialize_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	M
forward_to_deserialize_any_helper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	M
forward_to_deserialize_any_method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	M
forward_to_deserialize_other	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	M
forwarded_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	M
fraction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    fraction: f64,$/;"	m	struct:InterruptingWriter
fresh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^        pub fn fresh(self) -> Stale {$/;"	P	implementation:stale::StaleCheck
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn from(mut yaml: &'a Yaml) -> Self {$/;"	P	implementation:App
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    fn from(a: &'z Arg<'a, 'b>) -> Self {$/;"	P	implementation:Arg
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	P	implementation:Base
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn from(a: &'z Arg<'a, 'b>) -> Self {$/;"	P	implementation:FlagBuilder
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn from(mut a: Arg<'a, 'b>) -> Self {$/;"	P	implementation:FlagBuilder
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	P	implementation:OptBuilder
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn from(mut a: Arg<'n, 'e>) -> Self {$/;"	P	implementation:OptBuilder
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	P	implementation:Switched
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    fn from(a: &'z Arg<'n, 'e>) -> Self {$/;"	P	implementation:Valued
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    fn from(b: &'a BTreeMap<Yaml, Yaml>) -> Self {$/;"	P	implementation:ArgGroup
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    fn from(g: &'z ArgGroup<'a>) -> Self {$/;"	P	implementation:ArgGroup
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    fn from(e: io::Error) -> Self {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    fn from(e: std_fmt::Error) -> Self {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^        fn from(s: &'a str) -> Scheme {$/;"	P	implementation:scheme::Scheme
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn from(r: &'a mut R) -> Body<'a> {$/;"	P	implementation:Body
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn from(err: FromUtf8Error) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn from(err: IoError) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn from(err: SslError) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn from(err: Utf8Error) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn from(err: httparse::Error) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn from(err: url::ParseError) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    macro_rules! from {$/;"	M	module:tests
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod from;$/;"	n
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn from(e: EndError<W>) -> io::Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn from(listener: TcpListener) -> HttpListener {$/;"	P	implementation:HttpListener
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn from(s: T) -> Box<NetworkStream + Send> {$/;"	P	implementation:Box
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn from(err: io::Error) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	P	interface:IdentifierDeserializer
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    fn from(j: Error) -> Self {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn from(value: ParserNumber) -> Self {$/;"	P	implementation:Number
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from((): ()) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: &'a [T]) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: &str) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: Cow<'a, str>) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: Map<String, Value>) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: String) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: Vec<T>) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: bool) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: f32) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from(f: f64) -> Self {$/;"	P	implementation:Value
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^mod from;$/;"	n
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from(data: &'static str) -> Key {$/;"	P	implementation:Key
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from(data: String) -> Key {$/;"	P	implementation:Key
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from(s: Key) -> String {$/;"	P	implementation:String
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn from(data: &'static str) -> Key {$/;"	P	implementation:Key
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn from(data: String) -> Key {$/;"	P	implementation:Key
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from($/;"	P	implementation:MutexDrainError
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from(_: core::fmt::Error) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from(e: Error) -> std::io::Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from(err: std::io::Error) -> Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from(from: OwnedKV<T>) -> Self {$/;"	f
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from(x: (&'static str, V)) -> SingleKV<V> {$/;"	P	implementation:SingleKV
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from(x: (String, V)) -> SingleKV<V> {$/;"	P	implementation:SingleKV
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn from(_: crossbeam_channel::SendError<T>) -> AsyncError {$/;"	P	implementation:AsyncError
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn from(_: crossbeam_channel::TrySendError<T>) -> AsyncError {$/;"	P	implementation:AsyncError
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn from(err: std::sync::PoisonError<T>) -> AsyncError {$/;"	P	implementation:AsyncError
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn from(error: PathPersistError) -> TempPath {$/;"	P	implementation:TempPath
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn from(error: PathPersistError) -> io::Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn from(error: PersistError) -> NamedTempFile {$/;"	P	implementation:NamedTempFile
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn from(error: PersistError) -> io::Error {$/;"	P	implementation:Error
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn from(err: &'a Error) -> StringError {$/;"	P	implementation:StringError
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn from(value: JsonError) -> RequestError {$/;"	P	implementation:RequestError
from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn from(value: String) -> StringError {$/;"	P	implementation:StringError
from_and_cause	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    macro_rules! from_and_cause {$/;"	M	module:tests
from_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    pub fn from_arg(mut a: Arg<'n, 'e>, idx: u64) -> Self {$/;"	P	implementation:PosBuilder
from_arg_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    pub fn from_arg_ref(a: &Arg<'n, 'e>, idx: u64) -> Self {$/;"	P	implementation:PosBuilder
from_argmatches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^        fn from_argmatches<'a>(matches: clap::ArgMatches<'a>) -> Self;$/;"	P	interface:derive::FromArgMatches
from_ascii	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn from_ascii(ascii: &[u8]) -> OsString {$/;"	f	function:test_windows_osstr_starts_with
from_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn from_bits(u: Self::Unsigned) -> Self;$/;"	P	interface:Float
from_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn from_bits(u: u32) -> f32 {$/;"	P	implementation:f32
from_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn from_bits(u: u64) -> f64 {$/;"	P	implementation:f64
from_borrowed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn from_borrowed(json: &str) -> &Self {$/;"	P	implementation:RawValue
from_bounds	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f	module:size_hint
from_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn from_bytes(b: &[u8]) -> &Self {$/;"	P	implementation:OsStr
from_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn from_bytes(b: &[u8]) -> &Self;$/;"	P	interface:OsStrExt3
from_comma_delimited	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^pub fn from_comma_delimited<T: str::FromStr, S: AsRef<[u8]>>(raw: &[S]) -> ::Result<Vec<T>> {$/;"	f
from_escape_table	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn from_escape_table(escape: u8, byte: u8) -> CharEscape {$/;"	P	implementation:CharEscape
from_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^fn from_f32(f: f32) -> Quality {$/;"	f
from_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub fn from_f64(f: f64) -> Option<Number> {$/;"	P	implementation:Number
from_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub fn from_float<F: Float>(f: F) -> ExtendedFloat {$/;"	P	implementation:ExtendedFloat
from_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^pub(crate) fn from_float<F>(f: F) -> ExtendedFloat$/;"	f
from_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^    fn from_i16(n: i16) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^    fn from_i32(n: i32) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^    fn from_i64(n: i64) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^    fn from_i8(n: i8) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^macro_rules! from_integer {$/;"	M
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn from_iter<I: IntoIterator<Item=HeaderView<'a>>>(iter: I) -> Headers {$/;"	P	implementation:Headers
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn from_iter<T>(iter: T) -> Self$/;"	P	implementation:Map
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/from.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {$/;"	P	implementation:Value
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from_iter<I: IntoIterator<Item = &'a String>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from_iter<I: IntoIterator<Item = &'a char>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from_iter<I: IntoIterator<Item = &'a str>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from_iter<I: IntoIterator<Item = Cow<'a, str>>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from_iter<I: IntoIterator<Item = String>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn from_iter<I: IntoIterator<Item = char>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn from_iter<I: IntoIterator<Item=&'a String>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn from_iter<I: IntoIterator<Item=&'a char>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn from_iter<I: IntoIterator<Item=&'a str>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn from_iter<I: IntoIterator<Item=Cow<'a,str>>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn from_iter<I: IntoIterator<Item=String>>(iter: I) -> Key {$/;"	P	implementation:Key
from_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn from_iter<I: IntoIterator<Item=char>>(iter: I) -> Key {$/;"	P	implementation:Key
from_one_raw_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^pub fn from_one_raw_str<T: str::FromStr>(raw: &[Vec<u8>]) -> ::Result<T> {$/;"	f
from_owned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn from_owned(json: Box<str>) -> Box<Self> {$/;"	P	implementation:RawValue
from_parts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn from_parts(rdr: R, buf: Vec<u8>, pos: usize, cap: usize) -> BufReader<R> {$/;"	P	implementation:BufReader
from_primitive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^mod from_primitive;$/;"	n
from_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn from_raw(raw: &[httparse::Header]) -> ::Result<Headers> {$/;"	P	implementation:Headers
from_raw_fd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn from_raw_fd(fd: ::std::os::unix::io::RawFd) -> HttpListener {$/;"	P	implementation:HttpListener
from_raw_fd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn from_raw_fd(fd: ::std::os::unix::io::RawFd) -> HttpStream {$/;"	P	implementation:HttpStream
from_raw_socket	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn from_raw_socket(sock: ::std::os::windows::io::RawSocket) -> HttpListener {$/;"	P	implementation:HttpListener
from_raw_socket	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    unsafe fn from_raw_socket(sock: ::std::os::windows::io::RawSocket) -> HttpStream {$/;"	P	implementation:HttpStream
from_raw_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^pub fn from_raw_str<T: str::FromStr>(raw: &[u8]) -> ::Result<T> {$/;"	f
from_reader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    pub fn from_reader(reader: R) -> Self {$/;"	f
from_reader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^pub fn from_reader<R, T>(rdr: R) -> Result<T>$/;"	f
from_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    pub fn from_slice(bytes: &'a [u8]) -> Self {$/;"	P	implementation:Deserializer
from_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^pub fn from_slice<'a, T>(v: &'a [u8]) -> Result<T>$/;"	f
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	P	implementation:AppSettings
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	P	implementation:ArgSettings
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Shell
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn from_str(s: &str) -> std::result::Result<Chunk, &'static str> {$/;"	P	implementation:Chunk
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept_ranges.rs	/^    fn from_str(s: &str) -> ::Result<Self> {$/;"	P	implementation:RangeUnit
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^	fn from_str(s: &str) -> ::Result<Bearer> {$/;"	P	implementation:Bearer
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn from_str(s: &str) -> ::Result<Basic> {$/;"	P	implementation:Basic
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn from_str(s: &str) -> Result<CacheDirective, Option<<u32 as FromStr>::Err>> {$/;"	P	implementation:CacheDirective
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    fn from_str(s: &str) -> Result<ConnectionOption, ()> {$/;"	P	implementation:ConnectionOption
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^    fn from_str(s: &str) -> ::Result<Self> {$/;"	P	implementation:ContentRangeSpec
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    fn from_str(s: &str) -> ::Result<Host> {$/;"	P	implementation:Host
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn from_str(s: &str) -> ::Result<Link> {$/;"	P	implementation:Link
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn from_str(s: &str) -> ::Result<MediaDesc> {$/;"	P	implementation:MediaDesc
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn from_str(s: &str) -> ::Result<RelationType> {$/;"	P	implementation:RelationType
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    fn from_str(s: &str) -> ::Result<Origin> {$/;"	P	implementation:Origin
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn from_str(s: &str) -> Result<Preference, Option<<u32 as FromStr>::Err>> {$/;"	P	implementation:Preference
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    fn from_str(s: &str) -> ::Result<ByteRangeSpec> {$/;"	P	implementation:ByteRangeSpec
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    fn from_str(s: &str) -> ::Result<Range> {$/;"	P	implementation:Range
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn from_str(s: &str) -> ::Result<StrictTransportSecurity> {$/;"	P	implementation:StrictTransportSecurity
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    fn from_str(s: &str) -> Result<Protocol, ()> {$/;"	P	implementation:Protocol
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    fn from_str(s: &str) -> Result<ProtocolName, ()> {$/;"	P	implementation:ProtocolName
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    fn from_str(s: &str) -> ::Result<Charset> {$/;"	P	implementation:Charset
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/encoding.rs	/^    fn from_str(s: &str) -> ::Result<Encoding> {$/;"	P	implementation:Encoding
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    fn from_str(s: &str) -> ::Result<EntityTag> {$/;"	P	implementation:EntityTag
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^    fn from_str(s: &str) -> ::Result<HttpDate> {$/;"	P	implementation:HttpDate
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn from_str(s: &str) -> ::Result<QualityItem<T>> {$/;"	P	implementation:QualityItem
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn from_str(s: &str) -> Result<Method, Error> {$/;"	P	implementation:Method
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    fn from_str(s: &str) -> Result<RequestUri, Error> {$/;"	P	implementation:RequestUri
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/version.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:HttpVersion
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn from_str(s: &str) -> result::Result<Self, Self::Err> {$/;"	P	implementation:Number
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    pub fn from_str(s: &'a str) -> Self {$/;"	P	implementation:Deserializer
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^pub fn from_str<'a, T>(s: &'a str) -> Result<T>$/;"	f
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn from_str(s: &str) -> Result<Value, Error> {$/;"	P	implementation:Value
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from_str(name: &str) -> core::result::Result<FilterLevel, ()> {$/;"	P	implementation:FilterLevel
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn from_str(name: &str) -> core::result::Result<Level, ()> {$/;"	P	implementation:Level
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn from_str(s: &str) -> Result<Scheme, &'static str> {$/;"	P	implementation:Scheme
from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn from_str(s: &str) -> Result<TokenType, ()> {$/;"	P	implementation:TokenType
from_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    pub fn from_string(json: String) -> Result<Box<Self>, Error> {$/;"	P	implementation:RawValue
from_string_unchecked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub fn from_string_unchecked(n: String) -> Self {$/;"	P	implementation:Number
from_trait	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^fn from_trait<'de, R, T>(read: R) -> Result<T>$/;"	f
from_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn from_u16(n: u16) -> StatusCode {$/;"	P	implementation:StatusCode
from_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^    fn from_u16(n: u16) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^    fn from_u32(n: u32) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^    fn from_u64(n: u64) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn from_u64(x: u64) -> Self {$/;"	P	interface:Math
from_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^    fn from_u8(n: u8) -> Option<Self>;$/;"	P	interface:FromPrimitive
from_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn from_usage(u: &'a str) -> Self {$/;"	P	implementation:Arg
from_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    pub fn from_usage(usage: &'a str) -> Self {$/;"	P	implementation:UsageParser
from_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn from_usize(u: usize) -> Option<FilterLevel> {$/;"	P	implementation:FilterLevel
from_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn from_usize(u: usize) -> Option<Level> {$/;"	P	implementation:Level
from_utf8_lossy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f	module:string
from_utf8_lossy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/export.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f	module:string
from_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^pub fn from_value<T>(value: Value) -> Result<T, Error>$/;"	f
from_yaml	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn from_yaml(yaml: &'a Yaml) -> App<'a, 'a> {$/;"	P	implementation:App
from_yaml	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn from_yaml(y: &BTreeMap<Yaml, Yaml>) -> Arg {$/;"	P	implementation:Arg
from_yaml	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn from_yaml(y: &'a Yaml) -> ArgGroup<'a> {$/;"	P	implementation:ArgGroup
from_yaml	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/subcommand.rs	/^    pub fn from_yaml(yaml: &Yaml) -> App {$/;"	P	implementation:SubCommand
fsevent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub mod fsevent;$/;"	n
full_file_extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub full_file_extension: Option<String>,$/;"	m	struct:File
full_input_fraction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    full_input_fraction: f64,$/;"	m	struct:PartialInterruptingWriter
function	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn function(&self) -> &'static str {$/;"	P	implementation:Record
function	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub function: &'static str,$/;"	m	struct:RecordLocation
fuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn fuse(self) -> Fuse<Self>$/;"	P	interface:Drain
g_settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub g_settings: AppFlags,$/;"	m	struct:Parser
gen_completions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn gen_completions<T: Into<OsString>, S: Into<String>>($/;"	P	implementation:App
gen_completions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn gen_completions(&mut self, for_shell: Shell, od: OsString) {$/;"	f
gen_completions_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn gen_completions_to<W: Write, S: Into<String>>($/;"	P	implementation:App
gen_completions_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn gen_completions_to<W: Write>(&mut self, for_shell: Shell, buf: &mut W) {$/;"	f
generate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^    pub fn generate<W: Write>(&self, for_shell: Shell, buf: &mut W) {$/;"	P	implementation:ComplGen
generate_ids	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn generate_ids(&self) -> FileGenerateIdCall<'a, C, A> {$/;"	P	implementation:FileMethods
generate_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/elvish.rs	/^fn generate_inner<'a, 'b, 'p>($/;"	f
generate_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/powershell.rs	/^fn generate_inner<'a, 'b, 'p>($/;"	f
generate_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:BashGen
generate_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/elvish.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:ElvishGen
generate_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/fish.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:FishGen
generate_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/powershell.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:PowerShellGen
generate_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/zsh.rs	/^    pub fn generate_to<W: Write>(&self, buf: &mut W) {$/;"	P	implementation:ZshGen
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn get(&self, arg: &str) -> Option<&MatchedArg> {$/;"	P	implementation:ArgMatcher
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn get(&self, key: usize) -> Option<&V> {$/;"	P	implementation:vec_map::VecMap
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get(&self) -> AboutGetCall<'a, C, A> {$/;"	P	implementation:AboutMethods
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get(&self, drive_id: &str) -> DriveGetCall<'a, C, A> {$/;"	P	implementation:DriveMethods
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get(&self, file_id: &str) -> FileGetCall<'a, C, A> {$/;"	P	implementation:FileMethods
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get(&self, file_id: &str, comment_id: &str) -> CommentGetCall<'a, C, A> {$/;"	P	implementation:CommentMethods
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get(&self, file_id: &str, comment_id: &str, reply_id: &str) -> ReplyGetCall<'a, C, A>/;"	P	implementation:ReplyMethods
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get(&self, file_id: &str, permission_id: &str) -> PermissionGetCall<'a, C, A> {$/;"	P	implementation:PermissionMethods
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get(&self, file_id: &str, revision_id: &str) -> RevisionGetCall<'a, C, A> {$/;"	P	implementation:RevisionMethods
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get(&self, team_drive_id: &str) -> TeamdriveGetCall<'a, C, A> {$/;"	P	implementation:TeamdriveMethods
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn get<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    pub fn get(&self, key: TypeId) -> Option<&V> {$/;"	P	implementation:PtrMapCell
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn get(&self, key: &K) -> Option<&V> {$/;"	P	implementation:VecMap
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn get<H: Header + HeaderFormat>(&self) -> Option<&H> {$/;"	P	implementation:Headers
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/core_lazy.rs	/^    pub fn get<F>(&'static self, builder: F) -> &T$/;"	P	implementation:Lazy
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/inline_lazy.rs	/^    pub fn get<F>(&'static self, f: F) -> &T$/;"	P	implementation:Lazy
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn get(&self) -> &Value {$/;"	P	implementation:OccupiedEntry
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn get<Q>(&self, key: &Q) -> Option<&Value>$/;"	P	implementation:Map
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    pub fn get(&self) -> &str {$/;"	P	implementation:RawValue
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn get<I: Index>(&self, index: I) -> Option<&Value> {$/;"	P	implementation:Value
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn get(&self, _: u64, _: &Vec<&str>) -> Result<Option<Token>, NullError> {$/;"	P	implementation:NullStorage
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn get(&self, scope_hash: u64, scopes: &Vec<&str>) -> Result<Option<Token>, NullError> {$/;"	P	implementation:MemoryStorage
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn get(&self, scope_hash: u64, scopes: &Vec<&str>) -> Result<Option<Token>, Self::Error> {$/;"	P	implementation:DiskTokenStorage
get	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn get(&self, scope_hash: u64, scopes: &Vec<&str>) -> Result<Option<Token>, Self::Error>;$/;"	P	interface:TokenStorage
get_all_subcommand_paths	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^pub fn get_all_subcommand_paths(p: &Parser, first: bool) -> Vec<String> {$/;"	f
get_args_tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^fn get_args_tag(p: &Parser, incl_reqs: bool) -> Option<String> {$/;"	f
get_authorization_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    fn get_authorization_code<'a, AD: AuthenticatorDelegate, S, T>(&mut self,$/;"	f
get_bin_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn get_bin_name(&self) -> Option<&str> {$/;"	P	implementation:App
get_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn get_buf(&self) -> &[u8] {$/;"	P	implementation:BufReader
get_extended_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub fn get_extended_float(&self, index: usize) -> ExtendedFloat {$/;"	P	implementation:ExtendedFloatArray
get_file_name	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn get_file_name(lfsn: &str) -> Option<&str> {$/;"	f
get_host_and_port	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^fn get_host_and_port(url: &Url) -> ::Result<(&str, u16)> {$/;"	f
get_incoming	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn get_incoming(&mut self) -> ::Result<ResponseHead> {$/;"	P	implementation:Http11Message
get_incoming	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    fn get_incoming(&mut self) -> ::Result<ResponseHead>;$/;"	P	interface:HttpMessage
get_large	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub fn get_large(&self, index: usize) -> ExtendedFloat {$/;"	P	implementation:ModeratePathPowers
get_matches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn get_matches(self) -> ArgMatches<'a> {$/;"	P	implementation:App
get_matches_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn get_matches_from<I, T>(mut self, itr: I) -> ArgMatches<'a>$/;"	P	implementation:App
get_matches_from_safe	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn get_matches_from_safe<I, T>(mut self, itr: I) -> ClapResult<ArgMatches<'a>>$/;"	P	implementation:App
get_matches_from_safe_borrow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn get_matches_from_safe_borrow<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches<'a>>$/;"	P	implementation:App
get_matches_safe	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn get_matches_safe(self) -> ClapResult<ArgMatches<'a>> {$/;"	P	implementation:App
get_matches_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn get_matches_with<I, T>($/;"	f
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn get_mut(&mut self, arg: &str) -> Option<&mut MatchedArg> {$/;"	P	implementation:ArgMatcher
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn get_mut(&mut self) -> &mut R { &mut self.inner }$/;"	P	implementation:BufReader
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn get_mut(&mut self) -> &mut S {$/;"	P	implementation:PooledStream
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    pub fn get_mut(&mut self, key: TypeId) -> Option<&mut V> {$/;"	P	implementation:PtrMapCell
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    pub unsafe fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:OptCell
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn get_mut(&mut self, key: &K) -> Option<&mut V> {$/;"	P	implementation:VecMap
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn get_mut<H: Header + HeaderFormat>(&mut self) -> Option<&mut H> {$/;"	P	implementation:Headers
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn get_mut(&mut self) -> &mut (NetworkStream + Send) {$/;"	P	implementation:Http11Message
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	P	implementation:HttpReader
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	P	implementation:HttpWriter
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut Value {$/;"	P	implementation:OccupiedEntry
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn get_mut<Q>(&mut self, key: &Q) -> Option<&mut Value>$/;"	P	implementation:Map
get_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn get_mut<I: Index>(&mut self, index: I) -> Option<&mut Value> {$/;"	P	implementation:Value
get_mut_session	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub fn get_mut_session(&mut self) -> &mut rustls::Session {$/;"	P	implementation:TlsStream
get_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn get_name(&self) -> &str {$/;"	P	implementation:App
get_powers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    fn get_powers() -> &'static ModeratePathPowers {$/;"	P	implementation:ExtendedFloat
get_powers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    fn get_powers() -> &'static ModeratePathPowers;$/;"	P	interface:ModeratePathCache
get_powers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached_float80.rs	/^pub(crate) fn get_powers() -> &'static ModeratePathPowers {$/;"	f
get_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn get_raw(&self, name: &str) -> Option<&[Vec<u8>]> {$/;"	P	implementation:Headers
get_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn get_ref(&self) -> &R { &self.inner }$/;"	P	implementation:BufReader
get_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub fn get_ref(&self) -> &S {$/;"	P	implementation:PooledStream
get_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    pub fn get_ref(&self) -> &HttpMessage {$/;"	P	implementation:Response
get_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn get_ref(&self) -> &(NetworkStream + Send) {$/;"	P	implementation:Http11Message
get_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn get_ref(&self) -> &R {$/;"	P	implementation:HttpReader
get_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn get_ref(&self) -> &W {$/;"	P	implementation:HttpWriter
get_required_usage_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^pub fn get_required_usage_from<'a, 'b>($/;"	f
get_requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^    macro_rules! get_requires {$/;"	M	function:get_required_usage_from
get_sender	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn get_sender($/;"	P	implementation:AsyncCore
get_session	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub fn get_session(&self) -> &rustls::Session {$/;"	P	implementation:TlsStream
get_small	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub fn get_small(&self, index: usize) -> ExtendedFloat {$/;"	P	implementation:ModeratePathPowers
get_small_int	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub fn get_small_int(&self, index: usize) -> u64 {$/;"	P	implementation:ModeratePathPowers
get_start_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn get_start_page_token(&self) -> ChangeGetStartPageTokenCall<'a, C, A> {$/;"	P	implementation:ChangeMethods
get_tooltip	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/elvish.rs	/^fn get_tooltip<T: ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_tooltip	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/powershell.rs	/^fn get_tooltip<T: ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_unique_entry_id	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn get_unique_entry_id(base_path: &str) -> Option<String> {$/;"	f
get_zsh_arg_conflicts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/macros.rs	/^macro_rules! get_zsh_arg_conflicts {$/;"	M
global	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn global(self, g: bool) -> Self {$/;"	P	implementation:Arg
global_args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub global_args: Vec<Arg<'a, 'b>>,$/;"	m	struct:Parser
global_setting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn global_setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:App
global_settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn global_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
good	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    pub fn good<T>(&self, msg: T) -> Format<T>$/;"	P	implementation:Colorizer
greater_equal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn greater_equal(x: &[Limb], y: &[Limb]) -> bool {$/;"	f	module:large
group	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn group(mut self, group: ArgGroup<'a>) -> Self {$/;"	P	implementation:App
group	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn group(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
group	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^mod group;$/;"	n
groups	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn groups(mut self, groups: &[ArgGroup<'a>]) -> Self {$/;"	P	implementation:App
groups	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub groups: Vec<ArgGroup<'a>>,$/;"	m	struct:Parser
groups	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn groups(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
groups	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub groups: Option<Vec<&'a str>>,$/;"	m	struct:Base
groups	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    fn groups() {$/;"	f	module:test
groups_for_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn groups_for_arg(&self, name: &str) -> Option<Vec<&'a str>> {$/;"	f
grow_zerofill	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^unsafe fn grow_zerofill(buf: &mut Vec<u8>, additional: usize) {$/;"	f
h1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/mod.rs	/^pub mod h1;$/;"	n
handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^            fn handle<'a, 'k>(&'a self, _: Request<'a, 'k>, res: Response<'a, Fresh>) {$/;"	P	implementation:tests::test_check_continue_reject::Reject
handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^        fn handle(_: Request, res: Response<Fresh>) {$/;"	f	function:tests::test_check_continue_default
handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn handle<'a, 'k>(&'a self, Request<'a, 'k>, Response<'a, Fresh>);$/;"	P	interface:Handler
handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn handle<'a, 'k>(&'a self, req: Request<'a, 'k>, res: Response<'a, Fresh>) {$/;"	f
handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn handle<H: Handler + 'static>(self, handler: H) -> ::Result<Listening> {$/;"	P	implementation:Server
handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^fn handle<H, L>(mut server: Server<L>, handler: H, threads: usize) -> ::Result<Listening>$/;"	f
handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    handle: HANDLE,$/;"	m	struct:ReadDirectoryRequest
handle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    fn handle(&self, rq: server::Request, mut rp: server::Response) {$/;"	P	implementation:InstalledFlowHandler
handle_connection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn handle_connection<S>(&self, stream: &mut S) where S: NetworkStream + Clone {$/;"	P	implementation:Worker
handle_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn handle_event(&mut self, event: &mio::Event) {$/;"	P	implementation:EventLoop
handle_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^unsafe extern "system" fn handle_event($/;"	f
handle_expect	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn handle_expect<W: Write>(&self, req: &Request, wrt: &mut W) -> bool {$/;"	P	implementation:Worker
handle_inotify	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn handle_inotify(&mut self) {$/;"	P	implementation:EventLoop
handle_messages	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn handle_messages(&mut self) {$/;"	P	implementation:EventLoop
handle_self_overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn handle_self_overrides<'b>(&mut self, a: Option<&AnyArg<'a, 'b>>) {$/;"	P	implementation:ArgMatcher
handle_threads	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn handle_threads<H: Handler + 'static>(self, handler: H,$/;"	P	implementation:Server
handle_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    fn handle_url(&self, url: hyper::Url) {$/;"	P	implementation:InstalledFlowHandler
handler	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    handler: H,$/;"	m	struct:Worker
handles_short_read_from_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^fn handles_short_read_from_delegate() {$/;"	f
has	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn has<H: Header + HeaderFormat>(&self) -> bool {$/;"	P	implementation:Headers
has_args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_args(&self) -> bool {$/;"	f
has_augmented_permissions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub has_augmented_permissions: Option<bool>,$/;"	m	struct:File
has_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn has_body(&self) -> bool {$/;"	P	implementation:Http11Message
has_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    fn has_body(&self) -> bool;$/;"	P	interface:HttpMessage
has_flags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_flags(&self) -> bool {$/;"	f
has_opts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_opts(&self) -> bool {$/;"	f
has_positionals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_positionals(&self) -> bool {$/;"	f
has_read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    has_read: bool,$/;"	m	struct:PooledStream
has_subcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_subcommands(&self) -> bool {$/;"	f
has_switch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn has_switch(&self) -> bool {$/;"	P	implementation:App
has_switch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn has_switch(&self) -> bool {$/;"	f
has_switch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn has_switch(&self) -> bool;$/;"	P	interface:AnyArg
has_switch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn has_switch(&self) -> bool {$/;"	P	implementation:FlagBuilder
has_switch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn has_switch(&self) -> bool {$/;"	P	implementation:OptBuilder
has_switch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn has_switch(&self) -> bool {$/;"	P	implementation:PosBuilder
has_thumbnail	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub has_thumbnail: Option<bool>,$/;"	m	struct:File
has_visible_flags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_visible_flags(&self) -> bool {$/;"	f
has_visible_opts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_visible_opts(&self) -> bool {$/;"	f
has_visible_positionals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_visible_positionals(&self) -> bool {$/;"	f
has_visible_subcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn has_visible_subcommands(&self) -> bool {$/;"	f
hash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:Key
hash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:Key
hash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    pub hash: u64,$/;"	m	struct:JSONToken
hash_scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^pub fn hash_scopes<'a, I, T>(scopes: I) -> (u64, Vec<&'a str>)$/;"	f
head	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn head<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
head_revision_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub head_revision_id: Option<String>,$/;"	m	struct:File
header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn header<H: Header + HeaderFormat>(mut self, header: H) -> RequestBuilder<'a> {$/;"	P	implementation:RequestBuilder
header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^macro_rules! header {$/;"	M
header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod header;$/;"	n
header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    header: String,$/;"	m	struct:JWT
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn header_name() -> &'static str { "X-Upload-Content-Type" }$/;"	P	implementation:XUploadContentType
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:ContentRange
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:RangeResponseHeader
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:AccessControlAllowCredentials
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:AccessControlAllowOrigin
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn header_name() -> &'static str {$/;"	f
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:CacheControl
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:ContentDisposition
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_length.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:ContentLength
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cookie.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:Cookie
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:Expect
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:Host
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:IfRange
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:Link
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:Origin
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:Pragma
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:Prefer
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:PreferenceApplied
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:Range
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:ReferrerPolicy
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/set_cookie.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:SetCookie
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn header_name() -> &'static str {$/;"	P	implementation:StrictTransportSecurity
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^        fn header_name() -> &'static str {$/;"	P	implementation:tests::CrazyLength
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn header_name() -> &'static str;$/;"	P	interface:Header
header_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^fn header_name<T: Header>() -> &'static str {$/;"	f
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    headers: Option<Headers>,$/;"	m	struct:RequestBuilder
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn headers(mut self, headers: Headers) -> RequestBuilder<'a> {$/;"	P	implementation:RequestBuilder
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    headers: Headers,$/;"	m	struct:Request
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn headers(&self) -> &Headers { &self.headers }$/;"	P	implementation:Request
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    pub headers: header::Headers,$/;"	m	struct:Response
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub headers: Headers$/;"	m	struct:Incoming
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub headers: Headers,$/;"	m	struct:RequestHead
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub headers: Headers,$/;"	m	struct:ResponseHead
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub headers: Headers,$/;"	m	struct:Request
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    headers: &'a mut header::Headers,$/;"	m	struct:Response
headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn headers(&self) -> &header::Headers { &*self.headers }$/;"	P	implementation:Response
headers_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn headers_mut(&mut self) -> &mut Headers { &mut self.headers }$/;"	P	implementation:Request
headers_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn headers_mut(&mut self) -> &mut header::Headers { self.headers }$/;"	P	implementation:Response
height	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub height: Option<i32>,$/;"	m	struct:FileImageMediaMetadata
height	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub height: Option<i32>,$/;"	m	struct:FileVideoMediaMetadata
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn help<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>, spec_vals: &str) -> io::Result<()> /;"	P	implementation:Help
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	P	implementation:App
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn help<S: Into<&'b str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^mod help;$/;"	n
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	f
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn help(&self) -> Option<&'e str>;$/;"	P	interface:AnyArg
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn help(mut self, h: &'b str) -> Self {$/;"	P	implementation:Arg
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub help: Option<&'b str>,$/;"	m	struct:Base
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	P	implementation:FlagBuilder
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	P	implementation:OptBuilder
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn help(&self) -> Option<&'e str> {$/;"	P	implementation:PosBuilder
help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn help(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
help_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn help_message<S: Into<&'a str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
help_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub help_message: Option<&'a str>,$/;"	m	struct:Parser
help_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn help_short<S: AsRef<str> + 'b>(mut self, s: S) -> Self {$/;"	P	implementation:App
help_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    help_short: Option<char>,$/;"	m	struct:Parser
help_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn help_short(&mut self, s: &str) {$/;"	f
help_start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^fn help_start(b: u8) -> bool {$/;"	f
help_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub help_str: Option<&'b str>,$/;"	m	struct:AppMeta
helper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f	module:size_hint
helper	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod helper;$/;"	n
hi64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64(&self) -> (u64, bool) {$/;"	P	interface:Hi64
hi64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64(&self) -> (u64, bool) {$/;"	P	interface:Math
hi64_1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_1(&self) -> (u64, bool) {$/;"	P	implementation:u32
hi64_1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_1(&self) -> (u64, bool) {$/;"	P	implementation:u64
hi64_1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_1(&self) -> (u64, bool);$/;"	P	interface:Hi64
hi64_2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_2(&self) -> (u64, bool) {$/;"	P	implementation:u32
hi64_2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_2(&self) -> (u64, bool) {$/;"	P	implementation:u64
hi64_2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_2(&self) -> (u64, bool);$/;"	P	interface:Hi64
hi64_3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_3(&self) -> (u64, bool) {$/;"	P	implementation:u32
hi64_3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_3(&self) -> (u64, bool) {$/;"	P	implementation:u64
hi64_3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn hi64_3(&self) -> (u64, bool);$/;"	P	interface:Hi64
hidden	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn hidden(self, h: bool) -> Self {$/;"	P	implementation:Arg
hidden	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub hidden: Option<bool>,$/;"	m	struct:Drive
hidden_long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn hidden_long_help(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hidden_short_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn hidden_short_help(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hide	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn hide(&self, drive_id: &str) -> DriveHideCall<'a, C, A> {$/;"	P	implementation:DriveMethods
hide_default_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn hide_default_value(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hide_env_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn hide_env_values(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hide_from_rustfmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/features_check/mod.rs	/^macro_rules! hide_from_rustfmt {$/;"	M
hide_possible_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn hide_possible_values(self, hide: bool) -> Self {$/;"	P	implementation:Arg
hide_pv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    hide_pv: bool,$/;"	m	struct:Help
history	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    history: &'a mut Vec<(Vec<u8>, Vec<u8>)>,$/;"	m	struct:CompactFormatSerializer
history	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    history: RefCell<Vec<(Vec<u8>, Vec<u8>)>>,$/;"	m	struct:CompactFormat
host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    host: Cow<'static, str>,$/;"	m	struct:ProxyConfig
host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod host;$/;"	n
host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    pub host: Host,$/;"	m	struct:Origin
hostname	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    pub hostname: String,$/;"	m	struct:Host
href_lang	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    href_lang: Option<Vec<LanguageTag>>,$/;"	m	struct:LinkValue
href_lang	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn href_lang(&self) -> Option<&[LanguageTag]> {$/;"	P	implementation:LinkValue
html	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_type.rs	/^    pub fn html() -> ContentType {$/;"	P	implementation:ContentType
html_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub html_content: Option<String>,$/;"	m	struct:Comment
html_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub html_content: Option<String>,$/;"	m	struct:Reply
http	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod http;$/;"	n
http	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn http<To: ToSocketAddrs>(addr: To) -> ::Result<Server<HttpListener>> {$/;"	P	implementation:Server
http_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn http_error(&mut self, &hyper::Error) -> Retry {$/;"	P	interface:Delegate
http_failure	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn http_failure(&mut self, _: &hyper::client::Response, Option<JsonServerError>, _: Option<S/;"	P	interface:Delegate
http_method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub http_method: Method,$/;"	m	struct:MethodInfo
httpdate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/mod.rs	/^mod httpdate;$/;"	n
https	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn https<A: ToSocketAddrs>(addr: A, ssl: S) -> ::Result<Server<HttpsListener<S>>> {$/;"	P	implementation:Server
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:AboutGetCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:AboutMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ChangeGetStartPageTokenCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ChangeListCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ChangeMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ChangeWatchCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ChannelMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ChannelStopCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:CommentCreateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:CommentDeleteCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:CommentGetCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:CommentListCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:CommentMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:CommentUpdateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:DriveCreateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:DriveDeleteCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:DriveGetCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:DriveHideCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:DriveListCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:DriveMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:DriveUnhideCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:DriveUpdateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileCopyCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileCreateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileDeleteCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileEmptyTrashCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileExportCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileGenerateIdCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileGetCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileListCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileUpdateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:FileWatchCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:PermissionCreateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:PermissionDeleteCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:PermissionGetCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:PermissionListCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:PermissionMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:PermissionUpdateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ReplyCreateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ReplyDeleteCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ReplyGetCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ReplyListCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ReplyMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:ReplyUpdateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:RevisionDeleteCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:RevisionGetCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:RevisionListCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:RevisionMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:RevisionUpdateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:TeamdriveCreateCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:TeamdriveDeleteCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:TeamdriveGetCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:TeamdriveListCall
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:TeamdriveMethods
hub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    hub: &'a DriveHub<C, A>,$/;"	m	struct:TeamdriveUpdateCall
iadd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn iadd(x: &mut Limb, y: Limb) -> bool {$/;"	f	module:scalar
iadd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn iadd(x: &mut Vec<Limb>, y: &[Limb]) {$/;"	f	module:large
iadd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn iadd(x: &mut Vec<Limb>, y: Limb) {$/;"	f	module:small
iadd_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn iadd_impl(x: &mut Vec<Limb>, y: &[Limb], xstart: usize) {$/;"	f	module:large
iadd_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn iadd_impl(x: &mut Vec<Limb>, y: Limb, xstart: usize) {$/;"	f	module:small
iadd_small	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn iadd_small(&mut self, y: Limb) {$/;"	P	interface:Math
iat	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    iat: i64,$/;"	m	struct:Claims
icon_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub icon_link: Option<String>,$/;"	m	struct:File
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub id: &'static str,$/;"	m	struct:MethodInfo
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:AboutDriveThemes
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:AboutTeamDriveThemes
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:Channel
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:Comment
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:Drive
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:DriveBackgroundImageFile
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:File
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:Permission
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:Reply
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:Revision
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:TeamDrive
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub id: Option<String>,$/;"	m	struct:TeamDriveBackgroundImageFile
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub id: u64,$/;"	m	struct:MockStream
id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    id: u64,$/;"	m	struct:ScheduledEvent
idempotent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    pub fn idempotent(&self) -> bool {$/;"	P	implementation:Method
idle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    idle: Option<Instant>,$/;"	m	struct:PooledStreamInner
idle_duration	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^        pub fn idle_duration(&self) -> Duration {$/;"	P	implementation:stale::StaleCheck
idle_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    idle_timeout: Option<Duration>,$/;"	m	struct:Config2
ids	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub ids: Option<Vec<String>>,$/;"	m	struct:GeneratedIds
if_checking_recursion_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^macro_rules! if_checking_recursion_limit {$/;"	M
if_match	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod if_match;$/;"	n
if_modified_since	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod if_modified_since;$/;"	n
if_none_match	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod if_none_match;$/;"	n
if_range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod if_range;$/;"	n
if_unmodified_since	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod if_unmodified_since;$/;"	n
ignore	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    pub fn ignore(&self, id: u64) {$/;"	P	implementation:WatchTimer
ignore_decimal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn ignore_decimal(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
ignore_default_visibility	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn ignore_default_visibility(mut self, new_value: bool) -> FileCopyCall<'a, C, A> {$/;"	f
ignore_default_visibility	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn ignore_default_visibility(mut self, new_value: bool) -> FileCreateCall<'a, C, A> {$/;"	f
ignore_escape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^fn ignore_escape<'de, R>(read: &mut R) -> Result<()>$/;"	f
ignore_exponent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn ignore_exponent(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
ignore_integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn ignore_integer(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
ignore_res	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn ignore_res(self) -> IgnoreResult<Self>$/;"	P	interface:Drain
ignore_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	P	implementation:SliceRead
ignore_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	P	implementation:StrRead
ignore_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	f
ignore_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()>;$/;"	P	interface:Read
ignore_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn ignore_value(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
ignored_any	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^mod ignored_any;$/;"	n
image	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub image: Option<String>,$/;"	m	struct:FileContentHintsThumbnail
image	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept.rs	/^    pub fn image() -> Accept {$/;"	P	implementation:Accept
image_media_metadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub image_media_metadata: Option<FileImageMediaMetadata>,$/;"	m	struct:File
imp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/mod.rs	/^mod imp;$/;"	n
imp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^mod imp;$/;"	n
impl_copy_clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	M
impl_default_as_fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! impl_default_as_fmt{$/;"	M
impl_deserialize_num	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	M
impl_from_primitive_for_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_float {$/;"	M
impl_from_primitive_for_int	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_int {$/;"	M
impl_from_primitive_for_uint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^macro_rules! impl_from_primitive_for_uint {$/;"	M
impl_from_signed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^macro_rules! impl_from_signed {$/;"	M
impl_from_unsigned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^macro_rules! impl_from_unsigned {$/;"	M
impl_settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! impl_settings {$/;"	M
impl_value_for	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! impl_value_for{$/;"	M
implied_settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn implied_settings(&mut self, a: &Arg<'a, 'b>) {$/;"	f
impls	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^mod impls;$/;"	n
impls	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^mod impls;$/;"	n
import_formats	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub import_formats: Option<HashMap<String, Vec<String>>>,$/;"	m	struct:About
impossible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^mod impossible;$/;"	n
imul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub(crate) fn imul(&mut self, b: &ExtendedFloat) {$/;"	P	implementation:ExtendedFloat
imul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn imul(x: &mut Limb, y: Limb, carry: Limb) -> Limb {$/;"	f	module:scalar
imul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn imul(x: &mut Vec<Limb>, y: &[Limb]) {$/;"	f	module:large
imul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn imul(x: &mut Vec<Limb>, y: Limb) {$/;"	f	module:small
imul_pow10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn imul_pow10(&mut self, n: u32) {$/;"	P	interface:Math
imul_pow2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn imul_pow2(&mut self, n: u32) {$/;"	P	interface:Math
imul_pow5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn imul_pow5(&mut self, n: u32) {$/;"	P	interface:Math
imul_pow5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn imul_pow5(x: &mut Vec<Limb>, n: u32) {$/;"	f	module:small
imul_small	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn imul_small(&mut self, y: Limb) {$/;"	P	interface:Math
inc_dropped	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    inc_dropped: bool,$/;"	m	struct:Async
inc_dropped	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    inc_dropped: bool,$/;"	m	struct:AsyncBuilder
inc_occurrence_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn inc_occurrence_of(&mut self, arg: &'a str) {$/;"	P	implementation:ArgMatcher
inc_occurrences_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn inc_occurrences_of(&mut self, args: &[&'a str]) {$/;"	P	implementation:ArgMatcher
include_corpus_removals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_corpus_removals(mut self, new_value: bool) -> ChangeListCall<'a, C, A> {$/;"	f
include_corpus_removals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_corpus_removals(mut self, new_value: bool) -> ChangeWatchCall<'a, C, A> {$/;"	f
include_deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_deleted(mut self, new_value: bool) -> CommentGetCall<'a, C, A> {$/;"	f
include_deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_deleted(mut self, new_value: bool) -> CommentListCall<'a, C, A> {$/;"	f
include_deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_deleted(mut self, new_value: bool) -> ReplyGetCall<'a, C, A> {$/;"	f
include_deleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_deleted(mut self, new_value: bool) -> ReplyListCall<'a, C, A> {$/;"	f
include_items_from_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_items_from_all_drives(mut self, new_value: bool) -> ChangeListCall<'a, C, A> /;"	f
include_items_from_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_items_from_all_drives(mut self, new_value: bool) -> ChangeWatchCall<'a, C, A>/;"	f
include_items_from_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_items_from_all_drives(mut self, new_value: bool) -> FileListCall<'a, C, A> {$/;"	f
include_removed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_removed(mut self, new_value: bool) -> ChangeListCall<'a, C, A> {$/;"	f
include_removed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_removed(mut self, new_value: bool) -> ChangeWatchCall<'a, C, A> {$/;"	f
include_subdomains	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    pub include_subdomains: bool,$/;"	m	struct:StrictTransportSecurity
include_team_drive_items	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_team_drive_items(mut self, new_value: bool) -> ChangeListCall<'a, C, A> {$/;"	f
include_team_drive_items	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_team_drive_items(mut self, new_value: bool) -> ChangeWatchCall<'a, C, A> {$/;"	f
include_team_drive_items	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn include_team_drive_items(mut self, new_value: bool) -> FileListCall<'a, C, A> {$/;"	f
including_subdomains	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    pub fn including_subdomains(max_age: u64) -> StrictTransportSecurity {$/;"	P	implementation:StrictTransportSecurity
incoming	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn incoming(&mut self) -> NetworkConnections<Self> {$/;"	P	interface:NetworkListener
incomplete_search	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub incomplete_search: Option<bool>,$/;"	m	struct:FileList
indent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^fn indent<W>(wr: &mut W, n: usize, s: &[u8]) -> io::Result<()>$/;"	f	method:Formatter::write_char_escape
index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn index(mut self, idx: u64) -> Self {$/;"	P	implementation:Arg
index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub index: Option<u64>,$/;"	m	struct:Arg
index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    pub index: u64,$/;"	m	struct:PosBuilder
index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn index(&self, index: &Q) -> &Value {$/;"	f
index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    index: usize,$/;"	m	struct:SliceRead
index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index(&self, index: I) -> &Value {$/;"	f
index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^mod index;$/;"	n
index_into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	P	implementation:String
index_into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	P	implementation:str
index_into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	P	implementation:usize
index_into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	f
index_into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value>;$/;"	P	interface:Index
index_into_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	P	implementation:String
index_into_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	P	implementation:str
index_into_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	P	implementation:usize
index_into_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	f
index_into_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value>;$/;"	P	interface:Index
index_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn index_mut(&mut self, index: &Q) -> &mut Value {$/;"	f
index_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_mut(&mut self, index: I) -> &mut Value {$/;"	f
index_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn index_of<S: AsRef<str>>(&self, name: S) -> Option<usize> {$/;"	P	implementation:ArgMatches
index_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn index_of(slice: &[u8], byte: u8) -> Option<usize> {$/;"	f	module:tests
index_of_log_level_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn index_of_log_level_name(name: &str) -> Option<usize> {$/;"	f
index_of_str_ignore_case	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn index_of_str_ignore_case(haystack: &[&str], needle: &str) -> Option<usize> {$/;"	f
index_or_insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	P	implementation:String
index_or_insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	P	implementation:str
index_or_insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	P	implementation:usize
index_or_insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	f
index_or_insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value;$/;"	P	interface:Index
indexable_text	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub indexable_text: Option<String>,$/;"	m	struct:FileContentHints
indices	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/matched_arg.rs	/^    pub indices: Vec<usize>,$/;"	m	struct:MatchedArg
indices_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn indices_of<S: AsRef<str>>(&'a self, name: S) -> Option<Indices<'a>> {$/;"	P	implementation:ArgMatches
info	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub info: Option<Vec<String>>,$/;"	m	struct:Error
info	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! info($/;"	M
inherited	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub inherited: Option<bool>,$/;"	m	struct:PermissionPermissionDetails
inherited	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub inherited: Option<bool>,$/;"	m	struct:PermissionTeamDrivePermissionDetails
inherited_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub inherited_from: Option<String>,$/;"	m	struct:PermissionPermissionDetails
inherited_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub inherited_from: Option<String>,$/;"	m	struct:PermissionTeamDrivePermissionDetails
init_claims_from_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^fn init_claims_from_key<'a, I, T>(key: &ServiceAccountKey, scopes: I) -> Claims$/;"	f
initialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^    fn initialize(lazy: &Self);$/;"	P	interface:LazyStatic
initialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^pub fn initialize<T: LazyStatic>(lazy: &T) {$/;"	f
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        inner: BTreeMap<usize, V>,$/;"	m	struct:vec_map::VecMap
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        inner: btree_map::Iter<'a, usize, V>,$/;"	m	struct:vec_map::Iter
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    inner: R,$/;"	m	struct:BufReader
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    inner: Arc<Mutex<PoolImpl<<C as NetworkConnector>::Stream>>>,$/;"	m	struct:Pool
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    inner: Option<PooledStreamInner<S>>,$/;"	m	struct:PooledStream
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    inner: ::std::slice::Iter<'a, (HeaderName, Item)>$/;"	m	struct:HeadersItems
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^        fn inner<W: Write>(w: &mut W) -> io::Result<()> {$/;"	f	method:HttpWriter::end
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    inner: &'a mut fmt::Formatter<'b>,$/;"	m	struct:WriterFormatter
inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    inner: SpooledInner,$/;"	m	struct:SpooledTempFile
inotify	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    inotify: Option<Inotify>,$/;"	m	struct:EventLoop
inotify	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub mod inotify;$/;"	n
insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn insert(&mut self, name: &'a str) {$/;"	P	implementation:ArgMatcher
insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn insert(&mut self, key: usize, value: V) -> Option<V> {$/;"	P	implementation:vec_map::VecMap
insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    pub unsafe fn insert(&self, key: TypeId, val: Box<V>) {$/;"	P	implementation:PtrMapCell
insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn insert(&mut self, key: K, value: V) {$/;"	P	implementation:VecMap
insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn insert(self, val: V) -> &'a mut V {$/;"	P	implementation:VacantEntry
insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn insert(&mut self, k: String, v: Value) -> Option<Value> {$/;"	P	implementation:Map
insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn insert(&mut self, value: Value) -> Value {$/;"	P	implementation:OccupiedEntry
insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn insert(self, value: Value) -> &'a mut Value {$/;"	P	implementation:VacantEntry
installed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod installed;$/;"	n
installed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub installed: Option<ApplicationSecret>,$/;"	m	struct:ConsoleApplicationSecret
int_to_int	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^macro_rules! int_to_int {$/;"	M
int_to_uint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^macro_rules! int_to_uint {$/;"	M
integer128	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^mod integer128;$/;"	n
integer_128_types	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^fn integer_128_types() {$/;"	f
integer_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^macro_rules! integer_impl {$/;"	M
internal_n_mask	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn internal_n_mask(bit: u64, n: u64) -> u64 {$/;"	f
internals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^mod internals;$/;"	n
interval	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    pub interval: Duration,$/;"	m	struct:PollInformation
interval	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^                    interval: i64,$/;"	m	struct:request_code::JsonData
into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    fn into(self) -> ArgMatches<'a> {$/;"	P	implementation:ArgMatcher
into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn into(self) -> Body<'a> {$/;"	P	implementation:String
into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn into(self) -> Body<'a> {$/;"	P	implementation:str
into	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn into(self) -> Body<'a> {$/;"	P	implementation:u8
into_app	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^        fn into_app<'a, 'b>() -> clap::App<'a, 'b>;$/;"	P	interface:derive::IntoApp
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	P	interface:IntoDeserializer
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f	module:content
into_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	P	implementation:Value
into_downward_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub(crate) fn into_downward_float<F: Float>(mut self) -> F {$/;"	P	implementation:ExtendedFloat
into_erased	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn into_erased($/;"	f
into_file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn into_file(self) -> File {$/;"	P	implementation:NamedTempFile
into_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub(crate) fn into_float<F: Float>(mut self) -> F {$/;"	P	implementation:ExtendedFloat
into_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^pub(crate) fn into_float<F>(fp: ExtendedFloat) -> F$/;"	f
into_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/exponent.rs	/^fn into_i32(value: usize) -> i32 {$/;"	f
into_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn into_inner(self) -> R { self.inner }$/;"	P	implementation:BufReader
into_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub fn into_inner(mut self) -> S {$/;"	P	implementation:PooledStream
into_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn into_inner(self) -> Box<NetworkStream + Send> {$/;"	P	implementation:Http11Message
into_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:HttpReader
into_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn into_inner(self) -> T { self.obj.unwrap() }$/;"	P	implementation:Wrapper
into_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn into_inner(self) -> W {$/;"	P	implementation:HttpWriter
into_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    pub fn into_iter<T>(self) -> StreamDeserializer<'de, R, T>$/;"	P	implementation:Deserializer
into_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Map
into_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn into_mut(self) -> &'a mut V {$/;"	P	implementation:OccupiedEntry
into_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn into_mut(self) -> &'a mut Value {$/;"	P	implementation:OccupiedEntry
into_normal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    pub fn into_normal(self) -> Result<T1, Self> {$/;"	P	implementation:Proxied
into_parts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn into_parts(self) -> (R, Vec<u8>, usize, usize) {$/;"	P	implementation:BufReader
into_parts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn into_parts(self) -> (File, TempPath) {$/;"	P	implementation:NamedTempFile
into_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    pub fn into_path(mut self) -> PathBuf {$/;"	P	implementation:TempDir
into_temp_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn into_temp_path(self) -> TempPath {$/;"	P	implementation:NamedTempFile
into_tunneled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    pub fn into_tunneled(self) -> Result<T2, Self> {$/;"	P	implementation:Proxied
into_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn into_url(self) -> Result<Url, UrlError> {$/;"	P	implementation:String
into_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn into_url(self) -> Result<Url, UrlError> {$/;"	P	implementation:Url
into_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn into_url(self) -> Result<Url, UrlError> {$/;"	P	implementation:str
into_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn into_url(self) -> Result<Url, UrlError>;$/;"	P	interface:IntoUrl
invalid_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_raw_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_raw_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn invalid_subcommand<S, D, N, U>($/;"	P	implementation:Error
invalid_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f	module:content
invalid_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn invalid_type(self, exp: &dyn Expected) -> Error {$/;"	P	implementation:ParserNumber
invalid_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    fn invalid_type(unexp: de::Unexpected, exp: &dyn de::Expected) -> Self {$/;"	P	implementation:Error
invalid_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn invalid_type<E>(&self, exp: &dyn Expected) -> E$/;"	P	implementation:Value
invalid_utf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn invalid_utf8<U>(usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
invalid_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn invalid_value<B, G, U>($/;"	P	implementation:Error
io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub fn io(error: io::Error) -> Self {$/;"	P	implementation:Error
io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod io;$/;"	n
io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    io: sync::Arc<sync::Mutex<W>>,$/;"	m	struct:PlainSyncRecordDecorator
io_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn io_error(e: &Error, color: ColorWhen) -> Self {$/;"	P	implementation:Error
io_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  io_error: Option<io::Error>$/;"	m	struct:TlsStream
io_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^        fn io_error<E>(_: E) -> io::Error {$/;"	f	method:WriterFormatter::write
is	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn is<H: Header>(&self) -> bool {$/;"	P	implementation:HeaderView
is	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub fn is<T: Any>(&self) -> bool {$/;"	P	implementation:HttpMessage
is	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn is<T: Any>(&self) -> bool {$/;"	P	implementation:NetworkStream
is	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn is<T: Any>(&self) -> bool {$/;"	P	implementation:Send
is_a_tty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^pub fn is_a_tty(_: bool) -> bool {$/;"	f
is_a_tty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^pub fn is_a_tty(stderr: bool) -> bool {$/;"	f
is_alias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn is_alias(&self, value: &str) -> bool {$/;"	f
is_app_authorized	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub is_app_authorized: Option<bool>,$/;"	m	struct:File
is_array	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_array(&self) -> bool {$/;"	P	implementation:Value
is_at_least	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn is_at_least(&self, level: Self) -> bool {$/;"	P	implementation:Level
is_bin_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn is_bin_name(&self, value: &str) -> bool {$/;"	f
is_boolean	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_boolean(&self) -> bool {$/;"	P	implementation:Value
is_client_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn is_client_error(&self) -> bool {$/;"	P	implementation:StatusCode
is_closed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    is_closed: AtomicBool,$/;"	m	struct:PooledStream
is_closed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub is_closed: bool,$/;"	m	struct:MockStream
is_critical_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_critical_enabled(&self) -> bool {$/;"	P	interface:Drain
is_data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub fn is_data(&self) -> bool {$/;"	P	implementation:Error
is_debug_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_debug_enabled(&self) -> bool {$/;"	P	interface:Drain
is_denormal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_denormal(self) -> bool {$/;"	P	interface:Float
is_depleted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn is_depleted(&self) -> bool {$/;"	P	implementation:MultiPartReader
is_empty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:ArgMatcher
is_empty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn is_empty(&self) -> bool {$/;"	P	implementation:vec_map::VecMap
is_empty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Map
is_empty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Key
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, _1: Level) -> bool {$/;"	P	implementation:Discard
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	implementation:Arc
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	implementation:Box
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	implementation:D
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	implementation:Duplicate
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	implementation:IgnoreResult
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	implementation:LevelFilter
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	implementation:MapError
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	implementation:Mutex
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	P	interface:Drain
is_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_enabled(&self, level: Level) -> bool {$/;"	f
is_eof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub fn is_eof(&self) -> bool {$/;"	P	implementation:Error
is_error_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_error_enabled(&self) -> bool {$/;"	P	interface:Drain
is_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub fn is_f64(&self) -> bool {$/;"	P	implementation:Number
is_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_f64(&self) -> bool {$/;"	P	implementation:Value
is_human_readable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Deserializer
is_human_readable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Serializer
is_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub fn is_i64(&self) -> bool {$/;"	P	implementation:Number
is_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_i64(&self) -> bool {$/;"	P	implementation:Value
is_inf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_inf(self) -> bool {$/;"	P	interface:Float
is_info_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_info_enabled(&self) -> bool {$/;"	P	interface:Drain
is_informational	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn is_informational(&self) -> bool {$/;"	P	implementation:StatusCode
is_io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub fn is_io(&self) -> bool {$/;"	P	implementation:Error
is_last_part	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn is_last_part(&self) -> bool {$/;"	P	implementation:MultiPartReader
is_missing_required_ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn is_missing_required_ok(&self, a: &AnyArg, matcher: &ArgMatcher) -> bool {$/;"	P	implementation:Validator
is_new_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn is_new_arg(&mut self, arg_os: &OsStr, needs_val_of: ParseResult) -> bool {$/;"	f
is_null	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_null(&self) -> bool {$/;"	P	implementation:Value
is_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_number(&self) -> bool {$/;"	P	implementation:Value
is_object	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_object(&self) -> bool {$/;"	P	implementation:Value
is_present	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn is_present(&self, name: &str) -> bool {$/;"	P	implementation:ArgMatcher
is_present	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn is_present<S: AsRef<str>>(&self, name: S) -> bool {$/;"	P	implementation:ArgMatches
is_proxied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    is_proxied: bool,$/;"	m	struct:Http11Message
is_recursive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn is_recursive(&self) -> bool {$/;"	P	implementation:RecursiveMode
is_recursive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    is_recursive: bool,$/;"	m	struct:WatchData
is_recursive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    is_recursive: bool,$/;"	m	struct:ReadData
is_redirection	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn is_redirection(&self) -> bool {$/;"	P	implementation:StatusCode
is_rolled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    pub fn is_rolled(&self) -> bool {$/;"	P	implementation:SpooledTempFile
is_running	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn is_running(&self) -> bool {$/;"	P	implementation:FsEventWatcher
is_server_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn is_server_error(&self) -> bool {$/;"	P	implementation:StatusCode
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn is_set(&self, _: ArgSettings) -> bool {$/;"	P	implementation:App
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn is_set(&self, s: AS) -> bool {$/;"	f
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn is_set(&self, ArgSettings) -> bool;$/;"	P	interface:AnyArg
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn is_set(&self, a: ArgSettings) -> bool {$/;"	f
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:Arg
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:Base
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:FlagBuilder
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:OptBuilder
is_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:PosBuilder
is_sign_negative	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_sign_negative(self) -> bool {$/;"	P	implementation:f32
is_sign_negative	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_sign_negative(self) -> bool {$/;"	P	implementation:f64
is_sign_negative	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_sign_negative(self) -> bool;$/;"	P	interface:Float
is_sign_positive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_sign_positive(self) -> bool {$/;"	P	implementation:f32
is_sign_positive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_sign_positive(self) -> bool {$/;"	P	implementation:f64
is_sign_positive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_sign_positive(self) -> bool;$/;"	P	interface:Float
is_special	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn is_special(self) -> bool {$/;"	P	interface:Float
is_stale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^        pub fn is_stale(self) -> bool {$/;"	P	implementation:stale::Stale
is_strange_status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn is_strange_status(&self) -> bool {$/;"	P	implementation:StatusCode
is_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_string(&self) -> bool {$/;"	P	implementation:Value
is_success	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn is_success(&self) -> bool {$/;"	P	implementation:StatusCode
is_syntax	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub fn is_syntax(&self) -> bool {$/;"	P	implementation:Error
is_term_dumb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^pub fn is_term_dumb() -> bool {$/;"	f
is_trace_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_trace_enabled(&self) -> bool {$/;"	P	interface:Drain
is_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub fn is_u64(&self) -> bool {$/;"	P	implementation:Number
is_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn is_u64(&self) -> bool {$/;"	P	implementation:Value
is_warning_enabled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn is_warning_enabled(&self) -> bool {$/;"	P	interface:Drain
ishl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn ishl(&mut self, n: usize) {$/;"	P	interface:Math
ishl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn ishl(x: &mut Vec<Limb>, n: usize) {$/;"	f	module:small
ishl_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn ishl_bits(x: &mut Vec<Limb>, n: usize) {$/;"	f	module:small
ishl_limbs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn ishl_limbs(x: &mut Vec<Limb>, n: usize) {$/;"	f	module:small
iso_speed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub iso_speed: Option<i32>,$/;"	m	struct:FileImageMediaMetadata
iss	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    iss: String,$/;"	m	struct:Claims
isub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn isub(x: &mut Limb, y: Limb) -> bool {$/;"	f	module:scalar
isub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn isub(x: &mut Vec<Limb>, y: &[Limb]) {$/;"	f	module:large
isub_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn isub_impl(x: &mut Vec<Limb>, y: Limb, xstart: usize) {$/;"	f	module:small
item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/mod.rs	/^mod item;$/;"	n
item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    pub item: T,$/;"	m	struct:QualityItem
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn iter(&self) -> Iter<&str, MatchedArg> {$/;"	P	implementation:ArgMatcher
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    iter: Map<Iter<'a, OsString>, fn(&'a OsString) -> &'a OsStr>,$/;"	m	struct:OsValues
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    iter: Map<Iter<'a, OsString>, fn(&'a OsString) -> &'a str>,$/;"	m	struct:Values
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    iter: Map<Iter<'a, usize>, fn(&'a usize) -> usize>,$/;"	m	struct:Indices
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn iter(&self) -> Iter<V> {$/;"	P	implementation:vec_map::VecMap
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn iter(&self) -> ::std::slice::Iter<(K, V)> {$/;"	P	implementation:VecMap
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn iter(&self) -> HeadersItems {$/;"	P	implementation:Headers
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:MapDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:SeqDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        iter: <&'a [(Content<'de>, Content<'de>)] as IntoIterator>::IntoIter,$/;"	m	struct:content::MapRefDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        iter: <&'a [Content<'de>] as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqRefDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        iter: <Vec<(Content<'de>, Content<'de>)> as IntoIterator>::IntoIter,$/;"	m	struct:content::MapDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        iter: <Vec<Content<'de>> as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    iter: slice::Iter<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatMapAccess
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatInternallyTaggedAccess
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatStructAccess
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    iter: I,$/;"	m	struct:LineColIterator
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod iter;$/;"	n
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    iter: IntoIterImpl,$/;"	m	struct:IntoIter
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    iter: IterImpl<'a>,$/;"	m	struct:Iter
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    iter: IterMutImpl<'a>,$/;"	m	struct:IterMut
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    iter: KeysImpl<'a>,$/;"	m	struct:Keys
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    iter: ValuesImpl<'a>,$/;"	m	struct:Values
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    iter: ValuesMutImpl<'a>,$/;"	m	struct:ValuesMut
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn iter(&self) -> Iter {$/;"	P	implementation:Map
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    iter: LineColIterator<io::Bytes<R>>,$/;"	m	struct:IoRead
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    iter: <&'de Map<String, Value> as IntoIterator>::IntoIter,$/;"	m	struct:MapRefDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    iter: <Map<String, Value> as IntoIterator>::IntoIter,$/;"	m	struct:MapDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    iter: slice::Iter<'de, Value>,$/;"	m	struct:SeqRefDeserializer
iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    iter: vec::IntoIter<Value>,$/;"	m	struct:SeqDeserializer
iter_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut {$/;"	P	implementation:Map
iterator_len_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
join	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    join: Mutex<Option<thread::JoinHandle<()>>>,$/;"	m	struct:AsyncCore
join	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    join: Option<thread::JoinHandle<()>>,$/;"	m	struct:AsyncGuard
jpeg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_type.rs	/^    pub fn jpeg() -> ContentType {$/;"	P	implementation:ContentType
json	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept.rs	/^    pub fn json() -> Accept {$/;"	P	implementation:Accept
json	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_type.rs	/^    pub fn json() -> ContentType {$/;"	P	implementation:ContentType
json	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/macros.rs	/^macro_rules! json {$/;"	M
json	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    json: str,$/;"	m	struct:RawValue
json_expect_expr_comma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/macros.rs	/^macro_rules! json_expect_expr_comma {$/;"	M
json_internal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/macros.rs	/^macro_rules! json_internal {$/;"	M
json_internal_vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/macros.rs	/^macro_rules! json_internal_vec {$/;"	M
json_unexpected	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/macros.rs	/^macro_rules! json_unexpected {$/;"	M
karatsuba_mul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn karatsuba_mul(x: &[Limb], y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
karatsuba_mul_fwd	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn karatsuba_mul_fwd(x: &[Limb], y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
karatsuba_split	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn karatsuba_split(z: &[Limb], m: usize) -> (&[Limb], &[Limb]) {$/;"	f	module:large
karatsuba_uneven_mul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn karatsuba_uneven_mul(x: &[Limb], mut y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
keep	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/other.rs	/^pub fn keep(path: &Path) -> io::Result<()> {$/;"	f
keep	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^pub fn keep(_: &Path) -> io::Result<()> {$/;"	f
keep	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/windows.rs	/^pub fn keep(path: &Path) -> io::Result<()> {$/;"	f
keep	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn keep(mut self) -> Result<PathBuf, PathPersistError> {$/;"	P	implementation:TempPath
keep	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn keep(self) -> Result<(File, PathBuf), PersistError> {$/;"	P	implementation:NamedTempFile
keep_alive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    pub fn keep_alive() -> Connection {$/;"	P	implementation:Connection
keep_alive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    keep_alive: Option<Duration>,$/;"	m	struct:Timeouts
keep_alive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn keep_alive(&mut self, timeout: Option<Duration>) {$/;"	P	implementation:Server
keep_alive_loop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn keep_alive_loop<W: Write>(&self, rdr: &mut BufReader<&mut NetworkStream>,$/;"	P	implementation:Worker
keep_forever	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub keep_forever: Option<bool>,$/;"	m	struct:Revision
keep_revision_forever	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn keep_revision_forever(mut self, new_value: bool) -> FileCopyCall<'a, C, A> {$/;"	f
keep_revision_forever	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn keep_revision_forever(mut self, new_value: bool) -> FileCreateCall<'a, C, A> {$/;"	f
keep_revision_forever	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn keep_revision_forever(mut self, new_value: bool) -> FileUpdateCall<'a, C, A> {$/;"	f
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    key: Key,$/;"	m	struct:PooledStreamInner
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^fn key<T: Into<Scheme>>(host: &str, port: u16, scheme: T) -> Key {$/;"	f
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    key: K,$/;"	m	struct:VacantEntry
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        key: Option<Content>,$/;"	m	struct:content::SerializeMap
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:Entry
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:OccupiedEntry
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:VacantEntry
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    key: Cow<'de, str>,$/;"	m	struct:MapKeyDeserializer
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    key: Key,$/;"	m	struct:PushFnValueSerializer
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^mod key;$/;"	n
key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    key: ServiceAccountKey,$/;"	m	struct:ServiceAccountAccess
key_must_be_a_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
key_must_be_a_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
key_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub key_type: Option<String>,$/;"	m	struct:ServiceAccountKey
keys	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn keys(&self) -> Keys {$/;"	P	implementation:Map
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub kind: ErrorKind,$/;"	m	struct:Error
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:About
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:Change
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:ChangeList
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:Channel
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:Comment
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:CommentList
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:Drive
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:DriveList
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:File
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:FileList
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:GeneratedIds
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:Permission
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:PermissionList
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:Reply
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:ReplyList
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:Revision
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:RevisionList
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:StartPageToken
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:TeamDrive
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:TeamDriveList
kind	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub kind: Option<String>,$/;"	m	struct:User
kv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    kv: BorrowedKV<'a>,$/;"	m	struct:Record
kv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    kv: T,$/;"	m	struct:OwnedKVListNode
kv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn kv(&self) -> BorrowedKV {$/;"	P	implementation:Record
kv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! kv($/;"	M
kv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    kv: Box<dyn KV + Send>,$/;"	m	struct:AsyncRecord
kv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    kv: Box<dyn KV + Send>,$/;"	m	struct:ToSendSerializer
language_tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    pub language_tag: Option<LanguageTag>,$/;"	m	struct:ExtendedValue
large	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub large: ExtendedFloatArray,$/;"	m	struct:ModeratePathPowers
large	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^mod large {$/;"	n
large_atof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bhcomp.rs	/^fn large_atof<F>(mantissa: Bigint, exponent: i32) -> F$/;"	f
large_powers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod large_powers;$/;"	n
large_powers32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod large_powers32;$/;"	n
large_powers64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod large_powers64;$/;"	n
last	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn last(self, l: bool) -> Self {$/;"	P	implementation:Arg
last	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub last: u64$/;"	m	struct:Chunk
last_check	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    last_check: Instant,$/;"	m	struct:PathData
last_modified	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod last_modified;$/;"	n
last_modifying_user	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub last_modifying_user: Option<User>,$/;"	m	struct:File
last_modifying_user	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub last_modifying_user: Option<User>,$/;"	m	struct:Revision
last_part_boundary	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    last_part_boundary: Option<Cursor<Vec<u8>>>,$/;"	m	struct:MultiPartReader
latency	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    latency: cf::CFTimeInterval,$/;"	m	struct:FsEventWatcher
latitude	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub latitude: Option<f64>,$/;"	m	struct:FileImageMediaMetadataLocation
lazy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^pub mod lazy;$/;"	n
lazy_static	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/lazy_static-1.4.0/src/lib.rs	/^macro_rules! lazy_static {$/;"	M
leading_zeros	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn leading_zeros(x: &[Limb]) -> usize {$/;"	f	module:small
len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn len(&self) -> usize {$/;"	P	implementation:vec_map::VecMap
len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn len(&self) -> usize { self.vec.len() }$/;"	P	implementation:VecMap
len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Headers
len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        len: usize,$/;"	m	struct:private::SeedTupleVariant
len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:ExtendedFloatArray
len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Map
len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Key
len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/dynamic_nostd.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Key
lens	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub lens: Option<String>,$/;"	m	struct:FileImageMediaMetadata
less	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn less(x: &[Limb], y: &[Limb]) -> bool {$/;"	f	module:large
level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	P	implementation:Record
level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub level: Level,$/;"	m	struct:RecordStatic
level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    level: Level,$/;"	m	struct:AsyncRecord
level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    level: slog::Level,$/;"	m	struct:TermRecordDecorator
level_at_least	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn level_at_least() {$/;"	f
level_from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn level_from_str() {$/;"	f
level_to_color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn level_to_color(level: slog::Level) -> u16 {$/;"	P	implementation:TermDecorator
level_to_string_and_from_str_are_compatible	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn level_to_string_and_from_str_are_compatible() {$/;"	f
lexical	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod lexical;$/;"	n
lib	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^mod lib {$/;"	n
lib	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod lib {$/;"	n
lifetime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    lifetime: PhantomData<&'de ()>,$/;"	m	struct:MapDeserializer
lifetime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    lifetime: PhantomData<&'de ()>,$/;"	m	struct:StreamDeserializer
limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub limit: Option<String>,$/;"	m	struct:AboutStorageQuota
line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    line: usize,$/;"	m	struct:ErrorImpl
line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub fn line(&self) -> usize {$/;"	P	implementation:Error
line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    line: usize,$/;"	m	struct:LineColIterator
line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    pub fn line(&self) -> usize {$/;"	f
line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    pub line: usize,$/;"	m	struct:Position
line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn line(&self) -> u32 {$/;"	P	implementation:Record
line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub line: u32,$/;"	m	struct:RecordLocation
lines	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    macro_rules! lines {$/;"	M	module:tests
link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    link: Cow<'static, str>,$/;"	m	struct:LinkValue
link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn link(&self) -> &str {$/;"	P	implementation:LinkValue
link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod link;$/;"	n
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn list(&self) -> DriveListCall<'a, C, A> {$/;"	P	implementation:DriveMethods
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn list(&self) -> FileListCall<'a, C, A> {$/;"	P	implementation:FileMethods
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn list(&self) -> TeamdriveListCall<'a, C, A> {$/;"	P	implementation:TeamdriveMethods
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn list(&self, file_id: &str) -> CommentListCall<'a, C, A> {$/;"	P	implementation:CommentMethods
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn list(&self, file_id: &str) -> PermissionListCall<'a, C, A> {$/;"	P	implementation:PermissionMethods
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn list(&self, file_id: &str) -> RevisionListCall<'a, C, A> {$/;"	P	implementation:RevisionMethods
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn list(&self, file_id: &str, comment_id: &str) -> ReplyListCall<'a, C, A> {$/;"	P	implementation:ReplyMethods
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn list(&self, page_token: &str) -> ChangeListCall<'a, C, A> {$/;"	P	implementation:ChangeMethods
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    list: OwnedKVList,$/;"	m	struct:Logger
list	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn list(&self) -> &OwnedKVList {$/;"	f
listener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    listener: Arc<TcpListener>,$/;"	m	struct:HttpListener
listener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    listener: HttpListener,$/;"	m	struct:HttpsListener
listener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    listener: L,$/;"	m	struct:Server
listener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^mod listener;$/;"	n
load_certs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub fn load_certs(filename: &str) -> io::Result<Vec<rustls::Certificate>> {$/;"	f	module:util
load_from_file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn load_from_file(&mut self) -> Result<(), io::Error> {$/;"	P	implementation:DiskTokenStorage
load_private_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub fn load_private_key(filename: &str) -> io::Result<rustls::PrivateKey> {$/;"	f	module:util
load_yaml	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! load_yaml {$/;"	M
local_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn local_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:HttpListener
local_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn local_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:HttpsListener
local_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn local_addr(&mut self) -> io::Result<SocketAddr>;$/;"	P	interface:NetworkListener
local_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn local_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:Server
local_dir_to_drive_file_id	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn local_dir_to_drive_file_id(hub: &Hub, path: &str) -> Option<String> {$/;"	f
location	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub location: Option<String>$/;"	m	struct:ServerMessage
location	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub location: Option<FileImageMediaMetadataLocation>,$/;"	m	struct:FileImageMediaMetadata
location	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod location;$/;"	n
location	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn location(&self) -> &RecordLocation {$/;"	P	implementation:Record
location	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub location: &'a RecordLocation,$/;"	m	struct:RecordStatic
location	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    location: Box<slog::RecordLocation>,$/;"	m	struct:AsyncRecord
location	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    location: String,$/;"	m	struct:DiskTokenStorage
location_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub location_type: Option<String>,$/;"	m	struct:ServerMessage
lock	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn lock(&self) -> MutexGuard<TlsStream> {$/;"	P	implementation:WrappedStream
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	implementation:Arc
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	implementation:Box
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	implementation:D
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	implementation:Duplicate
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	implementation:IgnoreResult
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	implementation:LevelFilter
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	implementation:MapError
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	implementation:Mutex
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	P	interface:Drain
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log($/;"	f
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn log(&self, _: &Record, _: &OwnedKVList) -> result::Result<(), Never> {$/;"	P	implementation:Discard
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn log(&self, record: &Record) {$/;"	f
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! log($/;"	M
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^            fn log($/;"	P	implementation:std_only::multichain::CheckOwned
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn log($/;"	P	implementation:Async
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn log($/;"	P	implementation:AsyncCore
log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn log($/;"	f
logger_by_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^fn logger_by_ref() {$/;"	f
logger_fmt_debug_sanity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    fn logger_fmt_debug_sanity() {$/;"	f	module:std_only
logger_to_erased	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^fn logger_to_erased() {$/;"	f
logger_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    logger_values: OwnedKVList,$/;"	m	struct:AsyncRecord
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn long<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	P	implementation:Help
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	P	implementation:App
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	f
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn long(&self) -> Option<&'e str>;$/;"	P	interface:AnyArg
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn long(mut self, l: &'b str) -> Self {$/;"	P	implementation:Arg
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	P	implementation:FlagBuilder
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	P	implementation:OptBuilder
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn long(&self) -> Option<&'e str> {$/;"	P	implementation:PosBuilder
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^    pub long: Option<&'b str>,$/;"	m	struct:Switched
long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn long(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
long_about	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub long_about: Option<&'b str>,$/;"	m	struct:AppMeta
long_about	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn long_about<S: Into<&'b str>>(mut self, about: S) -> Self {$/;"	P	implementation:App
long_end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^fn long_end(b: u8) -> bool {$/;"	f
long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	P	implementation:App
long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	f
long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn long_help(&self) -> Option<&'e str>;$/;"	P	interface:AnyArg
long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn long_help(mut self, h: &'b str) -> Self {$/;"	P	implementation:Arg
long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub long_help: Option<&'b str>,$/;"	m	struct:Base
long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	P	implementation:FlagBuilder
long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	P	implementation:OptBuilder
long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn long_help(&self) -> Option<&'e str> {$/;"	P	implementation:PosBuilder
long_mul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn long_mul(x: &[Limb], y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
long_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub long_version: Option<&'b str>,$/;"	m	struct:AppMeta
long_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn long_version<S: Into<&'b str>>(mut self, ver: S) -> Self {$/;"	P	implementation:App
longest	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    longest: usize,$/;"	m	struct:Help
longest_filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn longest_filter(&self) -> bool {$/;"	P	implementation:App
longest_filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn longest_filter(&self) -> bool {$/;"	f
longest_filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn longest_filter(&self) -> bool;$/;"	P	interface:AnyArg
longest_filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn longest_filter(&self) -> bool {$/;"	P	implementation:FlagBuilder
longest_filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn longest_filter(&self) -> bool {$/;"	P	implementation:OptBuilder
longest_filter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn longest_filter(&self) -> bool {$/;"	P	implementation:PosBuilder
longitude	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub longitude: Option<f64>,$/;"	m	struct:FileImageMediaMetadataLocation
longs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! longs {$/;"	M
lookup	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn lookup(&self, key: &Key) -> Option<PooledStreamInner<C::Stream>> {$/;"	P	implementation:Pool
lower_n_halfway	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn lower_n_halfway(n: u64) -> u64 {$/;"	f
lower_n_mask	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn lower_n_mask(n: u64) -> u64 {$/;"	f
macros	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^mod macros;$/;"	n
macros	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^mod macros;$/;"	n
macros	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod macros;$/;"	n
macros	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^mod macros;$/;"	n
macros	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/mod.rs	/^mod macros;$/;"	n
macros	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod macros;$/;"	n
main	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn main() {$/;"	f
make_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^fn make_error(mut msg: String) -> Error {$/;"	f
makers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^fn makers() {$/;"	f
mant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub mant: &'static [u64],$/;"	m	struct:ExtendedFloatArray
mant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub mant: u64,$/;"	m	struct:ExtendedFloat
mantissa	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn mantissa(self) -> Self::Unsigned {$/;"	P	interface:Float
mantissa_exponent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/exponent.rs	/^pub(crate) fn mantissa_exponent(exponent: i32, fraction_digits: usize, truncated: usize) -> i32 /;"	f
mantissa_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn mantissa_limit() -> i32 {$/;"	P	implementation:f32
mantissa_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn mantissa_limit() -> i32 {$/;"	P	implementation:f64
mantissa_limit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn mantissa_limit() -> i32;$/;"	P	interface:Float
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod map;$/;"	n
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        map: A,$/;"	m	struct:private::MapAsEnum
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    map: A,$/;"	m	struct:MapAccessDeserializer
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeStructVariantAsMapValue
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    map: &'a mut M,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^pub mod map;$/;"	n
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    map: MapImpl<K, V>,$/;"	m	struct:Map
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    map: Map<String, Value>,$/;"	m	struct:SerializeStructVariant
map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn map<F, R>(self, f: F) -> R$/;"	P	interface:Drain
map_as_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f	module:private
map_err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn map_err<F, E>(self, f: F) -> MapError<Self, E>$/;"	P	interface:Drain
map_fn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    map_fn: Box<MapErrFn<D::Err, E, Output = E>>,$/;"	m	struct:MapError
map_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! map_impl {$/;"	M
map_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	M
map_in_place	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn map_in_place<F>(&mut self, f: F) where F: FnOnce(T) -> T {$/;"	P	implementation:Wrapper
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            marker: PhantomData<T>,$/;"	m	struct:deserialize::VecVisitor
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    marker: PhantomData<A>,$/;"	m	struct:ArrayVisitor
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:OptionVisitor
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:PhantomDataVisitor
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        marker: PhantomData<E>,$/;"	m	struct:private::UnitOnly
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedBytesDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedStrDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:CowStrDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:NeverDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:SeqDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StringDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:U32Deserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:UnitDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BytesDeserializer
marker	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
matched_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^mod matched_arg;$/;"	n
matches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/subcommand.rs	/^    pub matches: ArgMatches<'a>,$/;"	m	struct:SubCommand
math	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^pub(crate) mod math;$/;"	n
max	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn max() -> Self {$/;"	P	implementation:FilterLevel
max_age	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    pub max_age: u64$/;"	m	struct:StrictTransportSecurity
max_aperture_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub max_aperture_value: Option<f32>,$/;"	m	struct:FileImageMediaMetadata
max_idle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    max_idle: usize,$/;"	m	struct:Config2
max_idle	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub max_idle: usize,$/;"	m	struct:Config
max_import_sizes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub max_import_sizes: Option<HashMap<String, String>>,$/;"	m	struct:About
max_input_chunk_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    max_input_chunk_len: usize,$/;"	m	struct:ChunkedEncoder
max_input_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^fn max_input_length(encoded_buf_len: usize, config: Config) -> usize {$/;"	f
max_input_length_cant_use_extra_single_encoded_byte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn max_input_length_cant_use_extra_single_encoded_byte() {$/;"	f	module:tests
max_input_length_no_pad	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn max_input_length_no_pad() {$/;"	f	module:tests
max_input_length_with_pad_decrements_one_triple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn max_input_length_with_pad_decrements_one_triple() {$/;"	f	module:tests
max_input_length_with_pad_fits_exactly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn max_input_length_with_pad_fits_exactly() {$/;"	f	module:tests
max_input_length_with_pad_one_byte_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn max_input_length_with_pad_one_byte_short() {$/;"	f	module:tests
max_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    max_size: usize,$/;"	m	struct:SpooledTempFile
max_term_width	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn max_term_width(mut self, w: usize) -> Self {$/;"	P	implementation:App
max_upload_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub max_upload_size: Option<String>,$/;"	m	struct:About
max_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	P	implementation:App
max_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	f
max_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn max_vals(&self) -> Option<u64>;$/;"	P	interface:AnyArg
max_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	P	implementation:FlagBuilder
max_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	P	implementation:OptBuilder
max_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn max_vals(&self) -> Option<u64> {$/;"	P	implementation:PosBuilder
max_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub max_vals: Option<u64>,$/;"	m	struct:Valued
max_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn max_values(mut self, qty: u64) -> Self {$/;"	P	implementation:Arg
max_w	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub max_w: Option<usize>,$/;"	m	struct:AppMeta
maybe_print_comma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn maybe_print_comma(&mut self) -> io::Result<()> {$/;"	P	implementation:Serializer
maybe_reserve	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    fn maybe_reserve(&mut self) {$/;"	P	implementation:BufReader
md5_checksum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub md5_checksum: Option<String>,$/;"	m	struct:File
md5_checksum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub md5_checksum: Option<String>,$/;"	m	struct:Revision
me	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub me: Option<bool>,$/;"	m	struct:User
media_desc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    media_desc: Option<Vec<MediaDesc>>,$/;"	m	struct:LinkValue
media_desc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn media_desc(&self) -> Option<&[MediaDesc]> {$/;"	P	implementation:LinkValue
media_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub media_type: Mime,$/;"	m	struct:ResumableUploadHelper
media_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    media_type: Option<Mime>,$/;"	m	struct:LinkValue
media_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn media_type(&self) -> Option<&Mime> {$/;"	P	implementation:LinkValue
message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub message: String,$/;"	m	struct:Error
message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub message: String,$/;"	m	struct:ServerError
message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub message: String,$/;"	m	struct:ServerMessage
message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    message: Box<HttpMessage>,$/;"	m	struct:Request
message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    message: Box<HttpMessage>,$/;"	m	struct:Response
message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/mod.rs	/^pub mod message;$/;"	n
meta	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^mod meta;$/;"	n
meta	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub meta: AppMeta<'b>,$/;"	m	struct:Parser
meta_tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    meta_tx: Sender<MetaEvent>,$/;"	m	struct:ReadDirectoryChangesServer
metering_mode	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub metering_mode: Option<String>,$/;"	m	struct:FileImageMediaMetadata
method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    method: Method,$/;"	m	struct:RequestBuilder
method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    method: Method,$/;"	m	struct:Request
method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn method(&self) -> Method { self.method.clone() }$/;"	P	implementation:Request
method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    method: Option<Method>,$/;"	m	struct:Http11Message
method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub method: method::Method,$/;"	m	struct:RequestHead
method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod method;$/;"	n
method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub method: Method,$/;"	m	struct:Request
mime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod mime {$/;"	n
mime_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub fn mime_type(&self) -> Mime {$/;"	P	implementation:MultiPartReader
mime_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn mime_type(mut self, new_value: &str) -> FileExportCall<'a, C, A> {$/;"	f
mime_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub mime_type: Option<String>,$/;"	m	struct:CommentQuotedFileContent
mime_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub mime_type: Option<String>,$/;"	m	struct:File
mime_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub mime_type: Option<String>,$/;"	m	struct:FileContentHintsThumbnail
mime_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub mime_type: Option<String>,$/;"	m	struct:Revision
min	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn min() -> Self {$/;"	P	implementation:FilterLevel
min_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	P	implementation:App
min_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	f
min_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn min_vals(&self) -> Option<u64>;$/;"	P	interface:AnyArg
min_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	P	implementation:FlagBuilder
min_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	P	implementation:OptBuilder
min_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn min_vals(&self) -> Option<u64> {$/;"	P	implementation:PosBuilder
min_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub min_vals: Option<u64>,$/;"	m	struct:Valued
min_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn min_values(mut self, qty: u64) -> Self {$/;"	P	implementation:Arg
missing_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
missing_required_argument	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn missing_required_argument<R, U>(required: R, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
missing_required_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn missing_required_error(&self, matcher: &ArgMatcher, extra: Option<&str>) -> ClapResult<()/;"	P	implementation:Validator
missing_subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn missing_subcommand<N, U>(name: N, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
mixed_bitflags_form	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn mixed_bitflags_form() {$/;"	f	module:op_test
mkdir	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn mkdir(hub: &Hub, path: &str) -> std::result::Result<u16, String> {$/;"	f
mock	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^mod mock;$/;"	n
mock_connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^macro_rules! mock_connector ($/;"	M
mocked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    macro_rules! mocked {$/;"	M	module:tests
moderate_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/algorithm.rs	/^pub(crate) fn moderate_path<F>($/;"	f
modified_by_me	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub modified_by_me: Option<bool>,$/;"	m	struct:File
modified_by_me_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub modified_by_me_time: Option<String>,$/;"	m	struct:File
modified_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub modified_time: Option<String>,$/;"	m	struct:Comment
modified_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub modified_time: Option<String>,$/;"	m	struct:File
modified_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub modified_time: Option<String>,$/;"	m	struct:Reply
modified_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub modified_time: Option<String>,$/;"	m	struct:Revision
module	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn module(&self) -> &'static str {$/;"	P	implementation:Record
module	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub module: &'static str,$/;"	m	struct:RecordLocation
more_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub more_help: Option<&'b str>,$/;"	m	struct:AppMeta
move_to_new_owners_root	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn move_to_new_owners_root(mut self, new_value: bool) -> PermissionCreateCall<'a, C, A> /;"	f
msg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    msg: &'a fmt::Arguments<'a>,$/;"	m	struct:Record
msg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn msg(&self) -> &fmt::Arguments {$/;"	P	implementation:Record
msg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    msg: String,$/;"	m	struct:AsyncRecord
mtime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    mtime: i64,$/;"	m	struct:PathData
mul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub(crate) fn mul(&self, b: &ExtendedFloat) -> ExtendedFloat {$/;"	P	implementation:ExtendedFloat
mul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn mul(x: &[Limb], y: Limb) -> Vec<Limb> {$/;"	f	module:small
mul	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn mul(x: Limb, y: Limb, carry: Limb) -> (Limb, Limb) {$/;"	f	module:scalar
multichain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    fn multichain() {$/;"	f	module:std_only
multiple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn multiple(self, multi: bool) -> Self {$/;"	P	implementation:Arg
multiple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn multiple(mut self, m: bool) -> Self {$/;"	P	implementation:ArgGroup
multiple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub multiple: bool,$/;"	m	struct:ArgGroup
multiple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn multiple(&mut self, arg: &mut Arg) {$/;"	P	implementation:UsageParser
multiple_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    pub fn multiple_str(&self) -> &str {$/;"	P	implementation:PosBuilder
multiply_exponent_extended	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/algorithm.rs	/^fn multiply_exponent_extended<F>(fp: &mut ExtendedFloat, exponent: i32, truncated: bool) -> bool$/;"	f
n	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    n: N,$/;"	m	struct:Number
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub name: String,$/;"	m	struct:AppMeta
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn name(&self) -> &'n str {$/;"	P	implementation:App
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn name<S: Into<String>>(mut self, name: S) -> Self {$/;"	P	implementation:App
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn name(&self) -> &'n str {$/;"	f
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn name(&self) -> &'n str;$/;"	P	interface:AnyArg
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub name: &'a str,$/;"	m	struct:Base
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn name(&self) -> &'n str {$/;"	P	implementation:FlagBuilder
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn name(&self) -> &'n str {$/;"	P	implementation:OptBuilder
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn name(&self) -> &'n str {$/;"	P	implementation:PosBuilder
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub name: &'a str,$/;"	m	struct:ArgGroup
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/subcommand.rs	/^    pub name: String,$/;"	m	struct:SubCommand
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn name(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub name: Option<String>,$/;"	m	struct:Drive
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub name: Option<String>,$/;"	m	struct:File
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub name: Option<String>,$/;"	m	struct:TeamDrive
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    pub name: ProtocolName,$/;"	m	struct:Protocol
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn name(&self) -> &'a str {$/;"	P	implementation:HeaderView
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^    fn name(&self) -> &str {$/;"	P	implementation:Charset
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        name: &'static str,$/;"	m	struct:content::TagOrContentVisitor
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStruct
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariant
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariantAsMapValue
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleStruct
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariant
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    name: &'static str,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    name: String,$/;"	m	struct:SerializeStructVariant
name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    name: String,$/;"	m	struct:SerializeTupleVariant
name_end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^fn name_end(b: u8) -> bool {$/;"	f
name_no_brackets	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    pub fn name_no_brackets(&self) -> Cow<str> {$/;"	P	implementation:PosBuilder
names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    names: &'static [&'static str],$/;"	m	struct:OneOf
nearest_error_is_accurate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^fn nearest_error_is_accurate(errors: u64, fp: &ExtendedFloat, extrabits: u64) -> bool {$/;"	f
needs_flags_tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/usage.rs	/^fn needs_flags_tag(p: &Parser) -> bool {$/;"	f
needs_more_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn needs_more_vals<'b, A>(&self, o: &A) -> bool$/;"	P	implementation:ArgMatcher
net	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod net;$/;"	n
never	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    never: !,$/;"	m	struct:NeverDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    pub fn new(config: Config) -> ChunkedEncoder {$/;"	P	implementation:ChunkedEncoder
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    pub(crate) fn new(s: &mut String) -> StringSink {$/;"	P	implementation:StringSink
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    pub fn new(char_set: CharacterSet, pad: bool) -> Config {$/;"	P	implementation:Config
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    pub fn new(r: &'a mut R, config: Config) -> Self {$/;"	P	implementation:DecoderReader
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    pub fn new(w: &'a mut W, config: Config) -> EncoderWriter<'a, W> {$/;"	P	implementation:EncoderWriter
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn new($/;"	P	implementation:Help
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub fn new() -> Self {$/;"	P	implementation:AppMeta
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn new<S: Into<String>>(n: S) -> Self {$/;"	P	implementation:App
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    pub fn new() -> Self {$/;"	P	implementation:AppFlags
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    pub fn new(p: &'z mut Parser<'a, 'b>) -> Self {$/;"	P	implementation:Validator
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	P	implementation:Base
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	P	implementation:FlagBuilder
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    pub fn new(name: &'n str) -> Self {$/;"	P	implementation:OptBuilder
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    pub fn new(name: &'n str, idx: u64) -> Self {$/;"	P	implementation:PosBuilder
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ArgMatcher
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ArgMatches
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/matched_arg.rs	/^    pub fn new() -> Self {$/;"	P	implementation:MatchedArg
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ArgFlags
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:BashGen
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/elvish.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:ElvishGen
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/fish.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:FishGen
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:ComplGen
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/powershell.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:PowerShellGen
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/zsh.rs	/^    pub fn new(p: &'b Parser<'a, 'b>) -> Self {$/;"	P	implementation:ZshGen
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    pub fn new(option: ColorizerOption) -> Colorizer {$/;"	P	implementation:Colorizer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn new() -> Self {$/;"	P	implementation:vec_map::VecMap
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn new(usage: &'a str) -> Self {$/;"	P	implementation:UsageParser
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn new(client: C, authenticator: A) -> DriveHub<C, A> {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn new(rdr: R) -> BufReader<R> {$/;"	P	implementation:BufReader
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn new() -> Client {$/;"	P	implementation:Client
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn new<H: Into<Cow<'static, str>>>(scheme: &str, host: H, port: u16, connector: C, ssl: /;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub fn new(config: Config) -> Pool<DefaultConnector> {$/;"	P	implementation:Pool
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn new(method: Method, url: Url) -> ::Result<Request<Fresh>> {$/;"	P	implementation:Request
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    pub fn new(url: Url, stream: Box<NetworkStream + Send>) -> ::Result<Response> {$/;"	P	implementation:Response
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn new(s: &'a str, d: &'a str) -> SplitAsciiUnquoted<'a> {$/;"	P	implementation:SplitAsciiUnquoted
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn new(link_values: Vec<LinkValue>) -> Link {$/;"	P	implementation:Link
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn new<T>(uri: T) -> LinkValue$/;"	P	implementation:LinkValue
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    pub fn new<S: Into<String>, H: Into<String>>(scheme: S, hostname: H, port: Option<u16>) -> O/;"	P	implementation:Origin
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    pub fn new(name: ProtocolName, version: Option<String>) -> Protocol {$/;"	P	implementation:Protocol
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    pub fn new() -> PtrMapCell<V> {$/;"	P	implementation:PtrMapCell
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    pub fn new(val: Option<T>) -> OptCell<T> {$/;"	P	implementation:OptCell
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn new() -> VecMap<K, V> {$/;"	P	implementation:VecMap
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn new() -> Headers {$/;"	P	implementation:Headers
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn new(weak: bool, tag: String) -> EntityTag {$/;"	P	implementation:EntityTag
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    pub fn new(item: T, quality: Quality) -> QualityItem<T> {$/;"	P	implementation:QualityItem
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn new(stream: Box<NetworkStream + Send>) -> Stream {$/;"	P	implementation:Stream
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn new(obj: T) -> Wrapper<T> {$/;"	P	implementation:Wrapper
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub fn new() -> MockStream {$/;"	P	implementation:MockStream
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn new(s: S) -> HttpsConnector<S, HttpConnector> {$/;"	P	implementation:HttpsConnector
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn new<To: ToSocketAddrs>(addr: To) -> ::Result<HttpListener> {$/;"	P	implementation:HttpListener
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn new<To: ToSocketAddrs>(addr: To, ssl: S) -> ::Result<HttpsListener<S>> {$/;"	P	implementation:HttpsListener
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^    fn new(channel: mpsc::Sender<T>, data: T) -> Sentinel<T> {$/;"	P	implementation:Sentinel
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^    pub fn new(acceptor: A) -> ListenerPool<A> {$/;"	P	implementation:ListenerPool
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn new(handler: H, timeouts: Timeouts) -> Worker<H> {$/;"	P	implementation:Worker
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn new(listener: L) -> Server<L> {$/;"	P	implementation:Server
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub fn new(stream: &'a mut BufReader<&'b mut NetworkStream>, addr: SocketAddr)$/;"	P	implementation:Request
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn new(stream: &'a mut (Write + 'a), headers: &'a mut header::Headers) ->$/;"	P	implementation:Response
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub fn new() -> TlsClient {$/;"	P	implementation:TlsClient
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub fn new(certs: Vec<rustls::Certificate>, key: rustls::PrivateKey) -> TlsServer {$/;"	P	implementation:TlsServer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    pub fn new(delay: Duration, tx: mpsc::Sender<DebouncedEvent>) -> Debounce {$/;"	P	implementation:Debounce
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    pub fn new($/;"	P	implementation:WatchTimer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<FsEventWatcher> {$/;"	P	implementation:FsEventWatcher
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<INotifyWatcher> {$/;"	P	implementation:INotifyWatcher
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    pub fn new(inotify: Inotify, event_tx: EventTx) -> Result<EventLoop> {$/;"	P	implementation:EventLoop
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<Self>;$/;"	P	interface:Watcher
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<NullWatcher> {$/;"	P	implementation:NullWatcher
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<PollWatcher> {$/;"	P	implementation:PollWatcher
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn new(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<ReadDirectoryChangesWatcher> {$/;"	P	implementation:ReadDirectoryChangesWatcher
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn new() -> Self {$/;"	P	implementation:ArrayVisitor
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	P	implementation:MapAccessDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	P	implementation:SeqAccessDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> BorrowedBytesDeserializer<'de, E> {$/;"	P	implementation:BorrowedBytesDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	P	implementation:BorrowedStrDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn new() -> Self {$/;"	P	implementation:content::ContentVisitor
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f	module:content
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f	module:content
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	P	implementation:content::TagOrContentVisitor
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f	module:content
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f	module:content
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	P	implementation:content::ContentRefDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	P	implementation:content::ContentDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub fn new(name: &'static str) -> Self {$/;"	P	implementation:content::TaggedContentVisitor
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::UntaggedUnitVisitor
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, /;"	f	module:content
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatMapAccess
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatStructAccess
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	P	implementation:content::ContentSerializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeStructVariantAsMapValue
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeTupleVariantAsMapValue
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M>/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	P	implementation:MapAccess
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	P	implementation:SeqAccess
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	P	implementation:UnitVariantAccess
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	P	implementation:VariantAccess
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    pub fn new(read: R) -> Self {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    pub(crate) fn new(_kind: ErrorKind, _error: &'static str) -> Error {$/;"	P	implementation:Error
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    pub fn new(iter: I) -> LineColIterator<I> {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Map
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    pub fn new(reader: R) -> Self {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    pub fn new(s: &'a str) -> Self {$/;"	P	implementation:StrRead
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    pub fn new(slice: &'a [u8]) -> Self {$/;"	P	implementation:SliceRead
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    pub fn new(writer: W) -> Self {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn new(map: &'de Map<String, Value>) -> Self {$/;"	P	implementation:MapRefDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn new(map: Map<String, Value>) -> Self {$/;"	P	implementation:MapDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn new(slice: &'de [Value]) -> Self {$/;"	P	implementation:SeqRefDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn new(value: Cow<'de, str>) -> Self {$/;"	P	implementation:BorrowedCowStrDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn new(vec: Vec<Value>) -> Self {$/;"	P	implementation:SeqDeserializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn new<T>($/;"	P	implementation:OwnedKVList
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn new($/;"	P	implementation:Record
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn new(drain1: D1, drain2: D2) -> Self {$/;"	P	implementation:Duplicate
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn new(drain: D) -> Self {$/;"	P	implementation:IgnoreResult
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn new(drain: D) -> Self {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn new(drain: D, cond: F) -> Self {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn new(drain: D, level: Level) -> Self {$/;"	P	implementation:LevelFilter
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn new<F>(drain: D, map_fn: F) -> Self$/;"	P	implementation:MapError
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn new<T>(&self, values: OwnedKV<T>) -> Logger<D>$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn new() -> Self {$/;"	P	implementation:ToSendSerializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn new(drain: D) -> AsyncBuilder<D> {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn new(drain: D) -> Self {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn new<D: slog::Drain<Err = slog::Never, Ok = ()> + Send + 'static>($/;"	P	implementation:Async
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn new<D>(drain: D) -> Self$/;"	P	implementation:AsyncCore
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn new() -> Self {$/;"	P	implementation:TermDecoratorBuilder
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn new($/;"	P	implementation:CompactFormatSerializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn new($/;"	P	implementation:Serializer
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn new() -> TermDecoratorBuilder {$/;"	P	implementation:TermDecorator
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn new(d: D) -> CompactFormatBuilder<D> {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn new(d: D) -> FullFormatBuilder<D> {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn new(io: W) -> Self {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn new(wrapped: &'a mut dyn io::Write) -> CountingWriter {$/;"	P	implementation:CountingWriter
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    pub fn new() -> io::Result<TempDir> {$/;"	P	implementation:TempDir
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn new() -> io::Result<NamedTempFile> {$/;"	P	implementation:NamedTempFile
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Builder
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    pub fn new(max_size: usize) -> SpooledTempFile {$/;"	P	implementation:SpooledTempFile
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    pub fn new(secret: &ApplicationSecret,$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    pub fn new<S: AsRef<str>>(client: C, secret: &ApplicationSecret, device_code_url: S) -> Devi/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    pub fn new(client: C, method: Option<InstalledFlowReturnMethod>) -> InstalledFlow<C> {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    pub fn new(client: C) -> RefreshFlow<C> {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn new(claims: Claims) -> JWT {$/;"	P	implementation:JWT
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub fn new(key: ServiceAccountKey, client: C) -> ServiceAccountAccess<C> {$/;"	f
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    pub fn new(location: &String) -> Result<DiskTokenStorage, io::Error> {$/;"	P	implementation:DiskTokenStorage
new	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub fn new(error: String, desc: Option<&String>) -> StringError {$/;"	P	implementation:StringError
new_bitflags_form	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn new_bitflags_form() {$/;"	f	module:op_test
new_event_trigger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    new_event_trigger: Arc<Condvar>,$/;"	m	struct:ScheduleWorker
new_event_trigger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    new_event_trigger: Arc<Condvar>,$/;"	m	struct:WatchTimer
new_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    pub fn new_in<P: AsRef<Path>>(dir: P) -> io::Result<TempDir> {$/;"	P	implementation:TempDir
new_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn new_in<P: AsRef<Path>>(dir: P) -> io::Result<NamedTempFile> {$/;"	P	implementation:NamedTempFile
new_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn new_message(&self, host: &str, port: u16, scheme: &str) -> ::Result<Box<HttpMessage>> {$/;"	P	implementation:Http11Protocol
new_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    fn new_message(&self, host: &str, port: u16, scheme: &str) -> ::Result<Box<HttpMessage>>;$/;"	P	interface:Protocol
new_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    pub fn new_raw(data: Vec<Vec<u8>>) -> Item {$/;"	P	implementation:Item
new_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<FsEventWatcher> {$/;"	P	implementation:FsEventWatcher
new_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<INotifyWatcher> {$/;"	P	implementation:INotifyWatcher
new_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<Self>;$/;"	P	interface:Watcher
new_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<NullWatcher> {$/;"	P	implementation:NullWatcher
new_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<PollWatcher> {$/;"	P	implementation:PollWatcher
new_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn new_raw(tx: Sender<RawEvent>) -> Result<ReadDirectoryChangesWatcher> {$/;"	P	implementation:ReadDirectoryChangesWatcher
new_start_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub new_start_page_token: Option<String>,$/;"	m	struct:ChangeList
new_typed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    pub fn new_typed(ty: Box<HeaderFormat + Send + Sync>) -> Item {$/;"	P	implementation:Item
newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f	module:content
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value>$/;"	P	implementation:UnitVariantAccess
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value>$/;"	P	implementation:VariantAccess
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Error>$/;"	P	implementation:UnitOnly
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Error>$/;"	P	implementation:VariantDeserializer
newtype_variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Error>$/;"	P	implementation:VariantRefDeserializer
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:OsValues
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	P	implementation:Values
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:Indices
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:vec_map::Iter
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:OsSplit
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	P	implementation:SplitAsciiUnquoted
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn next(&mut self) -> Option<HeaderView<'a>> {$/;"	P	implementation:HeadersItems
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn next(&mut self) -> Option<::Result<N::Stream>> {$/;"	P	implementation:NetworkConnections
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn next(&mut self) -> Option<Result<T>> {$/;"	f
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    fn next(&mut self) -> Option<io::Result<u8>> {$/;"	f
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:SliceRead
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:StrRead
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	f
next	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>>;$/;"	P	interface:Read
next_back	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:OsValues
next_back	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a str> {$/;"	P	implementation:Values
next_back	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn next_back(&mut self) -> Option<usize> {$/;"	P	implementation:Indices
next_back	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:vec_map::Iter
next_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn next_char(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:Deserializer
next_char_or_null	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn next_char_or_null(&mut self) -> Result<u8> {$/;"	P	implementation:Deserializer
next_element	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	P	interface:SeqAccess
next_element	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	P	interface:SeqAccess
next_element_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_element_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>>$/;"	P	implementation:SeqAccess
next_element_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	P	implementation:SeqDeserializer
next_element_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	P	implementation:SeqRefDeserializer
next_entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	P	interface:MapAccess
next_entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	P	interface:MapAccess
next_entry_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	P	interface:MapAccess
next_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	P	interface:MapAccess
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>>$/;"	P	implementation:MapAccess
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:NumberDeserializer
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:BorrowedRawDeserializer
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:OwnedRawDeserializer
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	P	implementation:MapDeserializer
next_key_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	P	implementation:MapRefDeserializer
next_line_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    next_line_help: bool,$/;"	m	struct:Help
next_line_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn next_line_help(mut self, nlh: bool) -> Self {$/;"	P	implementation:Arg
next_node	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    next_node: Arc<SendSyncRefUnwindSafeKV + 'static>,$/;"	m	struct:MultiListNode
next_node	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    next_node: Arc<SendSyncRefUnwindSafeKV + 'static>,$/;"	m	struct:OwnedKVListNode
next_or_eof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^fn next_or_eof<'de, R>(read: &mut R) -> Result<u8>$/;"	f
next_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub next_page_token: Option<String>,$/;"	m	struct:ChangeList
next_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub next_page_token: Option<String>,$/;"	m	struct:CommentList
next_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub next_page_token: Option<String>,$/;"	m	struct:DriveList
next_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub next_page_token: Option<String>,$/;"	m	struct:FileList
next_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub next_page_token: Option<String>,$/;"	m	struct:PermissionList
next_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub next_page_token: Option<String>,$/;"	m	struct:ReplyList
next_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub next_page_token: Option<String>,$/;"	m	struct:RevisionList
next_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub next_page_token: Option<String>,$/;"	m	struct:TeamDriveList
next_pair	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_positive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn next_positive(self) -> Self {$/;"	P	interface:Float
next_reads	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    next_reads: Vec<Vec<u8>>,$/;"	m	struct:MockStream
next_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	P	interface:MapAccess
next_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	P	interface:MapAccess
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:content
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value>$/;"	P	implementation:MapAccess
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:NumberDeserializer
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:BorrowedRawDeserializer
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:OwnedRawDeserializer
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Error>$/;"	P	implementation:MapDeserializer
next_value_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Error>$/;"	P	implementation:MapRefDeserializer
no_imports	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^mod no_imports {$/;"	n
no_interrupt_fraction	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    no_interrupt_fraction: f64,$/;"	m	struct:PartialInterruptingWriter
no_ssl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^mod no_ssl {$/;"	n
node	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    node: Arc<SendSyncRefUnwindSafeKV + 'static>,$/;"	m	struct:MultiListNode
node	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    node: Arc<SendSyncRefUnwindSafeKV + 'static>,$/;"	m	struct:OwnedKVList
nonascii	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn nonascii() {$/;"	f	module:test
none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    pub fn none<T>(&self, msg: T) -> Format<T>$/;"	P	implementation:Colorizer
nonzero	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^pub fn nonzero<T: Integer>(x: &[T], rindex: usize) -> bool {$/;"	f
nonzero_integers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! nonzero_integers {$/;"	M
nonzero_integers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	M
nop_reserve	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
normalize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub(crate) fn normalize(&mut self) -> u32 {$/;"	P	implementation:ExtendedFloat
normalize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    fn normalize(&mut self) {$/;"	P	interface:Math
normalize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn normalize(x: &mut Vec<Limb>) {$/;"	f	module:small
not_supported	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/other.rs	/^fn not_supported<T>() -> io::Result<T> {$/;"	f
nth_bit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn nth_bit(n: u64) -> u64 {$/;"	f
null	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub mod null;$/;"	n
num	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^pub(crate) mod num;$/;"	n
num_chunks	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^fn num_chunks(input: &[u8]) -> usize {$/;"	f
num_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	P	implementation:App
num_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	f
num_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn num_vals(&self) -> Option<u64>;$/;"	P	interface:AnyArg
num_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	P	implementation:FlagBuilder
num_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	P	implementation:OptBuilder
num_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn num_vals(&self) -> Option<u64> {$/;"	P	implementation:PosBuilder
num_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub num_vals: Option<u64>,$/;"	m	struct:Valued
number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod number;$/;"	n
number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub number: Option<String>,$/;"	m	struct:NumberDeserializer
number_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^macro_rules! number_impl {$/;"	M
number_of_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn number_of_values(mut self, qty: u64) -> Self {$/;"	P	implementation:Arg
o	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! o($/;"	M
obj	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    obj: Option<T>,$/;"	m	struct:Wrapper
obtain_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    pub fn obtain_token<'a, AD: AuthenticatorDelegate, S, T>(&mut self,$/;"	f
occupied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    occupied: OccupiedEntryImpl<'a>,$/;"	m	struct:OccupiedEntry
occurrences_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn occurrences_of<S: AsRef<str>>(&self, name: S) -> u64 {$/;"	P	implementation:ArgMatches
occurs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/matched_arg.rs	/^    pub occurs: u64,$/;"	m	struct:MatchedArg
ocr_language	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn ocr_language(mut self, new_value: &str) -> FileCopyCall<'a, C, A> {$/;"	f
ocr_language	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn ocr_language(mut self, new_value: &str) -> FileCreateCall<'a, C, A> {$/;"	f
ocr_language	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn ocr_language(mut self, new_value: &str) -> FileUpdateCall<'a, C, A> {$/;"	f
offset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    offset: usize,$/;"	m	struct:StreamDeserializer
ok	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    ok: PhantomData<Ok>,$/;"	m	struct:Impossible
old_bitflags_form	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn old_bitflags_form() {$/;"	f	module:op_test
on_connection_end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn on_connection_end(&self) { }$/;"	P	interface:Handler
on_connection_start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn on_connection_start(&self) { }$/;"	P	interface:Handler
one	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    pub unsafe fn one(&self) -> &V {$/;"	P	implementation:PtrMapCell
op	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub op: Result<Op>,$/;"	m	struct:RawEvent
op	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub mod op {$/;"	n
op_test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^mod op_test {$/;"	n
open	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    open: Arc<RwLock<bool>>,$/;"	m	struct:PollWatcher
operations_buffer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    operations_buffer: OperationsBuffer,$/;"	m	struct:Debounce
operations_buffer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    operations_buffer: OperationsBuffer,$/;"	m	struct:ScheduleWorker
optbuilder_display1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn optbuilder_display1() {$/;"	f	module:test
optbuilder_display2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn optbuilder_display2() {$/;"	f	module:test
optbuilder_display3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn optbuilder_display3() {$/;"	f	module:test
optbuilder_display_multiple_aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn optbuilder_display_multiple_aliases() {$/;"	f	module:test
optbuilder_display_single_alias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn optbuilder_display_single_alias() {$/;"	f	module:test
option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/mod.rs	/^mod option;$/;"	n
option_details_for_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^    fn option_details_for_path(&self, path: &str) -> String {$/;"	P	implementation:BashGen
opts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn opts(&self) -> Iter<OptBuilder<'a, 'b>> {$/;"	f
opts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub opts: Vec<OptBuilder<'a, 'b>>,$/;"	m	struct:Parser
or_insert	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn or_insert(self, default: Value) -> &'a mut Value {$/;"	P	implementation:Entry
or_insert_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn or_insert_with<F>(self, default: F) -> &'a mut Value$/;"	P	implementation:Entry
order_by	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn order_by(mut self, new_value: &str) -> FileListCall<'a, C, A> {$/;"	f
origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod origin;$/;"	n
original_filename	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub original_filename: Option<String>,$/;"	m	struct:File
original_filename	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub original_filename: Option<String>,$/;"	m	struct:Revision
original_order	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    original_order: bool,$/;"	m	struct:FullFormatBuilder
osstringext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod osstringext;$/;"	n
output	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    output: [u8; BUF_SIZE],$/;"	m	struct:EncoderWriter
output	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    output: PhantomData<T>,$/;"	m	struct:StreamDeserializer
output_occupied_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    output_occupied_len: usize,$/;"	m	struct:EncoderWriter
overflow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^macro_rules! overflow {$/;"	M
overflow_strategy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn overflow_strategy(self, overflow_strategy: OverflowStrategy) -> Self {$/;"	f
overflowing_shr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/shift.rs	/^pub(crate) fn overflowing_shr(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	P	implementation:App
overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub overrides: Vec<(&'b str, &'a str)>,$/;"	m	struct:Parser
overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	f
overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn overrides(&self) -> Option<&[&'e str]>;$/;"	P	interface:AnyArg
overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub overrides: Option<Vec<&'a str>>,$/;"	m	struct:Base
overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	P	implementation:FlagBuilder
overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	P	implementation:OptBuilder
overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn overrides(&self) -> Option<&[&'e str]> {$/;"	P	implementation:PosBuilder
overrides_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn overrides_with(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
overrides_with_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn overrides_with_all(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
owned_by_me	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub owned_by_me: Option<bool>,$/;"	m	struct:File
owners	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub owners: Option<Vec<User>>,$/;"	m	struct:File
p	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub p: Parser<'a, 'b>,$/;"	m	struct:App
p	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:BashGen
p	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/elvish.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:ElvishGen
p	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/fish.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:FishGen
p	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:ComplGen
p	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/powershell.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:PowerShellGen
p	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/zsh.rs	/^    p: &'b Parser<'a, 'b>,$/;"	m	struct:ZshGen
pad	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    pad: bool,$/;"	m	struct:Config
pad	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^    pub fn pad(self, pad: bool) -> Config {$/;"	P	implementation:Config
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> ChangeListCall<'a, C, A> {$/;"	f
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> ChangeWatchCall<'a, C, A> {$/;"	f
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> CommentListCall<'a, C, A> {$/;"	f
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> DriveListCall<'a, C, A> {$/;"	f
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> FileListCall<'a, C, A> {$/;"	f
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> PermissionListCall<'a, C, A> {$/;"	f
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> ReplyListCall<'a, C, A> {$/;"	f
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> RevisionListCall<'a, C, A> {$/;"	f
page_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_size(mut self, new_value: i32) -> TeamdriveListCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> ChangeListCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> ChangeWatchCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> CommentListCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> DriveListCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> FileListCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> PermissionListCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> ReplyListCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> RevisionListCall<'a, C, A> {$/;"	f
page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn page_token(mut self, new_value: &str) -> TeamdriveListCall<'a, C, A> {$/;"	f
panicked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    panicked: bool,$/;"	m	struct:EncoderWriter
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> AboutGetCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ChangeGetStartPageTokenCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ChangeListCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ChangeWatchCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ChannelStopCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> CommentCreateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> CommentDeleteCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> CommentGetCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> CommentListCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> CommentUpdateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> DriveCreateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> DriveDeleteCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> DriveGetCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> DriveHideCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> DriveListCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> DriveUnhideCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> DriveUpdateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileCopyCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileCreateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileDeleteCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileEmptyTrashCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileExportCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileGenerateIdCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileGetCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileListCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileUpdateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> FileWatchCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> PermissionCreateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> PermissionDeleteCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> PermissionGetCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> PermissionListCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> PermissionUpdateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ReplyCreateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ReplyDeleteCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ReplyGetCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ReplyListCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> ReplyUpdateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> RevisionDeleteCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> RevisionGetCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> RevisionListCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> RevisionUpdateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> TeamdriveCreateCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> TeamdriveDeleteCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> TeamdriveGetCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> TeamdriveListCall<'a, C, A>$/;"	f
param	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn param<T>(mut self, name: T, value: T) -> TeamdriveUpdateCall<'a, C, A>$/;"	f
parameters	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    pub parameters: Vec<DispositionParam>,$/;"	m	struct:ContentDisposition
params	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub params: Option<HashMap<String, String>>,$/;"	m	struct:Channel
parent_path_to_base_64	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn parent_path_to_base_64(local_path: &str) -> Option<String> {$/;"	f
parents	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub parents: Option<Vec<String>>,$/;"	m	struct:File
parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^        fn parse() -> Self {$/;"	P	interface:derive::ClapApp
parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    pub fn parse(mut self) -> Arg<'a, 'a> {$/;"	P	implementation:UsageParser
parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^fn parse<H: Header + HeaderFormat>(raw: &Vec<Vec<u8>>) ->$/;"	f
parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^fn parse<R: Read, T: TryParse<Subject=I>, I>(rdr: &mut BufReader<R>) -> ::Result<Incoming<I>> {$/;"	f
parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^pub(crate) mod parse;$/;"	n
parse_any_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_any_number(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	P	implementation:Deserializer
parse_any_signed_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_any_signed_number(&mut self) -> Result<ParserNumber> {$/;"	P	implementation:Deserializer
parse_application_secret	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/helper.rs	/^pub fn parse_application_secret(secret: &String) -> io::Result<ApplicationSecret> {$/;"	f
parse_concise_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/parse.rs	/^pub fn parse_concise_float<F>(mantissa: u64, mant_exp: i32) -> F$/;"	f
parse_decimal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_decimal($/;"	P	implementation:Deserializer
parse_decimal_overflow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_decimal_overflow($/;"	P	implementation:Deserializer
parse_escape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^fn parse_escape<'de, R: Read<'de>>(read: &mut R, scratch: &mut Vec<u8>) -> Result<()> {$/;"	f
parse_exponent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_exponent($/;"	P	implementation:Deserializer
parse_exponent_overflow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_exponent_overflow($/;"	P	implementation:Deserializer
parse_extended_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^pub fn parse_extended_value(val: &str) -> ::Result<ExtendedValue> {$/;"	f
parse_flag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn parse_flag($/;"	f
parse_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^        fn parse_from<I, T>(argv: I) -> Self$/;"	P	interface:derive::ClapApp
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn parse_header(_: &[Vec<u8>]) -> hyper::error::Result<Self> {$/;"	P	implementation:ContentRange
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> hyper::error::Result<Self> {$/;"	P	implementation:RangeResponseHeader
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> hyper::error::Result<Self> {$/;"	P	implementation:XUploadContentType
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<AccessControlAllowCredentials> {$/;"	P	implementation:AccessControlAllowCredentials
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<AccessControlAllowOrigin> {$/;"	P	implementation:AccessControlAllowOrigin
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Authorization<S>> {$/;"	f
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<CacheControl> {$/;"	P	implementation:CacheControl
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<ContentDisposition> {$/;"	P	implementation:ContentDisposition
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_length.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<ContentLength> {$/;"	P	implementation:ContentLength
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cookie.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Cookie> {$/;"	P	implementation:Cookie
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Expect> {$/;"	P	implementation:Expect
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Host> {$/;"	P	implementation:Host
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<IfRange> {$/;"	P	implementation:IfRange
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Link> {$/;"	P	implementation:Link
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Origin> {$/;"	P	implementation:Origin
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Pragma> {$/;"	P	implementation:Pragma
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Prefer> {$/;"	P	implementation:Prefer
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<PreferenceApplied> {$/;"	P	implementation:PreferenceApplied
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Range> {$/;"	P	implementation:Range
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<ReferrerPolicy> {$/;"	P	implementation:ReferrerPolicy
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/set_cookie.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<SetCookie> {$/;"	P	implementation:SetCookie
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<StrictTransportSecurity> {$/;"	P	implementation:StrictTransportSecurity
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^        fn parse_header(raw: &[Vec<u8>]) -> ::Result<CrazyLength> {$/;"	P	implementation:tests::CrazyLength
parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn parse_header(raw: &[Vec<u8>]) -> ::Result<Self>;$/;"	P	interface:Header
parse_help_subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn parse_help_subcommand<I, T>(&self, it: &mut I) -> ClapResult<ParseResult<'a>>$/;"	f
parse_ident	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_ident(&mut self, ident: &[u8]) -> Result<()> {$/;"	P	implementation:Deserializer
parse_index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^fn parse_index(s: &str) -> Option<usize> {$/;"	f
parse_integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_integer(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	P	implementation:Deserializer
parse_ip_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	M
parse_line_col	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^fn parse_line_col(msg: &mut String) -> Option<(usize, usize)> {$/;"	f
parse_long_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn parse_long_arg<I, T>($/;"	f
parse_long_decimal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_long_decimal(&mut self, positive: bool, integer_end: usize) -> Result<f64> {$/;"	P	implementation:Deserializer
parse_long_exponent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_long_exponent(&mut self, positive: bool, integer_end: usize) -> Result<f64> {$/;"	P	implementation:Deserializer
parse_long_integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_long_integer(&mut self, positive: bool, partial_significand: u64) -> Result<f64> {$/;"	P	implementation:Deserializer
parse_long_integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_long_integer(&mut self, positive: bool, significand: u64) -> Result<f64> {$/;"	P	implementation:Deserializer
parse_mantissa	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bhcomp.rs	/^fn parse_mantissa<F>(integer: &[u8], fraction: &[u8]) -> Bigint$/;"	f
parse_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_number(&mut self, positive: bool, significand: u64) -> Result<ParserNumber> {$/;"	P	implementation:Deserializer
parse_object_colon	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_object_colon(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
parse_opt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn parse_opt($/;"	f
parse_option	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    fn parse_option(header: Vec<u8>) -> Connection {$/;"	f	module:tests
parse_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub fn parse_request<R: Read>(buf: &mut BufReader<R>) -> ::Result<Incoming<(Method, RequestUri)>/;"	f
parse_response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub fn parse_response<R: Read>(buf: &mut BufReader<R>) -> ::Result<Incoming<RawStatus>> {$/;"	f
parse_schema	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn parse_schema() {$/;"	f	module:tests
parse_short_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn parse_short_arg($/;"	f
parse_socket_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	M
parse_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'a, 's, str>> {$/;"	P	implementation:SliceRead
parse_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'a, 's, str>> {$/;"	P	implementation:StrRead
parse_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>> /;"	f
parse_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>>;$/;"	P	interface:Read
parse_str_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str_bytes<'s, T, F>($/;"	P	implementation:SliceRead
parse_str_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str_bytes<'s, T, F>($/;"	f
parse_str_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str_raw<'s>($/;"	P	implementation:SliceRead
parse_str_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str_raw<'s>($/;"	P	implementation:StrRead
parse_str_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str_raw<'s>($/;"	P	interface:Read
parse_str_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn parse_str_raw<'s>($/;"	f
parse_subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn parse_subcommand<I, T>($/;"	f
parse_truncated_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/parse.rs	/^pub fn parse_truncated_float<F>(integer: &[u8], mut fraction: &[u8], exponent: i32) -> F$/;"	f
parse_whitespace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn parse_whitespace(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:Deserializer
parser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^pub mod parser;$/;"	n
parsing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^pub mod parsing;$/;"	n
partial_cmp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn partial_cmp(&self, other: &QualityItem<T>) -> Option<cmp::Ordering> {$/;"	P	implementation:QualityItem
partial_cmp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    fn partial_cmp(&self, other: &StatusCode) -> Option<Ordering> {$/;"	P	implementation:StatusCode
partial_eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^mod partial_eq;$/;"	n
partialeq_numeric	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^macro_rules! partialeq_numeric {$/;"	M
password	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    pub password: Option<String>$/;"	m	struct:Basic
patch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn patch<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    path: PathBuf,$/;"	m	struct:ScheduledEvent
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    pub path: Option<PathBuf>,$/;"	m	struct:RawEvent
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    path: Option<PathBuf>,$/;"	m	struct:TempDir
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^    pub fn path(&self) -> &path::Path {$/;"	P	implementation:TempDir
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^    path: PathBuf,$/;"	m	struct:PathError
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    path: PathBuf,$/;"	m	struct:TempPath
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    path: TempPath,$/;"	m	struct:NamedTempFile
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn path(&self) -> &Path {$/;"	P	implementation:NamedTempFile
path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub path: TempPath,$/;"	m	struct:PathPersistError
paths	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    paths: cf::CFMutableArrayRef,$/;"	m	struct:FsEventWatcher
paths	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    paths: HashMap<WatchDescriptor, PathBuf>,$/;"	m	struct:EventLoop
paths	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    paths: HashMap<PathBuf, PathData>,$/;"	m	struct:WatchData
payload	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub payload: Option<bool>,$/;"	m	struct:Channel
peek	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:Deserializer
peek	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:SliceRead
peek	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:StrRead
peek	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	f
peek	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>>;$/;"	P	interface:Read
peek_end_of_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn peek_end_of_value(&mut self) -> Result<()> {$/;"	f
peek_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn peek_error(&self, reason: ErrorCode) -> Error {$/;"	P	implementation:Deserializer
peek_invalid_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn peek_invalid_type(&mut self, exp: &dyn Expected) -> Error {$/;"	P	implementation:Deserializer
peek_or_null	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn peek_or_null(&mut self) -> Result<u8> {$/;"	P	implementation:Deserializer
peek_position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	P	implementation:SliceRead
peek_position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	P	implementation:StrRead
peek_position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	f
peek_position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn peek_position(&self) -> Position;$/;"	P	interface:Read
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn peer_addr(&mut self) -> io::Result<std::net::SocketAddr> {$/;"	P	implementation:DummyNetworkStream
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn peer_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:PooledStream
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        fn peer_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:no_ssl::Void
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    fn peer_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:Proxied
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn peer_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:MockStream
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn peer_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:HttpStream
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn peer_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:HttpsStream
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn peer_addr(&mut self) -> io::Result<SocketAddr>;$/;"	P	interface:NetworkStream
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn peer_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:TlsStream
peer_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn peer_addr(&mut self) -> io::Result<SocketAddr> {$/;"	P	implementation:WrappedStream
pending	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pending: Option<&'a Content<'de>>,$/;"	m	struct:FlatInternallyTaggedAccess
pending	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn pending(&mut self, _: &PollInformation) -> Retry {$/;"	P	interface:AuthenticatorDelegate
pending_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pending_content: Option<&'a Content<'de>>,$/;"	m	struct:FlatMapAccess
pending_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    pending_content: Option<Content<'de>>,$/;"	m	struct:FlatStructAccess
permission_details	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub permission_details: Option<Vec<PermissionPermissionDetails>>,$/;"	m	struct:Permission
permission_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn permission_id(mut self, new_value: &str) -> PermissionDeleteCall<'a, C, A> {$/;"	f
permission_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn permission_id(mut self, new_value: &str) -> PermissionGetCall<'a, C, A> {$/;"	f
permission_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn permission_id(mut self, new_value: &str) -> PermissionUpdateCall<'a, C, A> {$/;"	f
permission_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub permission_id: Option<String>,$/;"	m	struct:User
permission_ids	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub permission_ids: Option<Vec<String>>,$/;"	m	struct:File
permission_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub permission_type: Option<String>,$/;"	m	struct:PermissionPermissionDetails
permissions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn permissions(&'a self) -> PermissionMethods<'a, C, A> {$/;"	f
permissions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub permissions: Option<Vec<Permission>>,$/;"	m	struct:File
permissions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub permissions: Option<Vec<Permission>>,$/;"	m	struct:PermissionList
persist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/other.rs	/^pub fn persist(_old_path: &Path, _new_path: &Path, _overwrite: bool) -> io::Result<()> {$/;"	f
persist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^pub fn persist(old_path: &Path, new_path: &Path, overwrite: bool) -> io::Result<()> {$/;"	f
persist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/windows.rs	/^pub fn persist(old_path: &Path, new_path: &Path, overwrite: bool) -> io::Result<()> {$/;"	f
persist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn persist<P: AsRef<Path>>(mut self, new_path: P) -> Result<(), PathPersistError> {$/;"	P	implementation:TempPath
persist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn persist<P: AsRef<Path>>(self, new_path: P) -> Result<File, PersistError> {$/;"	P	implementation:NamedTempFile
persist_noclobber	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn persist_noclobber<P: AsRef<Path>>($/;"	P	implementation:TempPath
persist_noclobber	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn persist_noclobber<P: AsRef<Path>>(self, new_path: P) -> Result<File, PersistError> {$/;"	P	implementation:NamedTempFile
phantom	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        pub phantom: PhantomData<Idx>,$/;"	m	struct:range::RangeVisitor
photo_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub photo_link: Option<String>,$/;"	m	struct:Permission
photo_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub photo_link: Option<String>,$/;"	m	struct:User
plaintext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_type.rs	/^    pub fn plaintext() -> ContentType {$/;"	P	implementation:ContentType
png	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_type.rs	/^    pub fn png() -> ContentType {$/;"	P	implementation:ContentType
pointer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn pointer(&self, pointer: &str) -> Option<&Value> {$/;"	P	implementation:Value
pointer_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn pointer_mut(&mut self, pointer: &str) -> Option<&mut Value> {$/;"	P	implementation:Value
poll	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    poll: mio::Poll,$/;"	m	struct:EventLoop
poll	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub mod poll;$/;"	n
poll_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    pub fn poll_token(&mut self) -> Result<Option<Token>, &PollError> {$/;"	f
pool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub mod pool;$/;"	n
pool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pool: Arc<Mutex<PoolImpl<S>>>,$/;"	m	struct:PooledStream
pool_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pool_config: Option<pool::Config>,$/;"	m	struct:ProxyConfig
port	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    port: u16,$/;"	m	struct:ProxyConfig
port	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    pub port: Option<u16>$/;"	m	struct:Host
port	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    port: Option<u32>,$/;"	m	struct:InstalledFlow
pos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    pos: usize,$/;"	m	struct:OsSplit
pos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    pos: usize,$/;"	m	struct:UsageParser
pos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pos: usize,$/;"	m	struct:BufReader
pos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pos: usize,$/;"	m	struct:SplitAsciiUnquoted
pos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pos: usize,$/;"	m	struct:OccupiedEntry
pos	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/utf8.rs	/^    pos: usize,$/;"	m	struct:Encode
pos_help_double_lit_single_quote	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn pos_help_double_lit_single_quote() {$/;"	f	module:test
pos_help_lit_single_quote	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn pos_help_lit_single_quote() {$/;"	f	module:test
pos_help_newline	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn pos_help_newline() {$/;"	f	module:test
pos_help_newline_lit_sq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn pos_help_newline_lit_sq() {$/;"	f	module:test
pos_mult	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn pos_mult() {$/;"	f	module:test
pos_mult_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn pos_mult_help() {$/;"	f	module:test
pos_req	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn pos_req() {$/;"	f	module:test
pos_req_mult_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn pos_req_mult_help() {$/;"	f	module:test
position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn position(&self) -> Position {$/;"	P	implementation:SliceRead
position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn position(&self) -> Position {$/;"	P	implementation:StrRead
position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn position(&self) -> Position {$/;"	f
position	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn position(&self) -> Position;$/;"	P	interface:Read
position_of_index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn position_of_index(&self, i: usize) -> Position {$/;"	P	implementation:SliceRead
positional	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/mod.rs	/^mod positional;$/;"	n
positionals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn positionals(&self) -> map::Values<PosBuilder<'a, 'b>> {$/;"	f
positionals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub positionals: VecMap<PosBuilder<'a, 'b>>,$/;"	m	struct:Parser
possible_subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn possible_subcommand(&self, arg_os: &OsStr) -> (bool, Option<&str>) {$/;"	f
possible_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	P	implementation:App
possible_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	f
possible_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]>;$/;"	P	interface:AnyArg
possible_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	P	implementation:FlagBuilder
possible_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	P	implementation:OptBuilder
possible_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn possible_vals(&self) -> Option<&[&'e str]> {$/;"	P	implementation:PosBuilder
possible_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub possible_vals: Option<Vec<&'b str>>,$/;"	m	struct:Valued
possible_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn possible_value(mut self, name: &'b str) -> Self {$/;"	P	implementation:Arg
possible_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn possible_values(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:Arg
possible_values_match	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^    fn possible_values_match() {$/;"	f	module:test
possible_values_nomatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^    fn possible_values_nomatch() {$/;"	f	module:test
post	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn post<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
pow10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn pow10(self, n: i32) -> Self;$/;"	P	interface:Float
pow10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn pow10(self, n: i32) -> f32 {$/;"	P	implementation:f32
pow10	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn pow10(self, n: i32) -> f64 {$/;"	P	implementation:f64
powershell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^mod powershell;$/;"	n
pragma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod pragma;$/;"	n
pre_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub pre_help: Option<&'b str>,$/;"	m	struct:AppMeta
pre_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn pre_request(&mut self) { }$/;"	P	interface:Delegate
prefer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod prefer;$/;"	n
preference_applied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod preference_applied;$/;"	n
prefix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    prefix: &'a OsStr,$/;"	m	struct:Builder
prefix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn prefix<S: AsRef<OsStr> + ?Sized>(&mut self, prefix: &'a S) -> &mut Self {$/;"	P	implementation:Builder
present_user_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn present_user_code(&mut self, pi: &PollInformation) {$/;"	P	interface:AuthenticatorDelegate
present_user_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn present_user_url(&mut self, url: &String, need_code: bool) -> Option<String> {$/;"	P	interface:AuthenticatorDelegate
pretty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    pub fn pretty(writer: W) -> Self {$/;"	f
prev	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    prev: UsageToken,$/;"	m	struct:UsageParser
previous_response_expected_no_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn previous_response_expected_no_content(&self) -> bool {$/;"	P	implementation:PooledStream
previous_response_expected_no_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    previous_response_expected_no_content: bool,$/;"	m	struct:PooledStreamInner
previous_response_expected_no_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn previous_response_expected_no_content(&self) -> bool {$/;"	P	interface:NetworkStream
primitive_deserializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	M
primitive_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	M
print_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn print_help(&mut self) -> ClapResult<()> {$/;"	P	implementation:App
print_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn print_help(&self) -> ClapResult<()> {$/;"	f
print_long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn print_long_help(&mut self) -> ClapResult<()> {$/;"	P	implementation:App
print_msg_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub fn print_msg_header($/;"	f
print_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn print_version<W: Write>(&self, w: &mut W, use_long: bool) -> ClapResult<()> {$/;"	f
private	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^mod private {$/;"	n
private	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^pub mod private;$/;"	n
private	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^mod private {$/;"	n
private	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^mod private {$/;"	n
private	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^mod private {$/;"	n
private_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub private_key: Option<String>,$/;"	m	struct:ServiceAccountKey
private_key_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub private_key_id: Option<String>,$/;"	m	struct:ServiceAccountKey
process_arg_overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn process_arg_overrides<'b>($/;"	P	implementation:ArgMatcher
project_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub project_id: Option<String>,$/;"	m	struct:ServiceAccountKey
project_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub project_id: Option<String>,$/;"	m	struct:ApplicationSecret
promote_tls_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn promote_tls_error(&mut self) -> io::Result<()> {$/;"	P	implementation:TlsStream
propagate_globals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn propagate_globals(&mut self) {$/;"	f
propagate_globals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn propagate_globals(&mut self, global_arg_vec: &[&'a str]) {$/;"	P	implementation:ArgMatcher
propagate_help_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn propagate_help_version(&mut self) {$/;"	f
propagate_settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn propagate_settings(&mut self) {$/;"	f
properties	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub properties: Option<HashMap<String, String>>,$/;"	m	struct:File
protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    protocol: Box<Protocol + Send + Sync>,$/;"	m	struct:Client
proxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    proxy: Option<(Scheme, Cow<'static, str>, u16)>$/;"	m	struct:Client
proxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^mod proxy;$/;"	n
proxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    pub proxy: (Scheme, Cow<'static, str>, u16),$/;"	m	struct:Proxy
publish_auto	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub publish_auto: Option<bool>,$/;"	m	struct:Revision
published	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub published: Option<bool>,$/;"	m	struct:Revision
published_outside_domain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub published_outside_domain: Option<bool>,$/;"	m	struct:Revision
push_dropped	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn push_dropped(&self, logger_values: &OwnedKVList) -> AsyncResult<()> {$/;"	P	implementation:Async
push_href_lang	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn push_href_lang(mut self, language_tag: LanguageTag) -> LinkValue {$/;"	P	implementation:LinkValue
push_media_desc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn push_media_desc(mut self, media_desc: MediaDesc) -> LinkValue {$/;"	P	implementation:LinkValue
push_rel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn push_rel(mut self, rel: RelationType) -> LinkValue {$/;"	P	implementation:LinkValue
push_rev	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn push_rev(mut self, rev: RelationType) -> LinkValue {$/;"	P	implementation:LinkValue
push_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn push_value(&mut self, link_value: LinkValue) {$/;"	P	implementation:Link
put	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn put<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
q	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn q(mut self, new_value: &str) -> DriveListCall<'a, C, A> {$/;"	f
q	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn q(mut self, new_value: &str) -> FileListCall<'a, C, A> {$/;"	f
q	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn q(mut self, new_value: &str) -> TeamdriveListCall<'a, C, A> {$/;"	f
q	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^pub fn q(f: f32) -> Quality {$/;"	f
qitem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^pub fn qitem<T>(item: T) -> QualityItem<T> {$/;"	f
quality	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    pub quality: Quality,$/;"	m	struct:QualityItem
quality_item	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/mod.rs	/^mod quality_item;$/;"	n
query_transfer_status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn query_transfer_status(&mut self) -> std::result::Result<u64, hyper::Result<hyper::client:/;"	f
quota_bytes_used	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub quota_bytes_used: Option<String>,$/;"	m	struct:File
quoted_file_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub quoted_file_content: Option<CommentQuotedFileContent>,$/;"	m	struct:Comment
r	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    r: &'a mut R,$/;"	m	struct:DecoderReader
r_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub r_ifs: Vec<(&'a str, &'b str, &'a str)>,$/;"	m	struct:Parser
r_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub r_ifs: Option<Vec<(&'a str, &'b str)>>,$/;"	m	struct:Arg
r_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub r_unless: Option<Vec<&'a str>>,$/;"	m	struct:Base
rand_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn rand_bytes(&mut self, rand: usize) -> &mut Self {$/;"	P	implementation:Builder
random_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/tests.rs	/^pub fn random_config<R: Rng>(rng: &mut R) -> Config {$/;"	f
random_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    random_len: usize,$/;"	m	struct:Builder
range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub range: Option<Chunk>,$/;"	m	struct:ContentRange
range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod range;$/;"	n
range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^mod range {$/;"	n
raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn raw(self, raw: bool) -> Self {$/;"	P	implementation:Arg
raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    pub fn raw(&self) -> &[Vec<u8>] {$/;"	P	implementation:Item
raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    raw: OptCell<Vec<Vec<u8>>>,$/;"	m	struct:Item
raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    macro_rules! raw {$/;"	M	module:tests
raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod raw;$/;"	n
raw_buffer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    raw_buffer: Option<Vec<u8>>,$/;"	m	struct:IoRead
raw_buffering_start_index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    raw_buffering_start_index: usize,$/;"	m	struct:SliceRead
raw_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    pub fn raw_mut(&mut self) -> &mut Vec<Vec<u8>> {$/;"	P	implementation:Item
raw_parts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    raw_parts: Vec<(Headers, &'a mut dyn Read)>,$/;"	m	struct:MultiPartReader
raw_status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub raw_status: RawStatus,$/;"	m	struct:ResponseHead
raw_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    pub raw_value: Option<&'de str>,$/;"	m	struct:BorrowedRawDeserializer
raw_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    pub raw_value: Option<String>,$/;"	m	struct:OwnedRawDeserializer
raw_watcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub fn raw_watcher(tx: Sender<RawEvent>) -> Result<RecommendedWatcher> {$/;"	f
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^pub mod read;$/;"	n
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:DecoderReader
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^    fn read(&mut self, buf: &mut [u8]) -> Result<usize, io::Error> {$/;"	P	implementation:RandomShortRead
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn read(&mut self, _: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:DummyNetworkStream
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:MultiPartReader
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:tests::SlowRead
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:BufReader
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^            fn read(&mut self, _buf: &mut [u8]) -> ::std::io::Result<usize> {$/;"	P	implementation:tests::test_request_body_error_is_returned::BadBody
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Body
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:PooledStream
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        fn read(&mut self, _buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:no_ssl::Void
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Proxied
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Response
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^        fn read(s: &str, result: u64) {$/;"	f	function:tests::test_read_chunk_size
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Http11Message
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:HttpReader
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:MockStream
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub read: Cursor<Vec<u8>>,$/;"	m	struct:MockStream
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:HttpStream
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:HttpsStream
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    read: Option<Duration>,$/;"	m	struct:Timeouts
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Request
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^    fn read(s: &str, result: RequestUri) {$/;"	f	function:test_uri_fromstr
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:TlsStream
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:WrappedStream
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    read: R,$/;"	m	struct:Deserializer
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod read;$/;"	n
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:NamedTempFile
read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:SpooledTempFile
read_application_secret	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/helper.rs	/^pub fn read_application_secret(path: &Path) -> io::Result<ApplicationSecret> {$/;"	f
read_chunk_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^fn read_chunk_size<R: Read>(rdr: &mut R) -> io::Result<u64> {$/;"	f
read_client_secret	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn read_client_secret(file: String) -> ApplicationSecret {$/;"	f
read_err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^        fn read_err(s: &str) {$/;"	f	function:tests::test_read_chunk_size
read_from_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    fn read_from_delegate(&mut self) -> io::Result<usize> {$/;"	P	implementation:DecoderReader
read_in_short_increments	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^fn read_in_short_increments() {$/;"	f
read_in_short_increments_with_short_delegate_reads	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^fn read_in_short_increments_with_short_delegate_reads() {$/;"	f
read_into_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn read_into_buf(&mut self) -> io::Result<usize> {$/;"	P	implementation:BufReader
read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    read_timeout: Option<Duration>,$/;"	m	struct:Client
read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub read_timeout: Cell<Option<Duration>>,$/;"	m	struct:MockStream
read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    read_timeout : Option<Duration>,$/;"	m	struct:HttpListener
read_to_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn read_to_string(mut r: Response) -> io::Result<String> {$/;"	f	module:tests
read_to_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn read_to_string(mut req: Request) -> io::Result<String> {$/;"	f	module:tests
read_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^fn read_u64(s: &[u8]) -> u64 {$/;"	f
reader	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub reader: &'a mut dyn ReadSeek,$/;"	m	struct:ResumableUploadHelper
reader_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn reader_mut(&mut self) -> Option<&mut HttpReader<BufReader<Box<NetworkStream + Send>>>> {$/;"	P	implementation:Stream
reader_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn reader_ref(&self) -> Option<&HttpReader<BufReader<Box<NetworkStream + Send>>>> {$/;"	P	implementation:Stream
reason	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub reason: String,$/;"	m	struct:ServerMessage
record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    record: &'a Record<'a>,$/;"	m	struct:PushFnValueSerializer
record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! record($/;"	M
record_static	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! record_static($/;"	M
recursive_info	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    recursive_info: HashMap<PathBuf, bool>,$/;"	m	struct:FsEventWatcher
recursive_info	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    recursive_info: HashMap<PathBuf, bool>,$/;"	m	struct:StreamContextInfo
redirect_policy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    redirect_policy: RedirectPolicy,$/;"	m	struct:Client
redirect_uris	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub redirect_uris: Vec<String>,$/;"	m	struct:ApplicationSecret
ref_sender	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    ref_sender: Sender<AsyncMsg>,$/;"	m	struct:AsyncCore
referer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod referer;$/;"	n
referrer_policy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod referrer_policy;$/;"	n
refresh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod refresh;$/;"	n
refresh_flow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    fn refresh_flow() {$/;"	f	module:tests
refresh_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    refresh_token: Option<String>,$/;"	m	struct:JSONTokenResponse
refresh_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    pub fn refresh_token(&mut self,$/;"	f
refresh_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub refresh_token: String,$/;"	m	struct:Token
refute_from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^fn refute_from_str<T>(level_str: &str)$/;"	f
rel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn rel(&self) -> Option<&[RelationType]> {$/;"	P	implementation:LinkValue
rel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    rel: Option<Vec<RelationType>>,$/;"	m	struct:LinkValue
remaining_depth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    remaining_depth: u8,$/;"	m	struct:Deserializer
remote_addr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub remote_addr: SocketAddr,$/;"	m	struct:Request
remove	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn remove(&mut self, arg: &str) {$/;"	P	implementation:ArgMatcher
remove	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    pub fn remove(&mut self, key: &K) -> Option<V> {$/;"	P	implementation:VecMap
remove	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn remove<H: Header + HeaderFormat>(&mut self) -> bool {$/;"	P	implementation:Headers
remove	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn remove(self) -> Value {$/;"	P	implementation:OccupiedEntry
remove	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn remove<Q>(&mut self, key: &Q) -> Option<Value>$/;"	P	implementation:Map
remove_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn remove_all(&mut self, args: &[&str]) {$/;"	P	implementation:ArgMatcher
remove_all_watches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn remove_all_watches(&mut self) -> Result<()> {$/;"	P	implementation:EventLoop
remove_expiration	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn remove_expiration(mut self, new_value: bool) -> PermissionUpdateCall<'a, C, A> {$/;"	f
remove_json_null_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^pub fn remove_json_null_values(value: &mut json::value::Value) {$/;"	f
remove_overrides	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn remove_overrides(&mut self, matcher: &mut ArgMatcher) {$/;"	f
remove_parents	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn remove_parents(mut self, new_value: &str) -> FileUpdateCall<'a, C, A> {$/;"	f
remove_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn remove_path<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	P	implementation:FsEventWatcher
remove_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn remove_raw(&mut self, name: &str) {$/;"	P	implementation:Headers
remove_repeated_events	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^fn remove_repeated_events(mut op: op::Op, prev_op: Option<op::Op>) -> op::Op {$/;"	f
remove_watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn remove_watch(&mut self, path: PathBuf, remove_recursive: bool) -> Result<()> {$/;"	P	implementation:EventLoop
remove_watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn remove_watch(&mut self, path: PathBuf) {$/;"	P	implementation:ReadDirectoryChangesServer
remove_watch_by_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^fn remove_watch_by_event($/;"	f
removed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub removed: Option<bool>,$/;"	m	struct:Change
rename_cookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    rename_cookie: Option<u32>,$/;"	m	struct:Debounce
rename_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    rename_event: Option<RawEvent>,$/;"	m	struct:EventLoop
rename_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    rename_path: Option<PathBuf>,$/;"	m	struct:Debounce
reopen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/other.rs	/^pub fn reopen(_file: &File, _path: &Path) -> io::Result<File> {$/;"	f
reopen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/unix.rs	/^pub fn reopen(file: &File, path: &Path) -> io::Result<File> {$/;"	f
reopen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/windows.rs	/^pub fn reopen(file: &File, _path: &Path) -> io::Result<File> {$/;"	f
reopen	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    pub fn reopen(&self) -> io::Result<File> {$/;"	P	implementation:NamedTempFile
replies	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn replies(&'a self) -> ReplyMethods<'a, C, A> {$/;"	f
replies	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub replies: Option<Vec<Reply>>,$/;"	m	struct:Comment
replies	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub replies: Option<Vec<Reply>>,$/;"	m	struct:ReplyList
reply_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn reply_id(mut self, new_value: &str) -> ReplyDeleteCall<'a, C, A> {$/;"	f
reply_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn reply_id(mut self, new_value: &str) -> ReplyGetCall<'a, C, A> {$/;"	f
reply_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn reply_id(mut self, new_value: &str) -> ReplyUpdateCall<'a, C, A> {$/;"	f
reports_invalid_byte_correctly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^fn reports_invalid_byte_correctly() {$/;"	f
reports_invalid_last_symbol_correctly	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^fn reports_invalid_last_symbol_correctly() {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Channel) -> ChangeWatchCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Channel) -> ChannelStopCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Channel) -> FileWatchCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Comment) -> CommentCreateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Comment) -> CommentUpdateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Drive) -> DriveCreateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Drive) -> DriveUpdateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: File) -> FileCopyCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: File) -> FileCreateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: File) -> FileUpdateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Permission) -> PermissionCreateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Permission) -> PermissionUpdateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Reply) -> ReplyCreateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Reply) -> ReplyUpdateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: Revision) -> RevisionUpdateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: TeamDrive) -> TeamdriveCreateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request(mut self, new_value: TeamDrive) -> TeamdriveUpdateCall<'a, C, A> {$/;"	f
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn request<U: IntoUrl>(&self, method: Method, url: U) -> RequestBuilder {$/;"	P	implementation:Client
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub mod request;$/;"	n
request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^pub mod request;$/;"	n
request_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    pub fn request_code<'b, T, I>(&mut self,$/;"	f
request_failure	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn request_failure(&mut self, _: RequestError) {}$/;"	P	interface:AuthenticatorDelegate
request_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request_id(mut self, new_value: &str) -> DriveCreateCall<'a, C, A> {$/;"	f
request_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn request_id(mut self, new_value: &str) -> TeamdriveCreateCall<'a, C, A> {$/;"	f
request_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    fn request_token(&mut self,$/;"	f
request_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn request_token(&mut self, scopes: &Vec<&str>) -> result::Result<Token, Box<error::Error>> /;"	f
require_delimiter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn require_delimiter(mut self, d: bool) -> Self {$/;"	P	implementation:Arg
require_equals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn require_equals(mut self, r: bool) -> Self {$/;"	P	implementation:Arg
required	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn required(&self) -> Iter<&str> {$/;"	f
required	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub required: Vec<&'a str>,$/;"	m	struct:Parser
required	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn required(self, r: bool) -> Self {$/;"	P	implementation:Arg
required	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn required(mut self, r: bool) -> Self {$/;"	P	implementation:ArgGroup
required	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub required: bool,$/;"	m	struct:ArgGroup
required_if	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn required_if(mut self, arg: &'a str, val: &'b str) -> Self {$/;"	P	implementation:Arg
required_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn required_ifs(mut self, ifs: &[(&'a str, &'b str)]) -> Self {$/;"	P	implementation:Arg
required_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	P	implementation:App
required_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	f
required_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn required_unless(&self) -> Option<&[&'e str]>;$/;"	P	interface:AnyArg
required_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn required_unless(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
required_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	P	implementation:FlagBuilder
required_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	P	implementation:OptBuilder
required_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn required_unless(&self) -> Option<&[&'e str]> {$/;"	P	implementation:PosBuilder
required_unless_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn required_unless_all(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
required_unless_one	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn required_unless_one(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	P	implementation:App
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	f
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]>;$/;"	P	interface:AnyArg
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn requires(mut self, name: &'a str) -> Self {$/;"	P	implementation:Arg
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub requires: Option<Vec<(Option<&'b str>, &'a str)>>,$/;"	m	struct:Base
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	P	implementation:FlagBuilder
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	P	implementation:OptBuilder
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn requires(&self) -> Option<&[(Option<&'e str>, &'n str)]> {$/;"	P	implementation:PosBuilder
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn requires(mut self, n: &'a str) -> Self {$/;"	P	implementation:ArgGroup
requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub requires: Option<Vec<&'a str>>,$/;"	m	struct:ArgGroup
requires_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn requires_all(mut self, names: &[&'a str]) -> Self {$/;"	P	implementation:Arg
requires_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn requires_all(mut self, ns: &[&'a str]) -> Self {$/;"	P	implementation:ArgGroup
requires_if	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn requires_if(mut self, val: &'b str, arg: &'a str) -> Self {$/;"	P	implementation:Arg
requires_ifs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn requires_ifs(mut self, ifs: &[(&'b str, &'a str)]) -> Self {$/;"	P	implementation:Arg
reserve_exact	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub fn reserve_exact(&mut self, cap: usize) {$/;"	P	implementation:MultiPartReader
reset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
reset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	P	implementation:TermRecordDecorator
reset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	f
reset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn reset(&mut self) -> io::Result<()>;$/;"	P	interface:RecordDecorator
resolved	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub resolved: Option<bool>,$/;"	m	struct:Comment
resource_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub resource_id: Option<String>,$/;"	m	struct:Channel
resource_uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub resource_uri: Option<String>,$/;"	m	struct:Channel
response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^pub mod response;$/;"	n
response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^pub mod response;$/;"	n
response_json_decode_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn response_json_decode_error(&mut self, json_encoded_value: &str, json_decode_error: &json:/;"	P	interface:Delegate
restart_timer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^fn restart_timer(timer_id: &mut Option<u64>, path: PathBuf, timer: &mut WatchTimer) {$/;"	f
restrict_to_my_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn restrict_to_my_drive(mut self, new_value: bool) -> ChangeListCall<'a, C, A> {$/;"	f
restrict_to_my_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn restrict_to_my_drive(mut self, new_value: bool) -> ChangeWatchCall<'a, C, A> {$/;"	f
restrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub restrictions: Option<DriveRestrictions>,$/;"	m	struct:Drive
restrictions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub restrictions: Option<TeamDriveRestrictions>,$/;"	m	struct:TeamDrive
result	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    result: RefreshResult,$/;"	m	struct:RefreshFlow
retrieve_device_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    fn retrieve_device_token(&mut self, scopes: &Vec<&str>, code_url: String) -> Result<Token, B/;"	f
retry_interrupted_write_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn retry_interrupted_write_all<W: Write>(w: &mut W, buf: &[u8]) -> io::Result<()> {$/;"	f
retrying_writes_that_error_with_interrupted_works	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn retrying_writes_that_error_with_interrupted_works() {$/;"	f
reuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn reuse(&mut self, key: Key, conn: PooledStreamInner<S>) {$/;"	P	implementation:PoolImpl
rev	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn rev(&self) -> Option<&[RelationType]> {$/;"	P	implementation:LinkValue
rev	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    rev: Option<Vec<RelationType>>,$/;"	m	struct:LinkValue
reverse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    reverse: bool,$/;"	m	struct:Serializer
revision_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn revision_id(mut self, new_value: &str) -> RevisionDeleteCall<'a, C, A> {$/;"	f
revision_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn revision_id(mut self, new_value: &str) -> RevisionGetCall<'a, C, A> {$/;"	f
revision_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn revision_id(mut self, new_value: &str) -> RevisionUpdateCall<'a, C, A> {$/;"	f
revisions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn revisions(&'a self) -> RevisionMethods<'a, C, A> {$/;"	f
revisions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub revisions: Option<Vec<Revision>>,$/;"	m	struct:RevisionList
rng	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^    rng: &'a mut N,$/;"	m	struct:RandomShortRead
rng	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    rng: &'a mut R,$/;"	m	struct:InterruptingWriter
rng	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    rng: &'a mut R,$/;"	m	struct:PartialInterruptingWriter
role	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub role: Option<String>,$/;"	m	struct:Permission
role	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub role: Option<String>,$/;"	m	struct:PermissionPermissionDetails
role	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub role: Option<String>,$/;"	m	struct:PermissionTeamDrivePermissionDetails
roll	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    pub fn roll(&mut self) -> io::Result<()> {$/;"	P	implementation:SpooledTempFile
root	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn root<T>(values: OwnedKV<T>) -> Self$/;"	P	implementation:OwnedKVList
root	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn root<T>(drain: D, values: OwnedKV<T>) -> Logger$/;"	f
root_typed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn root_typed<T>(drain: D, values: OwnedKV<T>) -> Logger<D>$/;"	f
root_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn root_url(&mut self, new_root_url: String) -> String {$/;"	f
rotation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub rotation: Option<i32>,$/;"	m	struct:FileImageMediaMetadata
round_downward	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn round_downward(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
round_nearest	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn round_nearest(fp: &mut ExtendedFloat, shift: i32) -> (bool, bool) {$/;"	f
round_nearest_tie_even	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bhcomp.rs	/^fn round_nearest_tie_even(fp: &mut ExtendedFloat, shift: i32, is_truncated: bool) {$/;"	f
round_nearest_tie_even	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn round_nearest_tie_even(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
round_positive_even	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn round_positive_even(self) -> Self {$/;"	P	interface:Float
round_to_float	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn round_to_float<F, Algorithm>(fp: &mut ExtendedFloat, algorithm: Algorithm)$/;"	f
round_to_native	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/float.rs	/^    pub(crate) fn round_to_native<F, Algorithm>(&mut self, algorithm: Algorithm)$/;"	P	implementation:ExtendedFloat
round_to_native	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn round_to_native<F, Algorithm>(fp: &mut ExtendedFloat, algorithm: Algorithm)$/;"	f
round_toward	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^fn round_toward(fp: &mut ExtendedFloat, shift: i32) -> bool {$/;"	f
rounding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^pub(crate) mod rounding;$/;"	n
roundtrip_random_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/tests.rs	/^fn roundtrip_random_config(input_len_range: Uniform<usize>, iterations: u32) {$/;"	f
roundtrip_random_config_long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/tests.rs	/^fn roundtrip_random_config_long() {$/;"	f
roundtrip_random_config_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/tests.rs	/^fn roundtrip_random_config_short() {$/;"	f
rstatic	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    rstatic: &'a RecordStatic<'a>,$/;"	m	struct:Record
run	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    fn run(&mut self) {$/;"	P	implementation:ScheduleWorker
run	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn run(&mut self) -> Result<()> {$/;"	P	implementation:FsEventWatcher
run	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    pub fn run(self) {$/;"	P	implementation:EventLoop
run	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn run(&mut self, delay: Duration, mut event_tx: EventTx) {$/;"	P	implementation:PollWatcher
run	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn run(mut self) {$/;"	P	implementation:ReadDirectoryChangesServer
run_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn run_request(req: Request<Fresh>) -> Vec<u8> {$/;"	f	module:tests
runloop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    runloop: Option<usize>,$/;"	m	struct:FsEventWatcher
running	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    running: bool,$/;"	m	struct:EventLoop
rx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    rx: Receiver<Action>,$/;"	m	struct:ReadDirectoryChangesServer
s	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub s: Switched<'b>,$/;"	m	struct:Arg
s	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    pub s: Switched<'e>,$/;"	m	struct:FlagBuilder
s	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    pub s: Switched<'e>,$/;"	m	struct:OptBuilder
s	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^macro_rules! s($/;"	M
safe	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    pub fn safe(&self) -> bool {$/;"	P	implementation:Method
sc_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! sc_names {$/;"	M
scalar	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^mod scalar {$/;"	n
scan_decimal	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn scan_decimal(&mut self, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_exponent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn scan_exponent(&mut self, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_integer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn scan_integer(&mut self, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_number	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn scan_number(&mut self, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_or_eof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn scan_or_eof(&mut self, buf: &mut String) -> Result<u8> {$/;"	P	implementation:Deserializer
schedule	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    pub fn schedule(&mut self, path: PathBuf) -> u64 {$/;"	P	implementation:WatchTimer
schema	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn schema() {$/;"	f	module:tests
scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    scheme: Scheme,$/;"	m	struct:ProxyConfig
scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^mod scheme {$/;"	n
scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^	fn scheme() -> Option<&'static str> {$/;"	P	implementation:Bearer
scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn scheme() -> Option<&'static str> {$/;"	P	implementation:Basic
scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn scheme() -> Option<&'static str> {$/;"	P	implementation:String
scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn scheme() -> Option<&'static str>;$/;"	P	interface:Scheme
scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    pub scheme: String,$/;"	m	struct:Origin
scheme	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn scheme() -> Option<&'static str> {$/;"	P	implementation:Scheme
scientific_exponent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/exponent.rs	/^pub(crate) fn scientific_exponent($/;"	f
scope	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    scope: String,$/;"	m	struct:Claims
scopes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    pub scopes: Option<Vec<String>>,$/;"	m	struct:JSONToken
scratch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    scratch: Vec<u8>,$/;"	m	struct:Deserializer
sdebug	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^    macro_rules! sdebug {$/;"	M	module:debug_macros
sdebugln	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^    macro_rules! sdebugln {$/;"	M	module:debug_macros
sealed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^mod sealed {$/;"	n
secret	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    secret: ApplicationSecret,$/;"	m	struct:Authenticator
seek	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn seek(&mut self, pos: SeekFrom) -> io::Result<u64> {$/;"	P	implementation:NamedTempFile
seek	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    fn seek(&mut self, pos: SeekFrom) -> io::Result<u64> {$/;"	P	implementation:SpooledTempFile
send	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn send(self) -> ::Result<Response> {$/;"	P	implementation:RequestBuilder
send	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn send(self) -> ::Result<Response> {$/;"	P	implementation:Request
send	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn send(self, body: &[u8]) -> io::Result<()> {$/;"	P	implementation:Response
send	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    pub fn send(&mut self, event: RawEvent) {$/;"	P	implementation:EventTx
send	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn send(&self, r: AsyncRecord) -> AsyncResult<()> {$/;"	P	implementation:AsyncCore
send_action_require_ack	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn send_action_require_ack(&mut self, action: Action, pb: &PathBuf) -> Result<()> {$/;"	P	implementation:ReadDirectoryChangesWatcher
send_notification_email	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn send_notification_email(mut self, new_value: bool) -> PermissionCreateCall<'a, C, A> /;"	f
send_pending_rename_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^fn send_pending_rename_event(event: Option<RawEvent>, event_tx: &mut EventTx) {$/;"	f
send_pending_rename_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^fn send_pending_rename_event(rename_event: &mut Option<RawEvent>, event_tx: &mut EventTx) {$/;"	f
send_pending_rename_event	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^fn send_pending_rename_event(event: Option<RawEvent>, event_tx: &mut EventTx) {$/;"	f
sensor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub sensor: Option<String>,$/;"	m	struct:FileImageMediaMetadata
sep	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    sep: u8,$/;"	m	struct:OsSplit
seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    seq: A,$/;"	m	struct:SeqAccessDeserializer
seq_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	M
seq_impl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	M
ser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^pub mod ser;$/;"	n
ser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/mod.rs	/^pub mod ser;$/;"	n
ser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^mod ser;$/;"	n
ser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^pub mod ser;$/;"	n
ser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    ser: &'a mut Serializer<W, F>,$/;"	m	struct:MapKeySerializer
ser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^mod ser;$/;"	n
ser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub mod ser {$/;"	n
serde_if_integer128	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	M
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:content::Content
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Arguments
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CStr
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CString
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Duration
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:IpAddr
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv4Addr
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv6Addr
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsStr
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsString
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Path
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PathBuf
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PhantomData
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddr
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV4
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV6
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:String
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SystemTime
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:T
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:str
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	interface:Serialize
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Map
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Number
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:RawValue
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize<S>(&self, serializer: S) -> result::Result<S::Ok, S::Error>$/;"	P	implementation:Value
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:Arguments
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:BorrowedKV
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:Display
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:KV
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:MultiListNode
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:Option
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:OwnedKVList
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:R
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:SocketAddr
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:String
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:Value
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	implementation:str
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	P	interface:Value
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize($/;"	f
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize(&self, record: &Record, serializer: &mut Serializer)$/;"	P	interface:KV
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn serialize<'b, S: 'b + Value>(self, s: S) -> Result {$/;"	P	implementation:PushFnValueSerializer
serialize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^            fn serialize($/;"	P	implementation:expressions::K
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f	module:content
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<()> {$/;"	f
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<()> {$/;"	f
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f	module:content
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_bytes(self, _v: &[u8]) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f	module:content
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_char(self, value: char) -> Result<()> {$/;"	f
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_display_bounded_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	M
serialize_element	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_element	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeSeq
serialize_element	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTuple
serialize_element	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_element	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	P	implementation:SerializeVec
serialize_entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f	module:content
serialize_entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_entry	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	P	interface:SerializeMap
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f	module:content
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<()> {$/;"	f
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<()> {$/;"	f
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f	module:content
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<()> {$/;"	f
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<()> {$/;"	f
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_fallback	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn serialize_fallback($/;"	P	interface:SerdeValue
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f	module:content
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f	module:content
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStruct
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStructVariant
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleStruct
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleVariant
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	f
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	P	implementation:SerializeMap
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	P	implementation:SerializeStructVariant
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	P	implementation:SerializeTupleVariant
serialize_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	P	implementation:SerializeVec
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f	module:content
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<()> {$/;"	f
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f	module:content
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<()> {$/;"	f
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f	module:content
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<()> {$/;"	f
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f	module:content
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<()> {$/;"	f
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f	module:content
serialize_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	f
serialize_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	P	implementation:SerializeMap
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f	module:content
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, fmt::Error> {$/;"	P	implementation:Formatter
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	P	interface:Serializer
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:NumberStrEmitter
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:RawValueStrEmitter
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:MapKeySerializer
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:NumberValueEmitter
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:RawValueEmitter
serialize_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:Serializer
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f	module:content
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	interface:Serializer
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<()>$/;"	P	implementation:NumberStrEmitter
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<()>$/;"	P	implementation:RawValueStrEmitter
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<()>$/;"	f
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<Value>$/;"	P	implementation:NumberValueEmitter
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<Value>$/;"	P	implementation:RawValueEmitter
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<String>$/;"	P	implementation:MapKeySerializer
serialize_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<Value>$/;"	P	implementation:Serializer
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f	module:content
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Formatter
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	interface:Serializer
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:NumberStrEmitter
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:RawValueStrEmitter
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	f
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:MapKeySerializer
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:NumberValueEmitter
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:RawValueEmitter
serialize_newtype_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:Serializer
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f	module:content
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_none(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	f
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_none(self) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f	module:content
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, fmt::Error> {$/;"	P	implementation:Formatter
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	P	interface:Serializer
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:NumberStrEmitter
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:RawValueStrEmitter
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:MapKeySerializer
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:NumberValueEmitter
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:RawValueEmitter
serialize_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:Serializer
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f	module:content
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<()>$/;"	P	implementation:NumberStrEmitter
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<()>$/;"	P	implementation:RawValueStrEmitter
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<()>$/;"	f
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<()>$/;"	f
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<String>$/;"	P	implementation:MapKeySerializer
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<Value>$/;"	P	implementation:NumberValueEmitter
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<Value>$/;"	P	implementation:RawValueEmitter
serialize_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<Value>$/;"	P	implementation:Serializer
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f	module:content
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	f
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_struct($/;"	f	module:content
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_struct($/;"	P	implementation:Formatter
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_struct($/;"	P	interface:Serializer
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:NumberStrEmitter
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:RawValueStrEmitter
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	f
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:MapKeySerializer
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:NumberValueEmitter
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:RawValueEmitter
serialize_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	P	implementation:Serializer
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f	module:content
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Formatter
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	P	interface:Serializer
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:NumberStrEmitter
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:RawValueStrEmitter
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:MapKeySerializer
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:NumberValueEmitter
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:RawValueEmitter
serialize_struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Serializer
serialize_tagged_newtype	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f	module:content
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, fmt::Error> {$/;"	P	implementation:Formatter
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	P	interface:Serializer
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:NumberStrEmitter
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:RawValueStrEmitter
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:MapKeySerializer
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:NumberValueEmitter
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:RawValueEmitter
serialize_tuple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:Serializer
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f	module:content
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Formatter
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	P	interface:Serializer
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:NumberStrEmitter
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:RawValueStrEmitter
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:MapKeySerializer
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:NumberValueEmitter
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:RawValueEmitter
serialize_tuple_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Serializer
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f	module:content
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Formatter
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	P	interface:Serializer
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:NumberStrEmitter
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:RawValueStrEmitter
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:MapKeySerializer
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:NumberValueEmitter
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:RawValueEmitter
serialize_tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Serializer
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f	module:content
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<()> {$/;"	f
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f	module:content
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<()> {$/;"	f
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f	module:content
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<()> {$/;"	f
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f	module:content
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<()> {$/;"	f
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f	module:content
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_unit(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	f
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f	module:content
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	f
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_unit_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f	module:content
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/fmt.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Formatter
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	P	interface:Serializer
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:NumberStrEmitter
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:RawValueStrEmitter
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:MapKeySerializer
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:NumberValueEmitter
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:RawValueEmitter
serialize_unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Serializer
serialize_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	P	implementation:SerializeMap
serializer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    serializer: &'a mut Serializer,$/;"	m	struct:PushFnValueSerializer
server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod server;$/;"	n
server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod server;$/;"	n
server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    server: Option<server::Listening>,$/;"	m	struct:InstalledFlow
service_account	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod service_account;$/;"	n
service_account_key_from_file	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/helper.rs	/^pub fn service_account_key_from_file(path: &String) -> io::Result<ServiceAccountKey> {$/;"	f
sess	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  sess: Box<rustls::Session>,$/;"	m	struct:TlsStream
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn set(&mut self, _: ArgSettings) {$/;"	P	implementation:App
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn set(&mut self, s: AS) {$/;"	f
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn set(&mut self, ArgSettings);$/;"	P	interface:AnyArg
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn set(&mut self, _: ArgSettings) {$/;"	f
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn set(mut self, s: ArgSettings) -> Self {$/;"	P	implementation:Arg
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub fn set(&mut self, s: ArgSettings) {$/;"	P	implementation:Base
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	P	implementation:FlagBuilder
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	P	implementation:OptBuilder
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn set(&mut self, s: ArgSettings) {$/;"	P	implementation:PosBuilder
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    pub fn set(&self, val: T) {$/;"	P	implementation:OptCell
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn set<H: Header + HeaderFormat>(&mut self, value: H) {$/;"	P	implementation:Headers
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn set($/;"	P	implementation:DiskTokenStorage
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn set($/;"	P	implementation:MemoryStorage
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn set(&mut self, _: u64, _: &Vec<&str>, _: Option<Token>) -> Result<(), NullError> {$/;"	P	implementation:NullStorage
set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    fn set(&mut self,$/;"	P	interface:TokenStorage
set_anchor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn set_anchor<T: Into<String>>(mut self, anchor: T) -> LinkValue {$/;"	P	implementation:LinkValue
set_cookie	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod set_cookie;$/;"	n
set_expiry_absolute	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub fn set_expiry_absolute(&mut self) -> &mut Token {$/;"	P	implementation:Token
set_failed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn set_failed(&mut self, _failed: &mut bool) {$/;"	P	implementation:SliceRead
set_failed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool) {$/;"	P	implementation:StrRead
set_failed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool) {$/;"	f
set_failed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool);$/;"	P	interface:Read
set_idle_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub fn set_idle_timeout(&mut self, timeout: Option<Duration>) {$/;"	P	implementation:Pool
set_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    pub fn set_len(&mut self, size: u64) -> Result<(), io::Error> {$/;"	P	implementation:SpooledTempFile
set_media_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn set_media_type(mut self, media_type: Mime) -> LinkValue {$/;"	P	implementation:LinkValue
set_outgoing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn set_outgoing(&mut self, mut head: RequestHead) -> ::Result<RequestHead> {$/;"	P	implementation:Http11Message
set_outgoing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    fn set_outgoing(&mut self, head: RequestHead) -> ::Result<RequestHead>;$/;"	P	interface:HttpMessage
set_pool_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn set_pool_config(&mut self, pool_config: Option<pool::Config>) {$/;"	f
set_previous_response_expected_no_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn set_previous_response_expected_no_content(&mut self, expected: bool) {$/;"	P	implementation:PooledStream
set_previous_response_expected_no_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_previous_response_expected_no_content(&mut self, _expected: bool) { }$/;"	P	interface:NetworkStream
set_proxied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn set_proxied(&mut self, val: bool) {$/;"	P	implementation:Http11Message
set_proxied	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    fn set_proxied(&mut self, val: bool) {$/;"	P	interface:HttpMessage
set_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn set_raw<K: Into<Cow<'static, str>>>(&mut self, name: K,$/;"	P	implementation:Headers
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn set_read_timeout(&self, _dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:DummyNetworkStream
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn set_read_timeout(&mut self, dur: Option<Duration>) {$/;"	P	implementation:Client
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:PooledStream
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        fn set_read_timeout(&self, _dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:no_ssl::Void
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:Proxied
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:Request
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:Http11Message
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()>;$/;"	P	interface:HttpMessage
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:MockStream
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_read_timeout(&mut self, _: Option<Duration>) {$/;"	P	interface:NetworkListener
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_read_timeout(&mut self, duration: Option<Duration>) {$/;"	P	implementation:HttpListener
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_read_timeout(&mut self, duration: Option<Duration>) {$/;"	P	implementation:HttpsListener
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:HttpStream
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:HttpsStream
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()>;$/;"	P	interface:NetworkStream
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn set_read_timeout(&self, s: &NetworkStream, timeout: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:Worker
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn set_read_timeout(&mut self, dur: Option<Duration>) {$/;"	P	implementation:Server
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub fn set_read_timeout(&self, timeout: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:Request
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:TlsStream
set_read_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn set_read_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:WrappedStream
set_redirect_policy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn set_redirect_policy(&mut self, policy: RedirectPolicy) {$/;"	P	implementation:Client
set_stale_check	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub fn set_stale_check<F>(&mut self, callback: F)$/;"	P	implementation:Pool
set_sub_claim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^fn set_sub_claim(mut claims: Claims, sub: String) -> Claims {$/;"	f
set_tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn set_tag(&mut self, tag: String) {$/;"	P	implementation:EntityTag
set_term_width	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn set_term_width(mut self, width: usize) -> Self {$/;"	P	implementation:App
set_title	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn set_title<T: Into<String>>(mut self, title: T) -> LinkValue {$/;"	P	implementation:LinkValue
set_title_star	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn set_title_star<T: Into<String>>(mut self, title_star: T) -> LinkValue {$/;"	P	implementation:LinkValue
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn set_write_timeout(&self, _dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:DummyNetworkStream
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn set_write_timeout(&mut self, dur: Option<Duration>) {$/;"	P	implementation:Client
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:PooledStream
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        fn set_write_timeout(&self, _dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:no_ssl::Void
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:Proxied
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:Request
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:Http11Message
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()>;$/;"	P	interface:HttpMessage
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:MockStream
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_write_timeout(&mut self, _: Option<Duration>) {$/;"	P	interface:NetworkListener
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_write_timeout(&mut self, duration: Option<Duration>) {$/;"	P	implementation:HttpListener
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_write_timeout(&mut self, duration: Option<Duration>) {$/;"	P	implementation:HttpsListener
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:HttpStream
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:HttpsStream
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()>;$/;"	P	interface:NetworkStream
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub fn set_write_timeout(&mut self, dur: Option<Duration>) {$/;"	P	implementation:Server
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:TlsStream
set_write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn set_write_timeout(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:WrappedStream
setb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn setb(&mut self, s: ArgSettings) {$/;"	P	implementation:Arg
setting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:App
settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^mod settings;$/;"	n
settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    settings: AppFlags,$/;"	m	struct:Parser
settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub settings: ArgFlags,$/;"	m	struct:Base
settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^pub mod settings;$/;"	n
shared	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub shared: Option<bool>,$/;"	m	struct:File
shared	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^mod shared;$/;"	n
shared_with_me_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub shared_with_me_time: Option<String>,$/;"	m	struct:File
sharing_user	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub sharing_user: Option<User>,$/;"	m	struct:File
shell	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^mod shell;$/;"	n
shift	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod shift;$/;"	n
shl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/shift.rs	/^pub(crate) fn shl(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn short<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	P	implementation:Help
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn short(&self) -> Option<char> {$/;"	P	implementation:App
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn short(&self) -> Option<char> {$/;"	f
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn short(&self) -> Option<char>;$/;"	P	interface:AnyArg
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn short<S: AsRef<str>>(mut self, s: S) -> Self {$/;"	P	implementation:Arg
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn short(&self) -> Option<char> {$/;"	P	implementation:FlagBuilder
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn short(&self) -> Option<char> {$/;"	P	implementation:OptBuilder
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn short(&self) -> Option<char> {$/;"	P	implementation:PosBuilder
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^    pub short: Option<char>,$/;"	m	struct:Switched
short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn short(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
short_or_long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn short_or_long(&mut self, arg: &mut Arg<'a, 'a>) {$/;"	P	implementation:UsageParser
shortcut_details	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub shortcut_details: Option<FileShortcutDetails>,$/;"	m	struct:File
shorts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! shorts {$/;"	M
should_have_response_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^fn should_have_response_body(method: &Method, status: u16) -> bool {$/;"	f
should_keep_alive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/mod.rs	/^pub fn should_keep_alive(version: HttpVersion, headers: &Headers) -> bool {$/;"	f
should_show_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^fn should_show_arg(use_long: bool, arg: &ArgWithOrder) -> bool {$/;"	f
should_use_color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn should_use_color(&self) -> bool {$/;"	P	implementation:AnyTerminal
shr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/shift.rs	/^pub(crate) fn shr(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
sign	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn sign(&self, private_key: &str) -> Result<String, Box<error::Error>> {$/;"	P	implementation:JWT
simple	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^fn simple() {$/;"	f
simple_logger_erased	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^fn simple_logger_erased() {$/;"	f
since_when	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    since_when: fs::FSEventStreamEventId,$/;"	m	struct:FsEventWatcher
single_precision	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    single_precision: bool,$/;"	m	struct:Deserializer
size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub size: Option<String>,$/;"	m	struct:File
size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub size: Option<String>,$/;"	m	struct:Revision
size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn size(&self) -> Option<u64> {$/;"	P	implementation:Body
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Indices
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:OsValues
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Values
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:MapAccess
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:SeqAccess
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f	module:content
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^pub mod size_hint {$/;"	n
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:MapDeserializer
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:MapRefDeserializer
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:SeqDeserializer
size_hint	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:SeqRefDeserializer
skip_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStruct
skip_field	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStructVariant
slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/read.rs	/^    slice: &'a [u8],$/;"	m	struct:SliceRead
slog_b	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_b($/;"	M
slog_crit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_crit($/;"	M
slog_debug	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_debug($/;"	M
slog_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_error($/;"	M
slog_info	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_info($/;"	M
slog_kv	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_kv($/;"	M
slog_log	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_log($/;"	M
slog_o	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_o($/;"	M
slog_record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_record($/;"	M
slog_record_static	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_record_static($/;"	M
slog_trace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_trace($/;"	M
slog_warn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! slog_warn($/;"	M
small	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub small: ExtendedFloatArray,$/;"	m	struct:ModeratePathPowers
small	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^mod small {$/;"	n
small_atof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/bhcomp.rs	/^fn small_atof<F>(mantissa: Bigint, exponent: i32, f: F) -> F$/;"	f
small_int	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub small_int: &'static [u64],$/;"	m	struct:ModeratePathPowers
small_powers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/mod.rs	/^mod small_powers;$/;"	n
sock	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn sock(s: &str) -> SocketAddr {$/;"	f	module:tests
socket	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    pub socket: SocketAddr,$/;"	m	struct:Listening
source	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/std_error.rs	/^    fn source(&self) -> Option<&(Error + 'static)> {$/;"	P	interface:Error
source	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:Error
source	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:PathError
source	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:PathPersistError
source	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:PersistError
space	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn space(mut self, new_value: &str) -> FileGenerateIdCall<'a, C, A> {$/;"	f
space	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub space: Option<String>,$/;"	m	struct:GeneratedIds
spaces	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn spaces(mut self, new_value: &str) -> ChangeListCall<'a, C, A> {$/;"	f
spaces	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn spaces(mut self, new_value: &str) -> ChangeWatchCall<'a, C, A> {$/;"	f
spaces	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn spaces(mut self, new_value: &str) -> FileListCall<'a, C, A> {$/;"	f
spaces	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub spaces: Option<Vec<String>>,$/;"	m	struct:File
spawn_thread	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    fn spawn_thread($/;"	f
spawn_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^fn spawn_with<A, F>(supervisor: mpsc::Sender<()>, work: Arc<F>, mut acceptor: A)$/;"	f
spec_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn spec_vals(&self, a: &ArgWithDisplay) -> String {$/;"	P	implementation:Help
split	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn split(&self, b: u8) -> OsSplit {$/;"	P	implementation:OsStr
split	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn split(&self, b: u8) -> OsSplit;$/;"	P	interface:OsStrExt2
split	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	P	implementation:private::B
split	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	P	interface:private::Pair
split_at	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn split_at(&self, i: usize) -> (&OsStr, &OsStr) {$/;"	P	implementation:OsStr
split_at	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn split_at(&self, i: usize) -> (&OsStr, &OsStr);$/;"	P	interface:OsStrExt2
split_at_byte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn split_at_byte(&self, b: u8) -> (&OsStr, &OsStr);$/;"	P	interface:OsStrExt2
split_at_byte	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn split_at_byte(&self, byte: u8) -> (&OsStr, &OsStr) {$/;"	P	implementation:OsStr
split_in_two	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_range.rs	/^fn split_in_two(s: &str, separator: char) -> Option<(&str, &str)> {$/;"	f
split_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^fn split_u64(x: u64) -> [Limb; 1] {$/;"	f
split_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^fn split_u64(x: u64) -> [Limb; 2] {$/;"	f
spooled	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^mod spooled;$/;"	n
spooled_tempfile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^pub fn spooled_tempfile(max_size: usize) -> SpooledTempFile {$/;"	f
src	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    src: &'a str,$/;"	m	struct:SplitAsciiUnquoted
ssl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    ssl: S,$/;"	m	struct:ProxyConfig
ssl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    pub ssl: S,$/;"	m	struct:Proxy
ssl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    ssl: S,$/;"	m	struct:HttpsConnector
ssl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    ssl: S,$/;"	m	struct:HttpsListener
ssl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub fn ssl<T: NetworkStream>(&self) -> Option<&T> {$/;"	P	implementation:Request
stack	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    stack: Vec<(String, String)>,$/;"	m	struct:Serializer
stale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^        pub fn stale(self) -> Stale {$/;"	P	implementation:stale::StaleCheck
stale	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^mod stale {$/;"	n
stale_check	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    stale_check: Option<StaleCallback<C::Stream>>,$/;"	m	struct:Pool
star	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept.rs	/^    pub fn star() -> Accept {$/;"	P	implementation:Accept
starred	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub starred: Option<bool>,$/;"	m	struct:File
start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    start: usize,$/;"	m	struct:UsageParser
start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn start(mut self) -> ::Result<Request<Streaming>> {$/;"	P	implementation:Request
start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn start(mut self) -> io::Result<Response<'a, Streaming>> {$/;"	P	implementation:Response
start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn start($/;"	P	implementation:ReadDirectoryChangesServer
start_at	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub start_at: Option<u64>,$/;"	m	struct:ResumableUploadHelper
start_comma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_comma(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
start_comma	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_comma(&mut self) -> io::Result<()> {$/;"	P	interface:RecordDecorator
start_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_key(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
start_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_key(&mut self) -> io::Result<()> {$/;"	P	implementation:TermRecordDecorator
start_key	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_key(&mut self) -> io::Result<()> {$/;"	P	interface:RecordDecorator
start_level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_level(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
start_level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_level(&mut self) -> io::Result<()> {$/;"	P	implementation:TermRecordDecorator
start_level	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_level(&mut self) -> io::Result<()> {$/;"	P	interface:RecordDecorator
start_modified_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn start_modified_time(mut self, new_value: &str) -> CommentListCall<'a, C, A> {$/;"	f
start_msg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_msg(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
start_msg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_msg(&mut self) -> io::Result<()> {$/;"	P	implementation:TermRecordDecorator
start_msg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_msg(&mut self) -> io::Result<()> {$/;"	P	interface:RecordDecorator
start_of_line	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/iter.rs	/^    start_of_line: usize,$/;"	m	struct:LineColIterator
start_page_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub start_page_token: Option<String>,$/;"	m	struct:StartPageToken
start_read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^fn start_read(rd: &ReadData, event_tx: Arc<Mutex<EventTx>>, handle: HANDLE) {$/;"	f
start_separator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_separator(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
start_separator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_separator(&mut self) -> io::Result<()> {$/;"	P	interface:RecordDecorator
start_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_timestamp(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
start_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_timestamp(&mut self) -> io::Result<()> {$/;"	P	interface:RecordDecorator
start_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_value(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
start_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_value(&mut self) -> io::Result<()> {$/;"	P	interface:RecordDecorator
start_whitespace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_whitespace(&mut self) -> io::Result<()> {$/;"	P	implementation:Box
start_whitespace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn start_whitespace(&mut self) -> io::Result<()> {$/;"	P	interface:RecordDecorator
starts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^        fn starts(h: &str, n: &OsStr) -> bool {$/;"	f	function:possible_subcommand
starts_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn starts_with(&self, s: &[u8]) -> bool {$/;"	P	implementation:OsStr
starts_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn starts_with(&self, s: &[u8]) -> bool;$/;"	P	interface:OsStrExt2
starts_with_digit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^fn starts_with_digit(slice: &str) -> bool {$/;"	f
state	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    state: Option<DeviceFlowState>,$/;"	m	struct:DeviceFlow
static_	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/mod.rs	/^mod static_;$/;"	n
status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    pub status: status::StatusCode,$/;"	m	struct:Response
status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod status;$/;"	n
status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn status(&self) -> status::StatusCode { self.status }$/;"	P	implementation:Response
status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    status: status::StatusCode,$/;"	m	struct:Response
status_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub fn status_mut(&mut self) -> &mut status::StatusCode { &mut self.status }$/;"	P	implementation:Response
status_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    pub fn status_raw(&self) -> &RawStatus {$/;"	P	implementation:Response
status_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    status_raw: RawStatus,$/;"	m	struct:Response
std_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/lib.rs	/^mod std_error;$/;"	n
std_only	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^mod std_only {$/;"	n
stderr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn stderr(mut self) -> Self {$/;"	P	implementation:TermDecoratorBuilder
stdout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn stdout(mut self) -> Self {$/;"	P	implementation:TermDecoratorBuilder
step	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/cached.rs	/^    pub step: i32,$/;"	m	struct:ModeratePathPowers
stop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn stop(&self, request: Channel) -> ChannelStopCall<'a, C, A> {$/;"	P	implementation:ChannelMethods
stop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn stop(&mut self) {$/;"	P	implementation:FsEventWatcher
stop_at	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    fn stop_at<F>(&mut self, f: F)$/;"	P	implementation:UsageParser
stop_trigger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    stop_trigger: Arc<Condvar>,$/;"	m	struct:ScheduleWorker
stop_trigger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    stop_trigger: Arc<Condvar>,$/;"	m	struct:WatchTimer
stop_watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^fn stop_watch(ws: &WatchState, meta_tx: &Sender<MetaEvent>) {$/;"	f
stopped	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    stopped: Arc<AtomicBool>,$/;"	m	struct:ScheduleWorker
stopped	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    stopped: Arc<AtomicBool>,$/;"	m	struct:WatchTimer
storage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    storage: S,$/;"	m	struct:Authenticator
storage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod storage;$/;"	n
storage_quota	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub storage_quota: Option<AboutStorageQuota>,$/;"	m	struct:About
store_upload_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn store_upload_url(&mut self, url: Option<&str>) {$/;"	P	interface:Delegate
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^const TAB: &'static str = "    ";$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^const INTERNAL_ERROR_MSG: &'static str = "Fatal internal error. Please consider filing a bug \\$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^const INVALID_UTF8: &'static str = "unexpected invalid UTF-8 code point";$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/strext.rs	/^impl _StrExt for str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^                const PREFIX: &'static str = "bytes ";$/;"	v	method:RangeResponseHeader::parse_header
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    type Err = &'static str;$/;"	v	implementation:Chunk
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^const BOUNDARY: &'static str = "MDuXWGyeE33QFXGchb2VFWc4Z7945d";$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a> Into<Body<'a>> for &'a str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a> IntoUrl for &'a str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^const ACCESS_CONTROL_ALLOW_CREDENTIALS_TRUE: UniCase<&'static str> = UniCase("true");$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^const CLOSE: UniCase<&'static str> = UniCase("close");$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^const KEEP_ALIVE: UniCase<&'static str> = UniCase("keep-alive");$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/expect.rs	/^const EXPECT_CONTINUE: UniCase<&'static str> = UniCase("100-continue");$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^        static NAME: &'static str = "Link";$/;"	v	method:Link::header_name
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^        static NAME: &'static str = "Origin";$/;"	v	method:Origin::header_name
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^        static NAME: &'static str = "Referrer-Policy";$/;"	v	method:ReferrerPolicy::header_name
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^pub const LINE_ENDING: &'static str = "\\r\\n";$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	v	method:Duration::deserialize
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	v	method:SystemTime::deserialize
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	v	function:deserialize
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	v	function:deserialize
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	v	module:range
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^impl<'a> Expected for &'a str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for &'a str$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a str$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^impl Serialize for str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    impl Sealed for str {}$/;"	c	module:private
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^impl Index for str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^impl PartialEq<Value> for str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/partial_eq.rs	/^impl<'a> PartialEq<Value> for &'a str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/key/static.rs	/^pub type Key = &'static str;$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^impl Value for str {$/;"	c
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub static LOG_LEVEL_NAMES: [&'static str; 7] =$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^pub static LOG_LEVEL_SHORT_NAMES: [&'static str; 7] =$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    const TEST_APP_SECRET: &'static str = r#"{"installed":{"client_id":"384278056379-tr5pbot1mil/;"	v	module:tests
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^pub const GOOGLE_DEVICE_CODE_URL: &'static str = "https:\/\/accounts.google.com\/o\/oauth2\/devi/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^const OOB_REDIRECT_URI: &'static str = "urn:ietf:wg:oauth:2.0:oob";$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^    const TEST_APP_SECRET: &'static str = r#"{"installed":{"client_id":"384278056379-tr5pbot1mil/;"	v	module:tests
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    const TEST_PRIVATE_KEY_PATH: &'static str = "examples\/Sanguine-69411a0c0eea.json";$/;"	v	module:tests
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^const GOOGLE_RS256_HEAD: &'static str = "{\\"alg\\":\\"RS256\\",\\"typ\\":\\"JWT\\"}";$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^const GRANT_TYPE: &'static str = "urn:ietf:params:oauth:grant-type:jwt-bearer";$/;"	v
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub const SECRET: &'static str =$/;"	v	module:tests
str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    type Err = &'static str;$/;"	v	implementation:Scheme
str_width	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^fn str_width(s: &str) -> usize {$/;"	f
stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^        pub fn stream(&mut self) -> &mut S {$/;"	P	implementation:stale::StaleCheck
stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^        stream: &'a mut S,$/;"	m	struct:stale::StaleCheck
stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    stream: S,$/;"	m	struct:PooledStreamInner
stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    stream: Wrapper<Stream>,$/;"	m	struct:Http11Message
strext	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod strext;$/;"	n
strict_transport_security	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod strict_transport_security;$/;"	n
string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    string: &'a mut String,$/;"	m	struct:StringSink
string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/export.rs	/^mod string {$/;"	n
strip_local_fs	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn strip_local_fs(lfsn: &str) -> Option<&str> {$/;"	f
strong	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn strong(tag: String) -> EntityTag {$/;"	P	implementation:EntityTag
strong_eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn strong_eq(&self, other: &EntityTag) -> bool {$/;"	P	implementation:EntityTag
strong_ne	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn strong_ne(&self, other: &EntityTag) -> bool {$/;"	P	implementation:EntityTag
struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn struct_variant<V>($/;"	P	interface:VariantAccess
struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn struct_variant<V>($/;"	f	module:private
struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn struct_variant<V>($/;"	f	module:content
struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn struct_variant<V>(self, _fields: &'static [&'static str], _visitor: V) -> Result<V::Value/;"	P	implementation:UnitVariantAccess
struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn struct_variant<V>(self, fields: &'static [&'static str], visitor: V) -> Result<V::Value>$/;"	P	implementation:VariantAccess
struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn struct_variant<V>($/;"	P	implementation:UnitOnly
struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn struct_variant<V>($/;"	P	implementation:VariantDeserializer
struct_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn struct_variant<V>($/;"	P	implementation:VariantRefDeserializer
sub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^    pub fn sub(x: Limb, y: Limb) -> (Limb, bool) {$/;"	f	module:scalar
sub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    sub: Option<String>,$/;"	m	struct:Claims
sub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    sub: Option<String>,$/;"	m	struct:ServiceAccountAccess
subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn subcommand(mut self, subcmd: App<'a, 'b>) -> Self {$/;"	P	implementation:App
subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn subcommand(&mut self, sc: SubCommand<'a>) {$/;"	P	implementation:ArgMatcher
subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn subcommand(&self) -> (&str, Option<&ArgMatches<'a>>) {$/;"	P	implementation:ArgMatches
subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub subcommand: Option<Box<SubCommand<'a>>>,$/;"	m	struct:ArgMatches
subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/mod.rs	/^mod subcommand;$/;"	n
subcommand_details	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^    fn subcommand_details(&self) -> String {$/;"	P	implementation:BashGen
subcommand_details	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/zsh.rs	/^fn subcommand_details(p: &Parser) -> String {$/;"	f
subcommand_matches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn subcommand_matches<S: AsRef<str>>(&self, name: S) -> Option<&ArgMatches<'a>> {$/;"	P	implementation:ArgMatches
subcommand_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	P	implementation:ArgMatcher
subcommand_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	P	implementation:ArgMatches
subcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn subcommands<I>(mut self, subcmds: I) -> Self$/;"	P	implementation:App
subcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn subcommands(&self) -> Iter<App> {$/;"	f
subcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub subcommands: Vec<App<'a, 'b>>,$/;"	m	struct:Parser
subcommands_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^pub fn subcommands_of(p: &Parser) -> Vec<(String, String)> {$/;"	f
subcommands_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/zsh.rs	/^fn subcommands_of(p: &Parser) -> String {$/;"	f
subject	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub subject: S,$/;"	m	struct:Incoming
subject_distance	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub subject_distance: Option<i32>,$/;"	m	struct:FileImageMediaMetadata
suffix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn suffix<S: AsRef<OsStr> + ?Sized>(&mut self, suffix: &'b S) -> &mut Self {$/;"	P	implementation:Builder
suffix	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    suffix: &'b OsStr,$/;"	m	struct:Builder
suffix_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^    fn suffix_enum() {$/;"	f	module:test
suffix_long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^    fn suffix_long() {$/;"	f	module:test
suggestions	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod suggestions;$/;"	n
supervisor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^    supervisor: mpsc::Sender<T>,$/;"	m	struct:Sentinel
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> ChangeGetStartPageTokenCall<'a, C, /;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> ChangeListCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> ChangeWatchCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> FileCopyCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> FileCreateCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> FileDeleteCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> FileGetCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> FileListCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> FileUpdateCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> FileWatchCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> PermissionCreateCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> PermissionDeleteCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> PermissionGetCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> PermissionListCall<'a, C, A> {$/;"	f
supports_all_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_all_drives(mut self, new_value: bool) -> PermissionUpdateCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> ChangeGetStartPageTokenCall<'a, C,/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> ChangeListCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> ChangeWatchCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> FileCopyCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> FileCreateCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> FileDeleteCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> FileGetCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> FileListCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> FileUpdateCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> FileWatchCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> PermissionCreateCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> PermissionDeleteCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> PermissionGetCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> PermissionListCall<'a, C, A> {$/;"	f
supports_team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn supports_team_drives(mut self, new_value: bool) -> PermissionUpdateCall<'a, C, A> {$/;"	f
switched	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/mod.rs	/^mod switched;$/;"	n
syntax	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/error.rs	/^    pub(crate) fn syntax(code: ErrorCode, line: usize, column: usize) -> Self {$/;"	P	implementation:Error
tables	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^mod tables;$/;"	n
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn tag(&self) -> &str {$/;"	P	implementation:EntityTag
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    tag: String$/;"	m	struct:EntityTag
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        pub tag: T,$/;"	m	struct:content::TaggedContent
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    tag: &'static str,$/;"	m	struct:TaggedSerializer
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn tag(&self) -> &str {$/;"	P	implementation:Record
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub tag: &'a str,$/;"	m	struct:RecordStatic
tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    tag: String,$/;"	m	struct:AsyncRecord
tag_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        tag_name: &'static str,$/;"	m	struct:content::TaggedContentVisitor
take	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    pub fn take(&mut self) -> Value {$/;"	P	implementation:Value
take_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn take_buf(&mut self) -> (Vec<u8>, usize, usize) {$/;"	P	implementation:BufReader
takes_arced_drain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    fn takes_arced_drain(_l: Logger) {}$/;"	f	function:logger_to_erased
takes_arced_drain	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    fn takes_arced_drain(_l: Logger) {}$/;"	f	function:simple_logger_erased
takes_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn takes_value(&self) -> bool {$/;"	P	implementation:App
takes_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn takes_value(&self) -> bool {$/;"	f
takes_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn takes_value(&self) -> bool;$/;"	P	interface:AnyArg
takes_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn takes_value(self, tv: bool) -> Self {$/;"	P	implementation:Arg
takes_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn takes_value(&self) -> bool {$/;"	P	implementation:FlagBuilder
takes_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn takes_value(&self) -> bool {$/;"	P	implementation:OptBuilder
takes_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn takes_value(&self) -> bool {$/;"	P	implementation:PosBuilder
target_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub target_id: Option<String>,$/;"	m	struct:FileShortcutDetails
target_mime_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub target_mime_type: Option<String>,$/;"	m	struct:FileShortcutDetails
team_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub team_drive: Option<TeamDrive>,$/;"	m	struct:Change
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn team_drive_id(mut self, new_value: &str) -> ChangeGetStartPageTokenCall<'a, C, A> {$/;"	f
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn team_drive_id(mut self, new_value: &str) -> ChangeListCall<'a, C, A> {$/;"	f
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn team_drive_id(mut self, new_value: &str) -> ChangeWatchCall<'a, C, A> {$/;"	f
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn team_drive_id(mut self, new_value: &str) -> FileListCall<'a, C, A> {$/;"	f
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn team_drive_id(mut self, new_value: &str) -> TeamdriveDeleteCall<'a, C, A> {$/;"	f
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn team_drive_id(mut self, new_value: &str) -> TeamdriveGetCall<'a, C, A> {$/;"	f
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn team_drive_id(mut self, new_value: &str) -> TeamdriveUpdateCall<'a, C, A> {$/;"	f
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub team_drive_id: Option<String>,$/;"	m	struct:Change
team_drive_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub team_drive_id: Option<String>,$/;"	m	struct:File
team_drive_permission_details	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub team_drive_permission_details: Option<Vec<PermissionTeamDrivePermissionDetails>>,$/;"	m	struct:Permission
team_drive_permission_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub team_drive_permission_type: Option<String>,$/;"	m	struct:PermissionTeamDrivePermissionDetails
team_drive_themes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub team_drive_themes: Option<Vec<AboutTeamDriveThemes>>,$/;"	m	struct:About
team_drives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub team_drives: Option<Vec<TeamDrive>>,$/;"	m	struct:TeamDriveList
team_members_only	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub team_members_only: Option<bool>,$/;"	m	struct:TeamDriveRestrictions
teamdrives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn teamdrives(&'a self) -> TeamdriveMethods<'a, C, A> {$/;"	f
tempdir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^pub fn tempdir() -> io::Result<TempDir> {$/;"	f
tempdir	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn tempdir(&self) -> io::Result<TempDir> {$/;"	P	implementation:Builder
tempdir_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/dir.rs	/^pub fn tempdir_in<P: AsRef<Path>>(dir: P) -> io::Result<TempDir> {$/;"	f
tempdir_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn tempdir_in<P: AsRef<Path>>(&self, dir: P) -> io::Result<TempDir> {$/;"	P	implementation:Builder
tempfile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^pub fn tempfile() -> io::Result<File> {$/;"	f
tempfile	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn tempfile(&self) -> io::Result<NamedTempFile> {$/;"	P	implementation:Builder
tempfile_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^pub fn tempfile_in<P: AsRef<Path>>(dir: P) -> io::Result<File> {$/;"	f
tempfile_in	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^    pub fn tempfile_in<P: AsRef<Path>>(&self, dir: P) -> io::Result<NamedTempFile> {$/;"	P	implementation:Builder
template	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub template: Option<&'b str>,$/;"	m	struct:AppMeta
template	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn template<S: Into<&'b str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
term	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    term: &'a mut AnyTerminal,$/;"	m	struct:TermRecordDecorator
term	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    term: RefCell<AnyTerminal>,$/;"	m	struct:TermDecorator
term_compact	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub fn term_compact() -> CompactFormat<TermDecorator> {$/;"	f
term_error_to_io_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^fn term_error_to_io_error(e: term::Error) -> io::Error {$/;"	f
term_full	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub fn term_full() -> FullFormat<TermDecorator> {$/;"	f
term_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^mod term_size {$/;"	n
term_w	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    term_w: usize,$/;"	m	struct:Help
term_w	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub term_w: Option<usize>,$/;"	m	struct:AppMeta
terminator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub terminator: Option<&'b str>,$/;"	m	struct:Valued
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/settings.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/suggestions.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^mod test {$/;"	n
test	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^mod test {$/;"	n
test_accept	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_accept() {$/;"	f	module:tests
test_access_control_allow_credentials	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_credentials.rs	/^mod test_access_control_allow_credentials {$/;"	n
test_access_control_allow_orgin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/access_control_allow_origin.rs	/^mod test_access_control_allow_orgin {$/;"	n
test_append_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_append_raw() {$/;"	f	module:tests
test_as_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn test_as_str() {$/;"	f	module:tests
test_asctime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^    fn test_asctime() {$/;"	f	module:tests
test_basic_auth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn test_basic_auth() {$/;"	f	module:tests
test_basic_auth_no_password	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn test_basic_auth_no_password() {$/;"	f	module:tests
test_basic_auth_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn test_basic_auth_parse() {$/;"	f	module:tests
test_basic_auth_parse_no_password	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn test_basic_auth_parse_no_password() {$/;"	f	module:tests
test_bearer_auth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn test_bearer_auth() {$/;"	f	module:tests
test_bearer_auth_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn test_bearer_auth_parse() {$/;"	f	module:tests
test_cause	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn test_cause() {$/;"	f	module:tests
test_check_continue_default	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn test_check_continue_default() {$/;"	f	module:tests
test_check_continue_reject	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    fn test_check_continue_reject() {$/;"	f	module:tests
test_chunk_size_with_extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn test_chunk_size_with_extension() {$/;"	f	module:tests
test_chunk_size_with_extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn test_chunk_size_with_extension() {$/;"	f	module:tests
test_clear	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_clear() {$/;"	f	module:tests
test_closed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn test_closed() {$/;"	f	module:tests
test_cmp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    fn test_cmp() {$/;"	f	module:tests
test_connect_and_drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn test_connect_and_drop() {$/;"	f	module:tests
test_consume_and_get_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    fn test_consume_and_get_buf() {$/;"	f	module:tests
test_content_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_content_type() {$/;"	f	module:tests
test_create_unique_dir_id_for_root_entry	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^    fn test_create_unique_dir_id_for_root_entry() {$/;"	f	module:tests
test_create_unique_dir_id_for_root_root_entry	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^    fn test_create_unique_dir_id_for_root_root_entry() {$/;"	f	module:tests
test_debug	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    fn test_debug() {$/;"	f	module:test
test_default_indices	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn test_default_indices() {$/;"	f	module:tests
test_default_indices_with_shorter_lifetime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn test_default_indices_with_shorter_lifetime() {$/;"	f	module:tests
test_default_osvalues	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn test_default_osvalues() {$/;"	f	module:tests
test_default_osvalues_with_shorter_lifetime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn test_default_osvalues_with_shorter_lifetime() {$/;"	f	module:tests
test_default_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn test_default_values() {$/;"	f	module:tests
test_default_values_with_shorter_lifetime	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    fn test_default_values_with_shorter_lifetime() {$/;"	f	module:tests
test_different_reads	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_different_reads() {$/;"	f	module:tests
test_different_structs_for_same_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_different_structs_for_same_header() {$/;"	f	module:tests
test_display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    fn test_display() {$/;"	f	module:tests
test_display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^fn test_display() {$/;"	f
test_double_connect_reuse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn test_double_connect_reuse() {$/;"	f	module:tests
test_downcast_box_stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn test_downcast_box_stream() {$/;"	f	module:tests
test_downcast_unchecked_box_stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn test_downcast_unchecked_box_stream() {$/;"	f	module:tests
test_eof_closes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn test_eof_closes() {$/;"	f	module:tests
test_eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_eq() {$/;"	f	module:tests
test_etag_fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    fn test_etag_fmt() {$/;"	f	module:tests
test_etag_parse_failures	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    fn test_etag_parse_failures() {$/;"	f	module:tests
test_etag_parse_success	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    fn test_etag_parse_success() {$/;"	f	module:tests
test_fail_with_args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn test_fail_with_args() {$/;"	f	module:tests
test_fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^fn test_fmt() {$/;"	f
test_fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn test_fmt() {$/;"	f	module:tests
test_fmt_extended_value_with_encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    fn test_fmt_extended_value_with_encoding() {$/;"	f	module:tests
test_fmt_extended_value_with_encoding_and_language_tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    fn test_fmt_extended_value_with_encoding_and_language_tag() {$/;"	f	module:tests
test_format_ignore_parameters	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^    fn test_format_ignore_parameters() {$/;"	f	module:tests
test_fresh_drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn test_fresh_drop() {$/;"	f	module:tests
test_fresh_drop_panicing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn test_fresh_drop_panicing() {$/;"	f	module:tests
test_fresh_start	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn test_fresh_start() {$/;"	f	module:tests
test_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    fn test_from() {$/;"	f	module:test
test_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn test_from() {$/;"	f	module:tests
test_from_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_from_raw() {$/;"	f	module:tests
test_from_ssl	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^    fn test_from_ssl() {$/;"	f	module:tests
test_from_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn test_from_str() {$/;"	f	module:tests
test_fsevent_watcher_drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^fn test_fsevent_watcher_drop() {$/;"	f
test_get_empty_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_get_empty_body() {$/;"	f	module:tests
test_get_empty_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn test_get_empty_body() {$/;"	f	module:tests
test_get_mutable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_get_mutable() {$/;"	f	module:tests
test_get_unique_entry_id	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^    fn test_get_unique_entry_id() {$/;"	f	module:tests
test_get_unique_entry_id_dir	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^    fn test_get_unique_entry_id_dir() {$/;"	f	module:tests
test_get_with_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn test_get_with_body() {$/;"	f	module:tests
test_hashable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn test_hashable() {$/;"	f	module:tests
test_head_empty_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_head_empty_body() {$/;"	f	module:tests
test_head_empty_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn test_head_empty_body() {$/;"	f	module:tests
test_head_response_body_keep_alive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn test_head_response_body_keep_alive() {$/;"	f	module:tests
test_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^macro_rules! test_header {$/;"	M
test_header_view_value_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_header_view_value_string() {$/;"	f	module:tests
test_headers_fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_headers_fmt() {$/;"	f	module:tests
test_headers_fmt_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_headers_fmt_raw() {$/;"	f	module:tests
test_host	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^    fn test_host() {$/;"	f	module:tests
test_host_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_host_header() {$/;"	f	module:tests
test_http_handle_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    fn test_http_handle_url() {$/;"	f	module:tests
test_idempotent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn test_idempotent() {$/;"	f	module:tests
test_idle_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn test_idle_timeout() {$/;"	f	module:tests
test_if_none_match	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_none_match.rs	/^    fn test_if_none_match() {$/;"	f	module:tests
test_if_range	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_range.rs	/^mod test_if_range {$/;"	n
test_imf_fixdate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^    fn test_imf_fixdate() {$/;"	f	module:tests
test_into_inner	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn test_into_inner() {$/;"	f	module:tests
test_invalid_chunk_size_extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn test_invalid_chunk_size_extension() {$/;"	f	module:tests
test_invalid_chunk_size_extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn test_invalid_chunk_size_extension() {$/;"	f	module:tests
test_invalid_chunk_size_not_hex_digit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn test_invalid_chunk_size_not_hex_digit() {$/;"	f	module:tests
test_invalid_chunk_size_not_hex_digit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn test_invalid_chunk_size_not_hex_digit() {$/;"	f	module:tests
test_iter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_iter() {$/;"	f	module:tests
test_jwt_initialize_claims	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn test_jwt_initialize_claims() {$/;"	f	module:tests
test_jwt_sign	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn test_jwt_sign() {$/;"	f	module:tests
test_len	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_len() {$/;"	f	module:tests
test_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link() {$/;"	f	module:tests
test_link_all_attributes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link_all_attributes() {$/;"	f	module:tests
test_link_display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link_display() {$/;"	f	module:tests
test_link_fmt_delimited	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link_fmt_delimited() {$/;"	f	module:tests
test_link_multiple_link_headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link_multiple_link_headers() {$/;"	f	module:tests
test_link_multiple_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link_multiple_values() {$/;"	f	module:tests
test_link_parsing_errors	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link_parsing_errors() {$/;"	f	module:tests
test_link_split_ascii_unquoted_iterator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link_split_ascii_unquoted_iterator() {$/;"	f	module:tests
test_link_verify_and_trim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    fn test_link_verify_and_trim() {$/;"	f	module:tests
test_logger	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn test_logger() {$/;"	f	module:tests
test_message_get_incoming_invalid_content_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_message_get_incoming_invalid_content_length() {$/;"	f	module:tests
test_multiple_reads	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_multiple_reads() {$/;"	f	module:tests
test_no_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn test_no_content() {$/;"	f	module:tests
test_no_date	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^    fn test_no_date() {$/;"	f	module:tests
test_o_macro_expansion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    fn test_o_macro_expansion() {$/;"	f	module:no_imports
test_opt_cell_clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn test_opt_cell_clone() {$/;"	f	module:test
test_opt_cell_set	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn test_opt_cell_set() {$/;"	f	module:test
test_origin	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^    fn test_origin() {$/;"	f	module:tests
test_parent_path_to_base_64	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^    fn test_parent_path_to_base_64() {$/;"	f	module:tests
test_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^    fn test_parse() {$/;"	f	module:tests
test_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/charset.rs	/^fn test_parse() {$/;"	f
test_parse_argument	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn test_parse_argument() {$/;"	f	module:tests
test_parse_argument	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn test_parse_argument() {$/;"	f	module:tests
test_parse_bad_syntax	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn test_parse_bad_syntax() {$/;"	f	module:tests
test_parse_bytes_range_valid	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^fn test_parse_bytes_range_valid() {$/;"	f
test_parse_chunked_request	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn test_parse_chunked_request() {$/;"	f	module:tests
test_parse_chunked_response	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn test_parse_chunked_response() {$/;"	f	module:tests
test_parse_duplicate_directives	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn test_parse_duplicate_directives() {$/;"	f	module:tests
test_parse_error_closes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    fn test_parse_error_closes() {$/;"	f	module:tests
test_parse_extended_value_missing_language_tag_and_encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    fn test_parse_extended_value_missing_language_tag_and_encoding() {$/;"	f	module:tests
test_parse_extended_value_partially_formatted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    fn test_parse_extended_value_partially_formatted() {$/;"	f	module:tests
test_parse_extended_value_partially_formatted_blank	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    fn test_parse_extended_value_partially_formatted_blank() {$/;"	f	module:tests
test_parse_extended_value_with_encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    fn test_parse_extended_value_with_encoding() {$/;"	f	module:tests
test_parse_extended_value_with_encoding_and_language_tag	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    fn test_parse_extended_value_with_encoding_and_language_tag() {$/;"	f	module:tests
test_parse_extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn test_parse_extension() {$/;"	f	module:tests
test_parse_extension	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn test_parse_extension() {$/;"	f	module:tests
test_parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^    fn test_parse_header() {$/;"	f	module:tests
test_parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/pragma.rs	/^fn test_parse_header() {$/;"	f
test_parse_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^fn test_parse_header() {$/;"	f
test_parse_include_subdomains	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn test_parse_include_subdomains() {$/;"	f	module:tests
test_parse_incoming	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_parse_incoming() {$/;"	f	module:tests
test_parse_invalid	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^fn test_parse_invalid() {$/;"	f
test_parse_max_age	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn test_parse_max_age() {$/;"	f	module:tests
test_parse_max_age_nan	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn test_parse_max_age_nan() {$/;"	f	module:tests
test_parse_max_age_no_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn test_parse_max_age_no_value() {$/;"	f	module:tests
test_parse_multiple_headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn test_parse_multiple_headers() {$/;"	f	module:tests
test_parse_multiple_headers	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn test_parse_multiple_headers() {$/;"	f	module:tests
test_parse_no_max_age	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn test_parse_no_max_age() {$/;"	f	module:tests
test_parse_quote_form	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^    fn test_parse_quote_form() {$/;"	f	module:tests
test_parse_quote_form	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^    fn test_parse_quote_form() {$/;"	f	module:tests
test_parse_quoted_max_age	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn test_parse_quoted_max_age() {$/;"	f	module:tests
test_parse_raw_status	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_parse_raw_status() {$/;"	f	module:tests
test_parse_spaces_max_age	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^    fn test_parse_spaces_max_age() {$/;"	f	module:tests
test_parse_tcp_closed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_parse_tcp_closed() {$/;"	f	module:tests
test_parse_unregistered_range_valid	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/range.rs	/^fn test_parse_unregistered_range_valid() {$/;"	f
test_post_chunked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_post_chunked() {$/;"	f	module:tests
test_post_chunked_with_encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_post_chunked_with_encoding() {$/;"	f	module:tests
test_post_content_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_post_content_length() {$/;"	f	module:tests
test_post_empty_body	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    fn test_post_empty_body() {$/;"	f	module:tests
test_proxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn test_proxy() {$/;"	f	module:tests
test_proxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_proxy() {$/;"	f	module:tests
test_proxy_tunnel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn test_proxy_tunnel() {$/;"	f	module:tests
test_ptr_map_cell_clone	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn test_ptr_map_cell_clone() {$/;"	f	module:test
test_ptr_map_cell_many	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn test_ptr_map_cell_many() {$/;"	f	module:test
test_ptr_map_cell_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn test_ptr_map_cell_none() {$/;"	f	module:test
test_ptr_map_cell_one	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn test_ptr_map_cell_one() {$/;"	f	module:test
test_ptr_map_cell_two	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/cell.rs	/^    fn test_ptr_map_cell_two() {$/;"	f	module:test
test_quality	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality() {$/;"	f	module:tests
test_quality2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality2() {$/;"	f	module:tests
test_quality_invalid	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_invalid() {$/;"	f	module:tests
test_quality_invalid2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_invalid2() {$/;"	f	module:tests
test_quality_item_from_str1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_from_str1() {$/;"	f	module:tests
test_quality_item_from_str2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_from_str2() {$/;"	f	module:tests
test_quality_item_from_str3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_from_str3() {$/;"	f	module:tests
test_quality_item_from_str4	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_from_str4() {$/;"	f	module:tests
test_quality_item_from_str5	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_from_str5() {$/;"	f	module:tests
test_quality_item_from_str6	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_from_str6() {$/;"	f	module:tests
test_quality_item_ordering	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_ordering() {$/;"	f	module:tests
test_quality_item_show1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_show1() {$/;"	f	module:tests
test_quality_item_show2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_show2() {$/;"	f	module:tests
test_quality_item_show3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^    fn test_quality_item_show3() {$/;"	f	module:tests
test_raw_auth	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn test_raw_auth() {$/;"	f	module:tests
test_raw_auth_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    fn test_raw_auth_parse() {$/;"	f	module:tests
test_read_chunk_size	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_read_chunk_size() {$/;"	f	module:tests
test_read_chunked_early_eof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_read_chunked_early_eof() {$/;"	f	module:tests
test_read_chunked_fully_consumes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_read_chunked_fully_consumes() {$/;"	f	module:tests
test_read_chunked_zero_len_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_read_chunked_zero_len_buf() {$/;"	f	module:tests
test_read_conn_aborted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn test_read_conn_aborted() {$/;"	f	module:tests
test_read_sized_early_eof	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_read_sized_early_eof() {$/;"	f	module:tests
test_read_sized_zero_len_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_read_sized_zero_len_buf() {$/;"	f	module:tests
test_redirect_dontfollow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn test_redirect_dontfollow() {$/;"	f	module:tests
test_redirect_followall	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn test_redirect_followall() {$/;"	f	module:tests
test_redirect_followif	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn test_redirect_followif() {$/;"	f	module:tests
test_remove_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_remove_raw() {$/;"	f	module:tests
test_request_body_error_is_returned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    fn test_request_body_error_is_returned() {$/;"	f	module:tests
test_request_url_builder	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    fn test_request_url_builder() {$/;"	f	module:tests
test_resize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    fn test_resize() {$/;"	f	module:tests
test_rfc_850	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^    fn test_rfc_850() {$/;"	f	module:tests
test_rightmost_header	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/referrer_policy.rs	/^fn test_rightmost_header() {$/;"	f
test_safe	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^    fn test_safe() {$/;"	f	module:tests
test_service_account_e2e	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn test_service_account_e2e() {$/;"	f	module:tests
test_set_cookie_fmt	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/set_cookie.rs	/^fn test_set_cookie_fmt() {$/;"	f
test_set_raw	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_set_raw() {$/;"	f	module:tests
test_should_keep_alive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/mod.rs	/^fn test_should_keep_alive() {$/;"	f
test_slog_o_macro_expansion	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/tests.rs	/^    fn test_slog_o_macro_expansion() {$/;"	f	module:no_imports
test_status_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    fn test_status_code() {$/;"	f	module:tests
test_streaming_drop	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn test_streaming_drop() {$/;"	f	module:tests
test_streaming_end	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn test_streaming_end() {$/;"	f	module:tests
test_strip_local_fs	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^    fn test_strip_local_fs() {$/;"	f	module:tests
test_trailing_whitespace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn test_trailing_whitespace() {$/;"	f	module:tests
test_uri_display	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^fn test_uri_display() {$/;"	f
test_uri_fromstr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/uri.rs	/^fn test_uri_fromstr() {$/;"	f
test_url_query	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_url_query() {$/;"	f	module:tests
test_windows_osstr_starts_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^fn test_windows_osstr_starts_with() {$/;"	f
test_write_chunked	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_write_chunked() {$/;"	f	module:tests
test_write_error_closes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn test_write_error_closes() {$/;"	f	module:tests
test_write_sized	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn test_write_sized() {$/;"	f	module:tests
test_yaml	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    fn test_yaml() {$/;"	f	module:test
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^pub mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/encode.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^mod tests;$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/error.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/cache_control.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/connection.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/content_disposition.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/host.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/if_none_match.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/origin.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/prefer.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/preference_applied.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/strict_transport_security.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/httpdate.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/quality_item.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/method.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^mod tests;$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^pub mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^mod tests {$/;"	n
tests	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^pub mod tests {$/;"	n
tests	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^mod tests {$/;"	n
text	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/accept.rs	/^    pub fn text() -> Accept {$/;"	P	implementation:Accept
theme_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub theme_id: Option<String>,$/;"	m	struct:Drive
theme_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub theme_id: Option<String>,$/;"	m	struct:TeamDrive
thread_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn thread_name(mut self, name: String) -> Self {$/;"	f
thread_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    pub fn thread_name(self, name: String) -> Self {$/;"	f
thread_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    thread_name: Option<String>,$/;"	m	struct:AsyncCoreBuilder
thumbnail	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub thumbnail: Option<FileContentHintsThumbnail>,$/;"	m	struct:FileContentHints
thumbnail_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub thumbnail_link: Option<String>,$/;"	m	struct:File
thumbnail_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub thumbnail_version: Option<String>,$/;"	m	struct:File
tie_even	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/rounding.rs	/^pub(crate) fn tie_even(fp: &mut ExtendedFloat, is_above: bool, is_halfway: bool) {$/;"	f
time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub time: Option<String>,$/;"	m	struct:Change
time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub time: Option<String>,$/;"	m	struct:FileImageMediaMetadata
timeouts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    timeouts: Timeouts,$/;"	m	struct:Server
timeouts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/mod.rs	/^    timeouts: Timeouts,$/;"	m	struct:Worker
timer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    timer: WatchTimer,$/;"	m	struct:Debounce
timer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^mod timer;$/;"	n
timestamp_local	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub fn timestamp_local(io: &mut dyn io::Write) -> io::Result<()> {$/;"	f
timestamp_utc	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^pub fn timestamp_utc(io: &mut dyn io::Write) -> io::Result<()> {$/;"	f
title	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn title(&self) -> Option<&str> {$/;"	P	implementation:LinkValue
title	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    title: Option<String>,$/;"	m	struct:LinkValue
title_star	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn title_star(&self) -> Option<&str> {$/;"	P	implementation:LinkValue
title_star	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    title_star: Option<String>,$/;"	m	struct:LinkValue
tl_sender	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    tl_sender: thread_local::ThreadLocal<Sender<AsyncMsg>>,$/;"	m	struct:AsyncCore
tls_error	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  tls_error: Option<rustls::TLSError>,$/;"	m	struct:TlsStream
tmpname	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/util.rs	/^fn tmpname(prefix: &OsStr, suffix: &OsStr, rand_len: usize) -> OsString {$/;"	f
to_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn to_bits(self) -> Self::Unsigned;$/;"	P	interface:Float
to_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn to_bits(self) -> u32 {$/;"	P	implementation:f32
to_bits	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^    fn to_bits(self) -> u64 {$/;"	P	implementation:f64
to_digit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/digit.rs	/^pub(crate) fn to_digit(c: u8) -> Option<u32> {$/;"	f
to_erased	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    pub fn to_erased($/;"	f
to_oauth_token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn to_oauth_token(self) -> Token {$/;"	P	implementation:TokenResponse
to_owned	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn to_owned(&self) -> Self::Owned {$/;"	P	implementation:RawValue
to_parts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn to_parts(&self) -> String;$/;"	P	interface:ToParts
to_raw_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^pub fn to_raw_value<T>(value: &T) -> Result<Box<RawValue>, Error>$/;"	f
to_sendable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^    fn to_sendable(&self) -> Box<SerdeValue + Send + 'static>;$/;"	P	interface:SerdeValue
to_str_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^            fn to_str_slice(o: &OsString) -> &str {$/;"	f	method:ArgMatches::values_of
to_str_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^        fn to_str_slice(_: &OsString) -> &OsStr {$/;"	f	method:OsValues::default
to_str_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^        fn to_str_slice(_: &OsString) -> &str {$/;"	f	method:Values::default
to_str_slice	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^        fn to_str_slice(o: &OsString) -> &OsStr {$/;"	f	method:ArgMatches::values_of_os
to_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub fn to_string<T>(value: &T) -> Result<String>$/;"	f	method:Formatter::write_char_escape
to_string_pretty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub fn to_string_pretty<T>(value: &T) -> Result<String>$/;"	f	method:Formatter::write_char_escape
to_tls_stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  pub fn to_tls_stream(&self) -> MutexGuard<TlsStream> {$/;"	P	implementation:WrappedStream
to_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    pub fn to_u16(&self) -> u16 {$/;"	P	implementation:StatusCode
to_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^            fn to_usize(i: &usize) -> usize {$/;"	f	method:ArgMatches::indices_of
to_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^        fn to_usize(_: &usize) -> usize {$/;"	f	method:Indices::default
to_utf16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/imp/windows.rs	/^fn to_utf16(s: &Path) -> Vec<u16> {$/;"	f
to_value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^pub fn to_value<T>(value: T) -> Result<Value, Error>$/;"	f
to_vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub fn to_vec<T>(value: &T) -> Result<Vec<u8>>$/;"	f	method:Formatter::write_char_escape
to_vec_pretty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub fn to_vec_pretty<T>(value: &T) -> Result<Vec<u8>>$/;"	f	method:Formatter::write_char_escape
to_writer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub fn to_writer<W, T>(writer: W, value: &T) -> Result<()>$/;"	f	method:Formatter::write_char_escape
to_writer_pretty	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^pub fn to_writer_pretty<W, T>(writer: W, value: &T) -> Result<()>$/;"	f	method:Formatter::write_char_escape
todo	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^macro_rules! todo($/;"	M
token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^fn token(b: u8) -> bool {$/;"	f
token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn token(&mut self, err: &dyn error::Error) -> Option<oauth2::Token> {$/;"	P	interface:Delegate
token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub token: Option<String>,$/;"	m	struct:Channel
token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^	pub token: String$/;"	m	struct:Bearer
token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    fn token<'b, I, T>(&mut self, scopes: I) -> Result<Token, Box<Error>>$/;"	P	interface:GetToken
token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator.rs	/^    fn token<'b, I, T>(&mut self, scopes: I) -> Result<Token, Box<Error>>$/;"	f
token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    fn token<'b, I, T>(&mut self, scopes: I) -> result::Result<Token, Box<error::Error>>$/;"	P	implementation:ServiceAccountAccess
token	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    pub token: Token,$/;"	m	struct:JSONToken
token_refresh_failed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn token_refresh_failed(&mut self, error: &String, error_description: &Option<String>) {$/;"	P	interface:AuthenticatorDelegate
token_storage_failure	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    fn token_storage_failure(&mut self, is_set: bool, _: &Error) -> Retry {$/;"	P	interface:AuthenticatorDelegate
token_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/installed.rs	/^    token_type: Option<String>,$/;"	m	struct:JSONTokenResponse
token_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/refresh.rs	/^            token_type: String,$/;"	m	struct:refresh_token::JsonToken
token_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    token_type: Option<String>,$/;"	m	struct:TokenResponse
token_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub token_type: String,$/;"	m	struct:Token
token_type	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub token_type: TokenType,$/;"	m	struct:Scheme
token_uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub token_uri: Option<String>,$/;"	m	struct:ServiceAccountKey
token_uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub token_uri: String,$/;"	m	struct:ApplicationSecret
tokens	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    pub tokens: Vec<JSONToken>,$/;"	m	struct:JSONTokens
tokens	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    tokens: Vec<JSONToken>,$/;"	m	struct:DiskTokenStorage
tokens	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/storage.rs	/^    tokens: Vec<JSONToken>,$/;"	m	struct:MemoryStorage
too_few_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn too_few_values<U>($/;"	P	implementation:Error
too_many_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn too_many_values<V, U>(val: V, arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
total_b64_decoded	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder.rs	/^    total_b64_decoded: usize,$/;"	m	struct:DecoderReader
total_length	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub total_length: u64,$/;"	m	struct:ContentRange
trace	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! trace($/;"	M
trailing_junk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/read/decoder_tests.rs	/^fn trailing_junk() {$/;"	f
transfer_encoding	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod transfer_encoding;$/;"	n
transfer_ownership	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn transfer_ownership(mut self, new_value: bool) -> PermissionCreateCall<'a, C, A> {$/;"	f
transfer_ownership	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn transfer_ownership(mut self, new_value: bool) -> PermissionUpdateCall<'a, C, A> {$/;"	f
translate_flags	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^fn translate_flags(flags: fse::StreamFlags) -> op::Op {$/;"	f
trashed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub trashed: Option<bool>,$/;"	m	struct:File
trashed_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub trashed_time: Option<String>,$/;"	m	struct:File
trashing_user	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub trashing_user: Option<User>,$/;"	m	struct:File
tri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^macro_rules! tri {$/;"	M
trim_left_matches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn trim_left_matches(&self, b: u8) -> &OsStr;$/;"	P	interface:OsStrExt2
trim_left_matches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    fn trim_left_matches(&self, byte: u8) -> &OsStr {$/;"	P	implementation:OsStr
try_build	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn try_build(self) -> Option<TermDecorator> {$/;"	P	implementation:TermDecoratorBuilder
try_from_argmatches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^        fn try_from_argmatches<'a>(matches: clap::ArgMatches<'a>) -> Result<Self, clap::Error>;$/;"	P	interface:derive::FromArgMatches
try_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^        fn try_parse() -> Result<Self, clap::Error> {$/;"	P	interface:derive::ClapApp
try_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn try_parse<'a>(headers: &'a mut [httparse::Header<'a>], buf: &'a [u8]) ->$/;"	P	interface:TryParse
try_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn try_parse<'b>(headers: &'b mut [httparse::Header<'b>], buf: &'b [u8]) ->$/;"	P	implementation:Request
try_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn try_parse<'b>(headers: &'b mut [httparse::Header<'b>], buf: &'b [u8]) ->$/;"	P	implementation:Response
try_parse	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^fn try_parse<R: Read, T: TryParse<Subject=I>, I>(rdr: &mut BufReader<R>) -> TryParseResult<I> {$/;"	f
try_parse_from	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^        fn try_parse_from<I, T>(argv: I) -> Result<Self, clap::Error>$/;"	P	interface:derive::ClapApp
tunnel	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^pub fn tunnel(proxy: (Scheme, Cow<'static, str>, u16)) -> Proxy<HttpConnector, self::no_ssl::Pla/;"	f
tuple_impls	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_impls	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:VariantAccess
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value>$/;"	P	implementation:UnitVariantAccess
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	P	implementation:VariantAccess
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:UnitOnly
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:VariantDeserializer
tuple_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:VariantRefDeserializer
tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/mod.rs	/^    tx: mpsc::Sender<DebouncedEvent>,$/;"	m	struct:Debounce
tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    tx: mpsc::Sender<DebouncedEvent>,$/;"	m	struct:ScheduleWorker
tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    tx: Sender<Action>,$/;"	m	struct:ReadDirectoryChangesWatcher
tx	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-async-2.5.0/lib.rs	/^    tx: Sender<AsyncMsg>,$/;"	m	struct:AsyncGuard
type_	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub type_: Option<String>,$/;"	m	struct:Change
type_	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub type_: Option<String>,$/;"	m	struct:Channel
type_	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub type_: Option<String>,$/;"	m	struct:Permission
type_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    fn type_id() -> FlowType {$/;"	P	implementation:DeviceFlow
type_id	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    fn type_id() -> FlowType;$/;"	P	interface:Flow
type_ident	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    type_ident: &'static str,$/;"	m	struct:TaggedSerializer
type_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
type_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
typed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    pub fn typed<H: Header + HeaderFormat + Any>(&self) -> Option<&H> {$/;"	P	implementation:Item
typed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    typed: PtrMapCell<HeaderFormat + Send + Sync>$/;"	m	struct:Item
typed_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    pub fn typed_mut<H: Header + HeaderFormat>(&mut self) -> Option<&mut H> {$/;"	P	implementation:Item
types	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/lib.rs	/^mod types;$/;"	n
u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for u32$/;"	c
u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for u32$/;"	c
u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^impl Hi64<u32> for [u32] {$/;"	c
u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/errors.rs	/^impl FloatErrors for u64 {$/;"	c
u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^impl Hi64<u64> for [u64] {$/;"	c
u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/num.rs	/^impl Mantissa for u64 {$/;"	c
u64_to_hi64_1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^fn u64_to_hi64_1(r0: u64) -> (u64, bool) {$/;"	f
u64_to_hi64_2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lexical/math.rs	/^fn u64_to_hi64_2(r0: u64, r1: u64) -> (u64, bool) {$/;"	f
u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^impl<'a> Into<Body<'a>> for &'a [u8] {$/;"	c
u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a [u8] {$/;"	c
u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a [u8]$/;"	c
uint_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/from_primitive.rs	/^macro_rules! uint_to {$/;"	M
underlying	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  underlying: HttpStream,$/;"	m	struct:TlsStream
underlying_io	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn underlying_io(&mut self) {$/;"	P	implementation:TlsStream
underlying_read	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn underlying_read(&mut self) {$/;"	P	implementation:TlsStream
underlying_write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn underlying_write(&mut self) {$/;"	P	implementation:TlsStream
unexpected	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	P	implementation:content::Content
unexpected	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub(crate) fn unexpected(&self) -> Unexpected {$/;"	P	implementation:Number
unexpected	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn unexpected(&self) -> Unexpected {$/;"	P	implementation:Value
unexpected_multiple_usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn unexpected_multiple_usage<U>(arg: &AnyArg, usage: U, color: ColorWhen) -> Self$/;"	P	implementation:Error
unhide	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn unhide(&self, drive_id: &str) -> DriveUnhideCall<'a, C, A> {$/;"	P	implementation:DriveMethods
unified_ord	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/switched.rs	/^    pub unified_ord: usize,$/;"	m	struct:Switched
unit_only	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f	module:private
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	P	interface:VariantAccess
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f	module:content
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn unit_variant(self) -> Result<()> {$/;"	P	implementation:UnitVariantAccess
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn unit_variant(self) -> Result<()> {$/;"	P	implementation:VariantAccess
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	P	implementation:UnitOnly
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	P	implementation:VariantDeserializer
unit_variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	P	implementation:VariantRefDeserializer
unknown_argument	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn unknown_argument<A, U>(arg: A, did_you_mean: &str, usage: U, color: ColorWhen) -> Sel/;"	P	implementation:Error
unrecognized_subcommand	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn unrecognized_subcommand<S, N>(subcmd: S, name: N, color: ColorWhen) -> Self$/;"	P	implementation:Error
unset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn unset(&mut self, s: AS) {$/;"	f
unset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn unset(mut self, s: ArgSettings) -> Self {$/;"	P	implementation:Arg
unset	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/base.rs	/^    pub fn unset(&mut self, s: ArgSettings) {$/;"	P	implementation:Base
unset_setting	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn unset_setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:App
unset_settings	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn unset_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
unsetb	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn unsetb(&mut self, s: ArgSettings) {$/;"	P	implementation:Arg
unwatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	P	implementation:FsEventWatcher
unwatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	P	implementation:INotifyWatcher
unwatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()>;$/;"	P	interface:Watcher
unwatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	P	implementation:NullWatcher
unwatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	P	implementation:PollWatcher
unwatch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn unwatch<P: AsRef<Path>>(&mut self, path: P) -> Result<()> {$/;"	P	implementation:ReadDirectoryChangesWatcher
update	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn update(&self, request: Comment, file_id: &str, comment_id: &str) -> CommentUpdateCall/;"	P	implementation:CommentMethods
update	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn update(&self, request: Drive, drive_id: &str) -> DriveUpdateCall<'a, C, A> {$/;"	P	implementation:DriveMethods
update	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn update(&self, request: File, file_id: &str) -> FileUpdateCall<'a, C, A> {$/;"	P	implementation:FileMethods
update	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn update(&self, request: Permission, file_id: &str, permission_id: &str) -> PermissionU/;"	P	implementation:PermissionMethods
update	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn update(&self, request: Reply, file_id: &str, comment_id: &str, reply_id: &str) -> Rep/;"	P	implementation:ReplyMethods
update	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn update(&self, request: Revision, file_id: &str, revision_id: &str) -> RevisionUpdateC/;"	P	implementation:RevisionMethods
update	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn update(&self, request: TeamDrive, team_drive_id: &str) -> TeamdriveUpdateCall<'a, C, /;"	P	implementation:TeamdriveMethods
upgrade	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod upgrade;$/;"	n
upload	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub fn upload(&mut self) -> Option<hyper::Result<hyper::client::Response>> {$/;"	f
upload	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn upload<RS>(self, stream: RS, mime_type: mime::Mime) -> Result<(hyper::client::Respons/;"	f
upload	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^fn upload(hub: &Hub, path: &str) -> std::result::Result<u16, String> {$/;"	f
upload_handler	/home/alan/local-devel/pi_drive_sync/src/main.rs	/^mod upload_handler;$/;"	n
upload_resumable	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn upload_resumable<RS>(self, resumeable_stream: RS, mime_type: mime::Mime) -> Result<(h/;"	f
upload_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn upload_url(&mut self) -> Option<String> {$/;"	P	interface:Delegate
uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod uri;$/;"	n
uri	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub uri: RequestUri,$/;"	m	struct:Request
url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub url: &'a str,$/;"	m	struct:ResumableUploadHelper
url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    url: Result<Url, UrlError>,$/;"	m	struct:RequestBuilder
url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub url: Url,$/;"	m	struct:Request
url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    pub url: Url,$/;"	m	struct:Response
url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub url: Url,$/;"	m	struct:RequestHead
usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub usage: Option<String>,$/;"	m	struct:AppMeta
usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn usage<S: Into<&'b str>>(mut self, usage: S) -> Self {$/;"	P	implementation:App
usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^mod usage;$/;"	n
usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matcher.rs	/^    pub fn usage(&mut self, usage: String) {$/;"	P	implementation:ArgMatcher
usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn usage(&self) -> &str {$/;"	P	implementation:ArgMatches
usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub usage: Option<String>,$/;"	m	struct:ArgMatches
usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/usage_parser.rs	/^    usage: &'a str,$/;"	m	struct:UsageParser
usage	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub usage: Option<String>,$/;"	m	struct:AboutStorageQuota
usage_in_drive	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub usage_in_drive: Option<String>,$/;"	m	struct:AboutStorageQuota
usage_in_drive_trash	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub usage_in_drive_trash: Option<String>,$/;"	m	struct:AboutStorageQuota
usage_parser	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/lib.rs	/^mod usage_parser;$/;"	n
usage_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub usage_str: Option<&'b str>,$/;"	m	struct:AppMeta
use_color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    use_color: bool,$/;"	m	struct:TermDecorator
use_color	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    use_color: bool,$/;"	m	struct:TermRecordDecorator
use_content_as_indexable_text	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_content_as_indexable_text(mut self, new_value: bool) -> FileCreateCall<'a, C, A> /;"	f
use_content_as_indexable_text	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_content_as_indexable_text(mut self, new_value: bool) -> FileUpdateCall<'a, C, A> /;"	f
use_custom_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn use_custom_timestamp<F>(mut self, f: F) -> Self$/;"	f
use_delimiter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn use_delimiter(mut self, d: bool) -> Self {$/;"	P	implementation:Arg
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> DriveGetCall<'a, C, A> {$/;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> DriveListCall<'a, C, A> {$/;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> DriveUpdateCall<'a, C, A> {$/;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> PermissionCreateCall<'a, C, A> /;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> PermissionDeleteCall<'a, C, A> /;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> PermissionGetCall<'a, C, A> {$/;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> PermissionListCall<'a, C, A> {$/;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> PermissionUpdateCall<'a, C, A> /;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> TeamdriveGetCall<'a, C, A> {$/;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> TeamdriveListCall<'a, C, A> {$/;"	f
use_domain_admin_access	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn use_domain_admin_access(mut self, new_value: bool) -> TeamdriveUpdateCall<'a, C, A> {$/;"	f
use_local_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn use_local_timestamp(mut self) -> Self {$/;"	f
use_long	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    use_long: bool,$/;"	m	struct:Help
use_long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    fn use_long_help(&self) -> bool {$/;"	f
use_original_order	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn use_original_order(mut self) -> Self {$/;"	f
use_original_order	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    use_original_order: bool,$/;"	m	struct:FullFormat
use_stderr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn use_stderr(&self) -> bool {$/;"	P	implementation:Error
use_stderr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    pub use_stderr: bool,$/;"	m	struct:ColorizerOption
use_stderr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    use_stderr: bool,$/;"	m	struct:TermDecoratorBuilder
use_utc_timestamp	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    pub fn use_utc_timestamp(mut self) -> Self {$/;"	f
user	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub user: Option<User>,$/;"	m	struct:About
user_agent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    pub user_agent: &'a str,$/;"	m	struct:ResumableUploadHelper
user_agent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn user_agent(&mut self, agent_name: String) -> String {$/;"	f
user_agent	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod user_agent;$/;"	n
user_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    pub user_code: String,$/;"	m	struct:PollInformation
user_code	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^                    user_code: String,$/;"	m	struct:request_code::JsonData
username	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/authorization.rs	/^    pub username: String,$/;"	m	struct:Basic
usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^    impl Sealed for usize {}$/;"	c	module:private
usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/index.rs	/^impl Index for usize {$/;"	c
utf8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^mod utf8;$/;"	n
util	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^pub mod util {$/;"	n
util	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/lib.rs	/^mod util;$/;"	n
v	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub v: Valued<'a, 'b>,$/;"	m	struct:Arg
v	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    pub v: Valued<'n, 'e>,$/;"	m	struct:OptBuilder
v	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    pub v: Valued<'n, 'e>,$/;"	m	struct:PosBuilder
v	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^        struct TestFormatterStruct<'a> { v: Vec<&'a str> };$/;"	m	struct:tests::test_link_fmt_delimited::TestFormatterStruct
vacant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    vacant: VacantEntryImpl<'a>,$/;"	m	struct:VacantEntry
val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn val<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> Result<String, io::Error> {$/;"	P	implementation:Help
val	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^    val: &'a [u8],$/;"	m	struct:OsSplit
val_delim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	P	implementation:App
val_delim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	f
val_delim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn val_delim(&self) -> Option<char>;$/;"	P	interface:AnyArg
val_delim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	P	implementation:FlagBuilder
val_delim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	P	implementation:OptBuilder
val_delim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn val_delim(&self) -> Option<char> {$/;"	P	implementation:PosBuilder
val_delim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub val_delim: Option<char>,$/;"	m	struct:Valued
val_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	P	implementation:App
val_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	f
val_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>>;$/;"	P	interface:AnyArg
val_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	P	implementation:FlagBuilder
val_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	P	implementation:OptBuilder
val_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn val_names(&self) -> Option<&VecMap<&'e str>> {$/;"	P	implementation:PosBuilder
val_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub val_names: Option<VecMap<&'b str>>,$/;"	m	struct:Valued
val_terminator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	P	implementation:App
val_terminator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	f
val_terminator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn val_terminator(&self) -> Option<&'e str>;$/;"	P	interface:AnyArg
val_terminator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	P	implementation:FlagBuilder
val_terminator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	P	implementation:OptBuilder
val_terminator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn val_terminator(&self) -> Option<&'e str> {$/;"	P	implementation:PosBuilder
validate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    pub fn validate($/;"	P	implementation:Validator
validate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/status.rs	/^    fn validate(num: u16, status_code: StatusCode, default_code: StatusCode, reason: Option<&str/;"	f	module:tests
validate_arg_conflicts	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_arg_conflicts(&self, a: &AnyArg, matcher: &ArgMatcher) -> Option<bool> {$/;"	P	implementation:Validator
validate_arg_num_occurs	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_arg_num_occurs<A>($/;"	P	implementation:Validator
validate_arg_num_vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_arg_num_vals<A>($/;"	P	implementation:Validator
validate_arg_requires	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_arg_requires<A>($/;"	P	implementation:Validator
validate_arg_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_arg_values<A>($/;"	P	implementation:Validator
validate_blacklist	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_blacklist(&self, matcher: &mut ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_matched_args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_matched_args(&self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_required	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_required(&mut self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_required_unless	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/validator.rs	/^    fn validate_required_unless(&self, a: &AnyArg, matcher: &ArgMatcher) -> Option<bool> {$/;"	P	implementation:Validator
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	P	implementation:App
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^mod validator;$/;"	n
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>> {$/;"	f
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>>;$/;"	P	interface:AnyArg
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn validator<F>(mut self, f: F) -> Self$/;"	P	implementation:Arg
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	P	implementation:FlagBuilder
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	P	implementation:OptBuilder
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {$/;"	P	implementation:PosBuilder
validator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub validator: Option<Rc<Fn(String) -> Result<(), String>>>,$/;"	m	struct:Valued
validator_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	P	implementation:App
validator_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>> {$/;"	f
validator_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/any_arg.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>>;$/;"	P	interface:AnyArg
validator_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn validator_os<F>(mut self, f: F) -> Self$/;"	P	implementation:Arg
validator_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/flag.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	P	implementation:FlagBuilder
validator_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/option.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	P	implementation:OptBuilder
validator_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/positional.rs	/^    fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {$/;"	P	implementation:PosBuilder
validator_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/valued.rs	/^    pub validator_os: Option<Rc<Fn(&OsStr) -> Result<(), OsString>>>,$/;"	m	struct:Valued
vals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/matched_arg.rs	/^    pub vals: Vec<OsString>,$/;"	m	struct:MatchedArg
vals_for	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/bash.rs	/^    fn vals_for(&self, o: &OptBuilder) -> String {$/;"	P	implementation:BashGen
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub value: Option<String>,$/;"	m	struct:CommentQuotedFileContent
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn value<H: Header + HeaderFormat>(&self) -> Option<&'a H> {$/;"	P	implementation:HeaderView
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/parsing.rs	/^    pub value: Vec<u8>,$/;"	m	struct:ExtendedValue
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/listener.rs	/^    value: Option<T>,$/;"	m	struct:Sentinel
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^pub mod value;$/;"	n
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    value: &'de [u8],$/;"	m	struct:BorrowedBytesDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    value: &'de str,$/;"	m	struct:BorrowedStrDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    value: Cow<'a, str>,$/;"	m	struct:CowStrDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    value: Option<Second<I::Item>>,$/;"	m	struct:MapDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    value: String,$/;"	m	struct:StringDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    value: u32,$/;"	m	struct:U32Deserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::EnumRefDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::MapRefDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::VariantRefDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::EnumDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::MapDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::VariantDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: PhantomData<Content<'de>>,$/;"	m	struct:content::ContentVisitor
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: PhantomData<TagOrContent<'de>>,$/;"	m	struct:content::TagOrContentVisitor
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        value: PhantomData<TaggedContent<'de, T>>,$/;"	m	struct:content::TaggedContentVisitor
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    value: &'a [u8],$/;"	m	struct:BytesDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/lib.rs	/^pub mod value;$/;"	n
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^    pub value: Number,$/;"	m	struct:NumberFromString
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    value: Cow<'de, str>,$/;"	m	struct:BorrowedCowStrDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    value: Option<&'de Value>,$/;"	m	struct:EnumRefDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    value: Option<&'de Value>,$/;"	m	struct:MapRefDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    value: Option<&'de Value>,$/;"	m	struct:VariantRefDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    value: Option<Value>,$/;"	m	struct:EnumDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    value: Option<Value>,$/;"	m	struct:MapDeserializer
value	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    value: Option<Value>,$/;"	m	struct:VariantDeserializer
value_delimiter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn value_delimiter(mut self, d: &str) -> Self {$/;"	P	implementation:Arg
value_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn value_name(mut self, name: &'b str) -> Self {$/;"	P	implementation:Arg
value_names	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn value_names(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:Arg
value_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn value_of<S: AsRef<str>>(&self, name: S) -> Option<&str> {$/;"	P	implementation:ArgMatches
value_of_lossy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn value_of_lossy<S: AsRef<str>>(&'a self, name: S) -> Option<Cow<'a, str>> {$/;"	P	implementation:ArgMatches
value_of_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn value_of_os<S: AsRef<str>>(&self, name: S) -> Option<&OsStr> {$/;"	P	implementation:ArgMatches
value_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    pub fn value_string(&self) -> String {$/;"	P	implementation:HeaderView
value_t	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! value_t {$/;"	M
value_t_or_exit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! value_t_or_exit {$/;"	M
value_terminator	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn value_terminator(mut self, term: &'b str) -> Self {$/;"	P	implementation:Arg
value_validation	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn value_validation(arg: Option<&AnyArg>, err: String, color: ColorWhen) -> Self {$/;"	P	implementation:Error
value_validation_auto	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn value_validation_auto(err: String) -> Self {$/;"	P	implementation:Error
valued	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_builder/mod.rs	/^mod valued;$/;"	n
values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^        pub fn values(&self) -> Values<V> {$/;"	P	implementation:vec_map::VecMap
values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    pub fn values(&self) -> &[LinkValue] {$/;"	P	implementation:Link
values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^    values: Vec<LinkValue>$/;"	m	struct:Link
values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn values(&self) -> Values {$/;"	P	implementation:Map
values_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn values_mut(&mut self) -> ValuesMut {$/;"	P	implementation:Map
values_of	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn values_of<S: AsRef<str>>(&'a self, name: S) -> Option<Values<'a>> {$/;"	P	implementation:ArgMatches
values_of_lossy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn values_of_lossy<S: AsRef<str>>(&'a self, name: S) -> Option<Vec<String>> {$/;"	P	implementation:ArgMatches
values_of_os	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg_matches.rs	/^    pub fn values_of_os<S: AsRef<str>>(&'a self, name: S) -> Option<OsValues<'a>> {$/;"	P	implementation:ArgMatches
values_t	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! values_t {$/;"	M
values_t_or_exit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! values_t_or_exit {$/;"	M
variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        variant: &'a Content<'de>,$/;"	m	struct:content::EnumRefDeserializer
variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        variant: Content<'de>,$/;"	m	struct:content::EnumDeserializer
variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeStructVariant
variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeTupleVariant
variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    variant: &'de str,$/;"	m	struct:EnumRefDeserializer
variant	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    variant: String,$/;"	m	struct:EnumDeserializer
variant_ident	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    variant_ident: &'static str,$/;"	m	struct:TaggedSerializer
variant_identifier	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	M
variant_index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeStructVariant
variant_index	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeTupleVariant
variant_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
variant_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
variant_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/ser.rs	/^    variant_name: &'static str,$/;"	m	struct:TaggedSerializer
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f	module:content
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f	module:content
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self)>$/;"	P	implementation:UnitVariantAccess
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self)>$/;"	P	implementation:VariantAccess
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Error>$/;"	P	implementation:BorrowedCowStrDeserializer
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Error>$/;"	P	implementation:EnumRefDeserializer
variant_seed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, VariantDeserializer), Error>$/;"	P	implementation:EnumDeserializer
variants	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/shell.rs	/^    pub fn variants() -> [&'static str; 5] {$/;"	P	implementation:Shell
vary	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/mod.rs	/^mod vary;$/;"	n
vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    vec: &'a mut VecMap<K, V>,$/;"	m	struct:OccupiedEntry
vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    vec: &'a mut VecMap<K, V>,$/;"	m	struct:VacantEntry
vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/vec_map.rs	/^    vec: Vec<(K, V)>,$/;"	m	struct:VecMap
vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    vec: Vec<Value>,$/;"	m	struct:SerializeTupleVariant
vec	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/ser.rs	/^    vec: Vec<Value>,$/;"	m	struct:SerializeVec
vec_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/map.rs	/^mod vec_map {$/;"	n
vec_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/mod.rs	/^mod vec_map;$/;"	n
vec_or_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^        macro_rules! vec_or_str {$/;"	M	method:App::from
verification_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/authenticator_delegate.rs	/^    pub verification_url: String,$/;"	m	struct:PollInformation
verification_url	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^                    verification_url: String,$/;"	m	struct:request_code::JsonData
verify_and_trim	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/link.rs	/^fn verify_and_trim(s: &str, b: (u8, u8)) -> ::Result<&str> {$/;"	f
verify_positionals	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn verify_positionals(&self) -> bool {$/;"	f
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub version: Option<&'b str>,$/;"	m	struct:AppMeta
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn version<S: Into<&'b str>>(mut self, ver: S) -> Self {$/;"	P	implementation:App
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub version: Option<String>,$/;"	m	struct:File
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub version: version::HttpVersion,$/;"	m	struct:Request
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    pub version: version::HttpVersion,$/;"	m	struct:Response
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/common/upgrade.rs	/^    pub version: Option<String>,$/;"	m	struct:Protocol
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub version: HttpVersion,$/;"	m	struct:Incoming
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/message.rs	/^    pub version: version::HttpVersion,$/;"	m	struct:ResponseHead
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/lib.rs	/^pub mod version;$/;"	n
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/request.rs	/^    pub version: HttpVersion,$/;"	m	struct:Request
version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    pub version: version::HttpVersion,$/;"	m	struct:Response
version_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn version_message<S: Into<&'a str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
version_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub version_message: Option<&'a str>,$/;"	m	struct:Parser
version_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn version_short<S: AsRef<str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
version_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn version_short(&mut self, s: &str) {$/;"	f
version_short	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    version_short: Option<char>,$/;"	m	struct:Parser
video_media_metadata	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub video_media_metadata: Option<FileVideoMediaMetadata>,$/;"	m	struct:File
viewed_by_me	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub viewed_by_me: Option<bool>,$/;"	m	struct:File
viewed_by_me_time	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub viewed_by_me_time: Option<String>,$/;"	m	struct:File
viewers_can_copy_content	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub viewers_can_copy_content: Option<bool>,$/;"	m	struct:File
visible_alias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn visible_alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	P	implementation:App
visible_alias	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn visible_alias<S: Into<&'b str>>(mut self, name: S) -> Self {$/;"	P	implementation:Arg
visible_aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn visible_aliases(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:App
visible_aliases	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn visible_aliases(mut self, names: &[&'b str]) -> Self {$/;"	P	implementation:Arg
visit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/de.rs	/^    fn visit<'de, V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:ParserNumber
visit_array	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^fn visit_array<'de, V>(array: Vec<Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_array_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^fn visit_array_ref<'de, V>(array: &'de [Value], visitor: V) -> Result<V::Value, Error>$/;"	f
visit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	implementation:BoolVisitor
visit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_bool<E>(self, value: bool) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_borrowed_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn visit_borrowed_str<E>(self, s: &'de str) -> Result<Self::Value, E>$/;"	P	implementation:ReferenceFromString
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_byte_buf	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_char	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_content_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f	module:content
visit_content_map_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f	module:content
visit_content_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, /;"	f	module:content
visit_content_seq_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f	module:content
visit_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:OsStringVisitor
visit_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_enum	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Number, E>$/;"	P	implementation:Number::deserialize::NumberVisitor
visit_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_float_method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! visit_float_method {$/;"	M
visit_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Number, E> {$/;"	P	implementation:Number::deserialize::NumberVisitor
visit_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_integer_method	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^macro_rules! visit_integer_method {$/;"	M
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f	module:content
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:Map::deserialize::Visitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Number, V::Error>$/;"	P	implementation:Number::deserialize::NumberVisitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:Box::deserialize::BoxedVisitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:RawValue::deserialize::ReferenceVisitor
visit_map	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_newtype_struct	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_none<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_none	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_none<E>(self) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_object	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^fn visit_object<'de, V>(object: Map<String, Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_object_ref	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^fn visit_object_ref<'de, V>(object: &'de Map<String, Value>, visitor: V) -> Result<V::Value, Err/;"	f
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize_in_place
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:ArrayVisitor
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:CStringVisitor
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f	module:content
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_seq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_seq<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_some	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_some<D>(self, deserializer: D) -> Result<Value, D::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:IpAddr::deserialize::IpAddrVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:SocketAddr::deserialize::SocketAddrVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagContentOtherFieldVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagOrContentFieldVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	P	implementation:NumberKey::deserialize::FieldVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<NumberFromString, E>$/;"	P	implementation:NumberFromString::deserialize::Visitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	P	implementation:RawKey::deserialize::FieldVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:BoxedFromString
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_str<E>(self, value: &str) -> Result<Value, E>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:KeyClassifier
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/raw.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	P	implementation:BoxedFromString
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_string<E>(self, value: String) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_string	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	P	implementation:KeyClassifier
visit_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^                    fn visit_u32<E>(self, value: u32) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/number.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Number, E> {$/;"	P	implementation:Number::deserialize::NumberVisitor
visit_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:PhantomDataVisitor
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:UnitVisitor
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^            fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:Map::deserialize::Visitor
visit_unit	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/de.rs	/^            fn visit_unit<E>(self) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedStructVariant
visitor	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedTupleVariant
void	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.114/src/ser/impossible.rs	/^    void: Void,$/;"	m	struct:Impossible
w	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    w: &'a mut W,$/;"	m	struct:EncoderWriter
w	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    w: &'a mut W,$/;"	m	struct:InterruptingWriter
w	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    w: &'a mut W,$/;"	m	struct:PartialInterruptingWriter
w	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/macros.rs	/^macro_rules! w {$/;"	M
wakeup_sem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    wakeup_sem: HANDLE,$/;"	m	struct:ReadDirectoryChangesServer
wakeup_sem	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    wakeup_sem: HANDLE,$/;"	m	struct:ReadDirectoryChangesWatcher
wakeup_server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn wakeup_server(&mut self) {$/;"	P	implementation:ReadDirectoryChangesWatcher
warn	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-2.5.2/src/lib.rs	/^macro_rules! warn($/;"	M
warning	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    pub fn warning<T>(&self, msg: T) -> Format<T>$/;"	P	implementation:Colorizer
watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn watch(&self, request: Channel, file_id: &str) -> FileWatchCall<'a, C, A> {$/;"	P	implementation:FileMethods
watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub fn watch(&self, request: Channel, page_token: &str) -> ChangeWatchCall<'a, C, A> {$/;"	P	implementation:ChangeMethods
watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/fsevent.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	P	implementation:FsEventWatcher
watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	P	implementation:INotifyWatcher
watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()>;$/;"	P	interface:Watcher
watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/null.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	P	implementation:NullWatcher
watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	P	implementation:PollWatcher
watch	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    fn watch<P: AsRef<Path>>(&mut self, path: P, recursive_mode: RecursiveMode) -> Result<()> {$/;"	P	implementation:ReadDirectoryChangesWatcher
watcher	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub fn watcher(tx: Sender<DebouncedEvent>, delay: Duration) -> Result<RecommendedWatcher> {$/;"	f
watches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/inotify.rs	/^    watches: HashMap<PathBuf, (WatchDescriptor, WatchMask, bool)>,$/;"	m	struct:EventLoop
watches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    watches: Arc<Mutex<HashMap<PathBuf, WatchData>>>,$/;"	m	struct:PollWatcher
watches	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/windows.rs	/^    watches: HashMap<PathBuf, WatchState>,$/;"	m	struct:ReadDirectoryChangesServer
weak	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn weak(tag: String) -> EntityTag {$/;"	P	implementation:EntityTag
weak	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub weak: bool,$/;"	m	struct:EntityTag
weak_eq	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn weak_eq(&self, other: &EntityTag) -> bool {$/;"	P	implementation:EntityTag
weak_ne	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/shared/entity.rs	/^    pub fn weak_ne(&self, other: &EntityTag) -> bool {$/;"	P	implementation:EntityTag
web	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/types.rs	/^    pub web: Option<ApplicationSecret>,$/;"	m	struct:ConsoleApplicationSecret
web_content_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub web_content_link: Option<String>,$/;"	m	struct:File
web_view_link	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub web_view_link: Option<String>,$/;"	m	struct:File
when	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    pub when: ColorWhen,$/;"	m	struct:ColorizerOption
when	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/fmt.rs	/^    when: ColorWhen,$/;"	m	struct:Colorizer
when	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/debounce/timer.rs	/^    when: Instant,$/;"	m	struct:ScheduledEvent
white_balance	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub white_balance: Option<String>,$/;"	m	struct:FileImageMediaMetadata
width	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub width: Option<f32>,$/;"	m	struct:DriveBackgroundImageFile
width	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub width: Option<f32>,$/;"	m	struct:TeamDriveBackgroundImageFile
width	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub width: Option<i32>,$/;"	m	struct:FileImageMediaMetadata
width	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub width: Option<i32>,$/;"	m	struct:FileVideoMediaMetadata
windows	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/lib.rs	/^pub mod windows;$/;"	n
windows_osstr_starts_with	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/osstringext.rs	/^fn windows_osstr_starts_with(osstr: &OsStr, prefix: &[u8]) -> bool {$/;"	f
with_capacity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/buffer.rs	/^    pub fn with_capacity(rdr: R, cap: usize) -> BufReader<R> {$/;"	P	implementation:BufReader
with_capacity	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> Self {$/;"	P	implementation:Map
with_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    pub fn with_config(bytes: &[u8], config: Config) -> Base64Display {$/;"	P	implementation:Base64Display
with_connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn with_connector<C, S>(connector: C) -> Client$/;"	P	implementation:Client
with_connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    pub fn with_connector(config: Config, connector: C) -> Pool<C> {$/;"	P	implementation:Pool
with_connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn with_connector<C, S>(method: Method, url: Url, connector: &C)$/;"	P	implementation:Request
with_connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn with_connector<C, S>(c: C) -> Http11Protocol$/;"	P	implementation:Http11Protocol
with_connector	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn with_connector(s: S, connector: C) -> HttpsConnector<S, C> {$/;"	P	implementation:HttpsConnector
with_defaults	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn with_defaults<S: Into<String>>(n: S) -> Self {$/;"	P	implementation:App
with_delay_ms	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/notify-4.0.15/src/poll.rs	/^    pub fn with_delay_ms(tx: Sender<RawEvent>, delay: u32) -> Result<PollWatcher> {$/;"	P	implementation:PollWatcher
with_description	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn with_description(description: &str, kind: ErrorKind) -> Self {$/;"	P	implementation:Error
with_err_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^    fn with_err_path<F, P>(self, path: F) -> Self$/;"	P	implementation:Result
with_err_path	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/error.rs	/^    fn with_err_path<F, P>(self, path: F) -> Self$/;"	P	interface:IoResultExt
with_formatter	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    pub fn with_formatter(writer: W, formatter: F) -> Self {$/;"	f
with_headers_and_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn with_headers_and_message(method: Method, url: Url, headers: Headers,  message: Box<Ht/;"	P	implementation:Request
with_http_proxy	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn with_http_proxy<H>(host: H, port: u16) -> Client$/;"	P	implementation:Client
with_input	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub fn with_input(input: &[u8]) -> MockStream {$/;"	P	implementation:MockStream
with_listener	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    pub fn with_listener(listener: HttpListener, ssl: S) -> HttpsListener<S> {$/;"	P	implementation:HttpsListener
with_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    pub fn with_message(method: Method, url: Url, message: Box<HttpMessage>)$/;"	P	implementation:Request
with_message	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/response.rs	/^    pub fn with_message(url: Url, mut message: Box<HttpMessage>) -> ::Result<Response> {$/;"	P	implementation:Response
with_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/meta.rs	/^    pub fn with_name(s: String) -> Self {$/;"	P	implementation:AppMeta
with_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn with_name(n: String) -> Self {$/;"	f
with_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/arg.rs	/^    pub fn with_name(n: &'a str) -> Self {$/;"	P	implementation:Arg
with_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/group.rs	/^    pub fn with_name(n: &'a str) -> Self {$/;"	P	implementation:ArgGroup
with_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/subcommand.rs	/^    pub fn with_name<'b>(name: &str) -> App<'a, 'b> {$/;"	P	implementation:SubCommand
with_pool_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn with_pool_config(config: pool::Config) -> Client {$/;"	P	implementation:Client
with_protocol	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn with_protocol<P: Protocol + Send + Sync + 'static>(protocol: P) -> Client {$/;"	P	implementation:Client
with_proxy_config	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    pub fn with_proxy_config<C, S>(proxy_config: ProxyConfig<C, S>) -> Client$/;"	P	implementation:Client
with_record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn with_record<F>($/;"	P	implementation:TermDecorator
with_record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn with_record<F>($/;"	P	interface:Decorator
with_record	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn with_record<F>($/;"	f
with_responses	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub fn with_responses(mut responses: Vec<&[u8]>) -> MockStream {$/;"	P	implementation:MockStream
with_stream	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    pub fn with_stream(stream: Box<NetworkStream + Send>) -> Http11Message {$/;"	P	implementation:Http11Message
with_sub	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/service_account.rs	/^    pub fn with_sub(key: ServiceAccountKey, client: C, sub: String) -> ServiceAccountAccess<C> {$/;"	f
wlnerr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! wlnerr($/;"	M
working_flow	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/yup-oauth2-1.0.12/src/device.rs	/^    fn working_flow() {$/;"	f	module:tests
wrap_client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        fn wrap_client(&self, _stream: T, _host: &str) -> ::Result<Self::Stream> {$/;"	P	implementation:no_ssl::Plaintext
wrap_client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn wrap_client(&self, stream: T, _host: &str) -> ::Result<T> {$/;"	P	implementation:MockSsl
wrap_client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn wrap_client(&self, stream: T, host: &str) -> ::Result<Self::Stream>;$/;"	P	interface:SslClient
wrap_client	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn wrap_client(&self, stream: HttpStream, host: &str) -> hyper::Result<WrappedStream> {$/;"	P	implementation:TlsClient
wrap_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^fn wrap_help(help: &str, avail_chars: usize) -> String {$/;"	f
wrap_help_last_word	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn wrap_help_last_word() {$/;"	f	module:test
wrap_server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn wrap_server(&self, stream: T) -> ::Result<Self::Stream>;$/;"	P	interface:SslServer
wrap_server	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn wrap_server(&self, stream: HttpStream) -> hyper::Result<WrappedStream> {$/;"	P	implementation:TlsServer
wrapped	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    wrapped: &'a mut dyn io::Write,$/;"	m	struct:CountingWriter
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/lib.rs	/^pub mod write;$/;"	n
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    fn write(&mut self, input: &[u8]) -> Result<usize> {$/;"	P	implementation:EncoderWriter
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:InterruptingWriter
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:PartialInterruptingWriter
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/cmn.rs	/^    fn write(&mut self, _: &[u8]) -> io::Result<usize> {$/;"	P	implementation:DummyNetworkStream
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/pool.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:PooledStream
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^        fn write(&mut self, _buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:no_ssl::Void
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/proxy.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Proxied
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/request.rs	/^    fn write(&mut self, msg: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Request
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Http11Message
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn write(&mut self, msg: &[u8]) -> io::Result<usize> {$/;"	P	implementation:HttpWriter
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    fn write(&mut self, msg: &[u8]) -> io::Result<usize> {$/;"	P	implementation:MockStream
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub write: Vec<u8>,$/;"	m	struct:MockStream
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn write(&mut self, msg: &[u8]) -> io::Result<usize> {$/;"	P	implementation:HttpStream
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    fn write(&mut self, msg: &[u8]) -> io::Result<usize> {$/;"	P	implementation:HttpsStream
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn write(&mut self, msg: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Response
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:TlsStream
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-rustls-0.6.2/src/lib.rs	/^  fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:WrappedStream
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize> {$/;"	P	implementation:Vec
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize> {$/;"	P	implementation:W
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize>;$/;"	P	interface:Write
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/value/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:WriterFormatter
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:CountingWriter
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:TermRecordDecorator
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn write(&mut self, data: &[u8]) -> io::Result<usize> {$/;"	P	implementation:TestStdoutWriter
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/file/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:NamedTempFile
write	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.1.0/src/spooled.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:SpooledTempFile
write_1_chunk_and_partial_encodes_only_complete_chunk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn write_1_chunk_and_partial_encodes_only_complete_chunk() {$/;"	f
write_1_chunk_encodes_complete_chunk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn write_1_chunk_encodes_complete_chunk() {$/;"	f
write_2_partials_to_exactly_complete_chunk_encodes_complete_chunk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn write_2_partials_to_exactly_complete_chunk_encodes_complete_chunk() {$/;"	f
write_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn write_all(&mut self, buf: &[u8]) -> Result<()> {$/;"	P	implementation:Vec
write_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn write_all(&mut self, buf: &[u8]) -> Result<()> {$/;"	P	implementation:W
write_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/io/core.rs	/^    fn write_all(&mut self, buf: &[u8]) -> Result<()> {$/;"	P	interface:Write
write_all	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/slog-term-2.6.0/src/lib.rs	/^    fn write_all(&mut self, buf: &[u8]) -> io::Result<()> {$/;"	P	implementation:CountingWriter
write_all_args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn write_all_args(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	P	implementation:Help
write_all_encoded_output	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    fn write_all_encoded_output(&mut self) -> Result<()> {$/;"	P	implementation:EncoderWriter
write_app_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn write_app_help(w: &'a mut Write, app: &App, use_long: bool) -> ClapResult<()> {$/;"	P	implementation:Help
write_arg	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn write_arg<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {$/;"	P	implementation:Help
write_args	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn write_args<'b: 'd, 'c: 'd, 'd, I: 'd>(&mut self, args: I) -> io::Result<()>$/;"	P	implementation:Help
write_args_unsorted	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn write_args_unsorted<'b: 'd, 'c: 'd, 'd, I: 'd>(&mut self, args: I) -> io::Result<()>$/;"	P	implementation:Help
write_before_after_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn write_before_after_help(&mut self, h: &str) -> io::Result<()> {$/;"	P	implementation:Help
write_bin_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn write_bin_name(&mut self, parser: &Parser) -> io::Result<()> {$/;"	P	implementation:Help
write_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_bool<W>(&mut self, writer: &mut W, value: bool) -> io::Result<()>$/;"	P	interface:Formatter
write_char_escape	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_char_escape<W>(&mut self, writer: &mut W, char_escape: CharEscape) -> io::Result<()/;"	P	interface:Formatter
write_default_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn write_default_help(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	P	implementation:Help
write_encoded_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn write_encoded_bytes(&mut self, encoded: &[u8]) -> Result<(), Self::Error>;$/;"	P	interface:Sink
write_encoded_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/chunked_encoder.rs	/^    fn write_encoded_bytes(&mut self, s: &[u8]) -> Result<(), Self::Error> {$/;"	P	implementation:StringSink
write_encoded_bytes	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/display.rs	/^    fn write_encoded_bytes(&mut self, encoded: &[u8]) -> Result<(), Self::Error> {$/;"	P	implementation:FormatterSink
write_f32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_f32<W>(&mut self, writer: &mut W, value: f32) -> io::Result<()>$/;"	P	interface:Formatter
write_f64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_f64<W>(&mut self, writer: &mut W, value: f64) -> io::Result<()>$/;"	P	interface:Formatter
write_h1	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/internals/item.rs	/^    pub fn write_h1(&self, f: &mut MultilineFormatter) -> fmt::Result {$/;"	P	implementation:Item
write_head	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/server/response.rs	/^    fn write_head(&mut self) -> io::Result<Body> {$/;"	P	implementation:Response
write_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn write_help(&mut self, parser: &Parser) -> ClapResult<()> {$/;"	P	implementation:Help
write_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn write_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn write_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_help_err	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn write_help_err<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_i16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_i16<W>(&mut self, writer: &mut W, value: i16) -> io::Result<()>$/;"	P	interface:Formatter
write_i32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_i32<W>(&mut self, writer: &mut W, value: i32) -> io::Result<()>$/;"	P	interface:Formatter
write_i64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_i64<W>(&mut self, writer: &mut W, value: i64) -> io::Result<()>$/;"	P	interface:Formatter
write_i8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_i8<W>(&mut self, writer: &mut W, value: i8) -> io::Result<()>$/;"	P	interface:Formatter
write_long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn write_long_help<W: Write>(&mut self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_long_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn write_long_help<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	f
write_long_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn write_long_version<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_name	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^        macro_rules! write_name {$/;"	M	method:Help::write_bin_name
write_nspaces	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/macros.rs	/^macro_rules! write_nspaces {$/;"	M
write_null	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_null<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	P	interface:Formatter
write_number_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_number_str<W>(&mut self, writer: &mut W, value: &str) -> io::Result<()>$/;"	P	interface:Formatter
write_parser_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn write_parser_help(w: &'a mut Write, parser: &Parser, use_long: bool) -> ClapResult<()/;"	P	implementation:Help
write_parser_help_to_stderr	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    pub fn write_parser_help_to_stderr(w: &'a mut Write, parser: &Parser) -> ClapResult<()> {$/;"	P	implementation:Help
write_partial_chunk_encodes_partial_chunk	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn write_partial_chunk_encodes_partial_chunk() {$/;"	f
write_partial_then_enough_to_complete_chunk_and_another_chunk_and_another_partial_chunk_encodes_only_complete_chunks	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn write_partial_then_enough_to_complete_chunk_and_another_chunk_and_another_partial_chunk_encod/;"	f
write_partial_then_enough_to_complete_chunk_and_another_chunk_encodes_complete_chunks	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn write_partial_then_enough_to_complete_chunk_and_another_chunk_encodes_complete_chunks() {$/;"	f
write_partial_then_enough_to_complete_chunk_but_not_complete_another_chunk_encodes_complete_chunk_without_consuming_remaining	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn write_partial_then_enough_to_complete_chunk_but_not_complete_another_chunk_encodes_complete_c/;"	f
write_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/header/mod.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:NewlineReplacer
write_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^            fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f	function:collect_str
write_string_fragment	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_string_fragment<W>(&mut self, writer: &mut W, fragment: &str) -> io::Result<()>$/;"	P	interface:Formatter
write_subcommands	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn write_subcommands(&mut self, parser: &Parser) -> io::Result<()> {$/;"	P	implementation:Help
write_templated_help	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn write_templated_help(&mut self, parser: &Parser, template: &str) -> ClapResult<()> {$/;"	P	implementation:Help
write_thing	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^        macro_rules! write_thing {$/;"	M	method:Help::write_default_help
write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/client/mod.rs	/^    write_timeout: Option<Duration>,$/;"	m	struct:Client
write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/mock.rs	/^    pub write_timeout: Cell<Option<Duration>>,$/;"	m	struct:MockStream
write_timeout	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/net.rs	/^    write_timeout: Option<Duration>,$/;"	m	struct:HttpListener
write_to	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn write_to<W: Write>(&self, w: &mut W) -> io::Result<()> {$/;"	P	implementation:Error
write_to_delegate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder.rs	/^    fn write_to_delegate(&mut self, current_output_len: usize) -> Result<()> {$/;"	P	implementation:EncoderWriter
write_u16	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_u16<W>(&mut self, writer: &mut W, value: u16) -> io::Result<()>$/;"	P	interface:Formatter
write_u32	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_u32<W>(&mut self, writer: &mut W, value: u32) -> io::Result<()>$/;"	P	interface:Formatter
write_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/decode.rs	/^fn write_u64(output: &mut [u8], value: u64) {$/;"	f
write_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_u64<W>(&mut self, writer: &mut W, value: u64) -> io::Result<()>$/;"	P	interface:Formatter
write_u8	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    fn write_u8<W>(&mut self, writer: &mut W, value: u8) -> io::Result<()>$/;"	P	interface:Formatter
write_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    fn write_version(&mut self, parser: &Parser) -> io::Result<()> {$/;"	P	implementation:Help
write_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^    pub fn write_version<W: Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_version	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/parser.rs	/^    pub fn write_version<W: Write>(&self, w: &mut W, use_long: bool) -> io::Result<()> {$/;"	f
writer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/help.rs	/^    writer: &'a mut Write,$/;"	m	struct:Help
writer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^            writer: &'ser mut W,$/;"	m	struct:collect_str::Adapter
writer	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.57/src/ser.rs	/^    writer: W,$/;"	m	struct:Serializer
writer_mut	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/hyper-0.10.16/src/http/h1.rs	/^    fn writer_mut(&mut self) -> Option<&mut HttpWriter<BufWriter<Box<NetworkStream + Send>>>> {$/;"	P	implementation:Stream
writers_can_share	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub writers_can_share: Option<bool>,$/;"	m	struct:File
writes_that_only_write_part_of_input_and_sometimes_interrupt_produce_correct_encoded_data	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.12.3/src/write/encoder_tests.rs	/^fn writes_that_only_write_part_of_input_and_sometimes_interrupt_produce_correct_encoded_data() {$/;"	f
wrong_number_of_values	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/errors.rs	/^    pub fn wrong_number_of_values<S, U>($/;"	P	implementation:Error
x_coordinate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub x_coordinate: Option<f32>,$/;"	m	struct:DriveBackgroundImageFile
x_coordinate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub x_coordinate: Option<f32>,$/;"	m	struct:TeamDriveBackgroundImageFile
y_coordinate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub y_coordinate: Option<f32>,$/;"	m	struct:DriveBackgroundImageFile
y_coordinate	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/google-drive3-1.0.14+20200618/src/lib.rs	/^    pub y_coordinate: Option<f32>,$/;"	m	struct:TeamDriveBackgroundImageFile
yaml_opt_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_opt_str {$/;"	M
yaml_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/mod.rs	/^        macro_rules! yaml_str {$/;"	M	method:App::from
yaml_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_str {$/;"	M
yaml_to_bool	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_to_bool {$/;"	M
yaml_to_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_to_str {$/;"	M
yaml_to_u64	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_to_u64 {$/;"	M
yaml_to_usize	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_to_usize {$/;"	M
yaml_tuple2	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_tuple2 {$/;"	M
yaml_tuple3	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_tuple3 {$/;"	M
yaml_vec_or_str	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/args/macros.rs	/^macro_rules! yaml_vec_or_str {$/;"	M
zeroed	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/app/settings.rs	/^    pub fn zeroed() -> Self {$/;"	P	implementation:AppFlags
zsh	/home/alan/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.2/src/completions/mod.rs	/^mod zsh;$/;"	n
